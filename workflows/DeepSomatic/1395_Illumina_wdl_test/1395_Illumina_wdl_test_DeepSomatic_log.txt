[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/reference/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/reference/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/reference/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/reference/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.wdl.wdltoil] Imported file:///private/groups/patenlab/jimin/data/bams/illumina_bams/1395/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil] Running Toil version 7.0.0-d569ea5711eb310ffd5703803f7250ebf7c19576 on host phoenix-20.prism.
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.leader] 0 jobs are running, 0 jobs are issued and waiting to run
[2025-04-05T18:55:40-0700] [MainThread] [I] [toil.leader] Issued job 'WDLTaskJob' DeepSomatic.deepSomatic.command kind-WDLTaskJob/instance-4uhbm1v4 v1 with job batch system ID: 2 and disk: 238.4 Gi, memory: 238.4 Gi, cores: 64.0, accelerators: [], preemptible: False
[2025-04-05T19:35:51-0700] [Thread-3 (statsAndLoggingAggregator)] [I] [toil.statsAndLogging] DeepSomatic.deepSomatic.stderr follows:
=========>
	+ [[ --regions=chr1 == '' ]]
	+ ADDITIONAL_ARGS=--regions=chr1
	+ run_deepsomatic --model_type=WGS --ref=/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna --reads_normal=/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam --reads_tumor=/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam --output_vcf=1395_Illumina_wdl_test.vcf.gz --num_shards=64 --logging_dir=logs --sample_name_tumor=1395_Illumina_tumor --sample_name_normal=1395_Illumina_normal --regions=chr1
	2025-04-05 19:00:07.554984: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
	To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
	2025-04-05 19:00:08.019857: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
	2025-04-05 19:00:08.194017: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:08.194066: I tensorflow/compiler/xla/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
	2025-04-05 19:00:10.598769: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:10.602508: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:10.602518: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:13.935084: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:13.935150: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:13.935175: I tensorflow/compiler/xla/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (phoenix-20.prism): /proc/driver/nvidia/version does not exist
	I0405 19:00:13.935491 140279098081280 run_deepsomatic.py:727] Re-using the directory for intermediate results in /tmp/tmpjerb65j8
	I0405 19:00:13.935775 140279098081280 run_deepsomatic.py:931] Creating a directory for logs in logs
	I0405 19:00:13.936009 140279098081280 run_deepsomatic.py:940] env = {'PYTHON_VERSION': '3.10', 'SINGULARITY_NAME': 'docker___google_deepsomatic_1.7.0.sif', 'DV_GPU_BUILD': '0', 'SINGULARITY_ENVIRONMENT': '/.singularity.d/env/91-environment.sh', 'PWD': '/mnt/miniwdl_task_container/work', 'VERSION_DEEPSOMATIC': '1.7.0', 'TF_ENABLE_ONEDNN_OPTS': '1', '_': '/usr/bin/python3', 'HOME': '/private/home/jpark621', 'LANG': 'C', 'SINGULARITY_CONTAINER': '/private/home/jpark621/.cache/miniwdl/docker___google_deepsomatic_1.7.0.sif', 'PROMPT_COMMAND': 'PS1="Singularity> "; unset PROMPT_COMMAND', 'CUDA_VISIBLE_DEVICES': '', 'TERM': 'screen.xterm-256color', 'SHLVL': '2', 'SINGULARITY_BIND': '/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/stdout.txt:/mnt/miniwdl_task_container/stdout.txt,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/stderr.txt:/mnt/miniwdl_task_container/stderr.txt,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/work:/mnt/miniwdl_task_container/work,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/command:/mnt/miniwdl_task_container/command:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/5ca0c716-1c30-400a-b63c-d088aa7f4c80/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/5ca0c716-1c30-400a-b63c-d088aa7f4c80/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna:/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/_singularity_tmpdir_rvs2892j/tmp:/tmp,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/_singularity_tmpdir_rvs2892j/var_tmp:/var/tmp', 'LD_LIBRARY_PATH': '/.singularity.d/libs', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/deepvariant/bin/deepsomatic:/opt/deepvariant/bin', 'SINGULARITY_COMMAND': 'exec', 'LC_CTYPE': 'C.UTF-8', 'TPU_ML_PLATFORM': 'Tensorflow', 'TF2_BEHAVIOR': '1', 'TF_CPP_MIN_LOG_LEVEL': '1'}
<=========
[2025-04-05T19:35:51-0700] [Thread-3 (statsAndLoggingAggregator)] [I] [toil.statsAndLogging] DeepSomatic.deepSomatic.stdout follows:
=========>
	
	***** Intermediate results will be written to /tmp/tmpjerb65j8 in docker. ****
	
	
	***** Running the command:*****
	time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples_somatic --mode calling --ref "/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna" --reads_tumor "/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam" --reads_normal "/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam" --examples "/tmp/tmpjerb65j8/make_examples_somatic.tfrecord@64.gz" --checkpoint "/opt/models/deepsomatic/wgs" --regions "chr1" --sample_name_normal "1395_Illumina_normal" --sample_name_tumor "1395_Illumina_tumor" --vsc_max_fraction_indels_for_non_target_sample "0.5" --vsc_max_fraction_snps_for_non_target_sample "0.5" --vsc_min_fraction_indels "0.05" --vsc_min_fraction_snps "0.029" --task {}
	
	2025-04-05 19:00:17.574830: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:17.657397: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:17.983896: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:18.345000: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:18.423102: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:19.736952: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:20.669246: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:20.705246: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:20.695719: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.146847: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.189468: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.315559: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.315613: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.315619: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:21.297024: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.560082: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:21.980509: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:22.067428: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:22.084584: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:22.361272: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:22.435298: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:22.923027: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:23.178705: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:23.176466: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:23.668424: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:23.668490: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:23.668496: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:23.991610: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:24.721873: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:24.721945: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:24.721952: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:24.751770: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.410917: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.410970: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.410975: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:25.426987: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.427049: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.427056: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:25.462997: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.761639: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:25.868892: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:26.031385: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:26.124282: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:26.124350: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:26.124358: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:26.365896: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:26.534272: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.005320: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.005436: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.005447: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.070985: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.071079: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.071087: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.091223: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.097240: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.121121: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.138902: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.250125: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.248729: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.280751: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.287445: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.287648: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.302538: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.323641: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.327137: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.325377: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.353570: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.365364: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.426485: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.438836: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.443054: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.448007: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.452622: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.453643: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.457498: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.455404: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.466746: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.469686: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.507699: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.538207: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.537567: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.559888: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.562765: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.583465: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.605286: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.605372: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.605381: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.637989: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.638094: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.638106: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.660687: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.696084: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.706671: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.723347: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.723420: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.723427: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.735844: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.781917: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.782012: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.782023: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.909939: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.910015: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.910022: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.930164: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.930276: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.930287: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.934836: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.934941: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.934953: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.952802: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.952881: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.952888: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.957895: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.957990: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.957998: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.971068: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.971164: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.971172: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.986416: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.986527: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.986536: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:27.994081: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.994175: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:27.994184: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.041220: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.041314: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.041323: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.094797: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.094910: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.094920: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.093386: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.093493: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.093504: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.094623: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.094713: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.094721: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.096954: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.097039: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.097047: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.097023: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.097105: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.097113: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.175064: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.175155: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.175163: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.175197: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.175255: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.175262: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.446115: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.446197: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.446206: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.460971: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.461063: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.461071: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.498881: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.498979: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.498989: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.594424: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.594486: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.594492: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.648720: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.648776: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.648783: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.680475: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.680528: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.680533: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.898220: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.898291: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.898299: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.937568: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.937628: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.937633: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:28.978566: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.978625: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:28.978630: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.020161: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.020218: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.020224: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.050596: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.050653: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.050658: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.345247: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.345308: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.345314: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.949741: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.949833: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.949841: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.933433: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.933522: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.933533: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:29.928246: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.928360: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:29.928371: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.030110: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.030211: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.030222: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.019794: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.019912: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.019926: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:30.094245: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.094340: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.094350: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.089634: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.089753: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.089765: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.086032: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.086149: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.086163: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.078405: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.078481: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.078489: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.106256: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.106380: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.106394: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.126486: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.126586: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.126596: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.132281: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.132372: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.132381: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.136570: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.136652: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.136659: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.134170: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.134244: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.134251: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.136604: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.136675: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.136682: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.134693: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.134809: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.134824: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.133657: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.133750: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.133761: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.141146: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.141237: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.141247: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.138743: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.138861: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.138872: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.149012: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.149090: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.149097: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.155564: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.155641: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.155649: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.161724: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.161833: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.161844: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.165520: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.165604: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.165616: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:00:30.170496: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.170611: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:30.170624: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:31.183958: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.183980: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:31.183801: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.183823: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:31.238190 140601925828608 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:31.288365 140601925828608 make_examples_core.py:321] Task 9/64: Preparing inputs
	I0405 19:00:31.302133 139870741843968 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:31.324440: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.324462: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:31.325829 140545069715456 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:31.325400 139870741843968 make_examples_core.py:321] Task 13/64: Preparing inputs
	I0405 19:00:31.349546 140545069715456 make_examples_core.py:321] Task 5/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:31.490478 139870741843968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:31.492615 140545069715456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:31.510705 140601925828608 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:31.511804 139870741843968 make_examples_core.py:321] Task 13/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:31.516482 140545069715456 make_examples_core.py:321] Task 5/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:31.526446: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.526473: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:31.527972 139861846466560 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:31.546849 140601925828608 make_examples_core.py:321] Task 9/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:31.550416 139861846466560 make_examples_core.py:321] Task 2/64: Preparing inputs
	I0405 19:00:31.579862 139861846466560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:31.601842 139861846466560 make_examples_core.py:321] Task 2/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:31.806512: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.806536: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:31.808194 139958181376000 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:31.852418 139958181376000 make_examples_core.py:321] Task 1/64: Preparing inputs
	I0405 19:00:31.884484 139958181376000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:31.907006 139958181376000 make_examples_core.py:321] Task 1/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:31.955220: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:31.955243: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:31.956659 139837493678080 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:31.998746 139837493678080 make_examples_core.py:321] Task 53/64: Preparing inputs
	I0405 19:00:32.027892 139837493678080 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:32.049934 139837493678080 make_examples_core.py:321] Task 53/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:32.294356: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.294384: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.296077 140283220058112 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:32.318716: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.318742: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.320589 139734917296128 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:32.356075 139734917296128 make_examples_core.py:321] Task 6/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.354716 140283220058112 make_examples_core.py:321] Task 60/64: Preparing inputs
	I0405 19:00:32.392768 139734917296128 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:32.391463 140283220058112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:32.419564 140283220058112 make_examples_core.py:321] Task 60/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:32.421073 139734917296128 make_examples_core.py:321] Task 6/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:32.562942: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.562966: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.564841 139784403828736 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.616200 139784403828736 make_examples_core.py:321] Task 4/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.654197 139784403828736 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.684088 139784403828736 make_examples_core.py:321] Task 4/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:32.795625: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.795649: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.797472 139634635714560 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:32.826314 139634635714560 make_examples_core.py:321] Task 38/64: Preparing inputs
	2025-04-05 19:00:32.865248: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.865277: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.864229 139634635714560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:32.867110 140346939555840 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:32.891774: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.891807: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.893569 139640432857088 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:32.893280 139634635714560 make_examples_core.py:321] Task 38/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:32.920094 140346939555840 make_examples_core.py:321] Task 18/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.940600 139640432857088 make_examples_core.py:321] Task 19/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.958880 140346939555840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.978778 139640432857088 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:32.981747: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:32.981771: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:32.983636 140655090475008 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:32.989182 140346939555840 make_examples_core.py:321] Task 18/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.002432: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.002459: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.004435 140631264624640 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.008499 139640432857088 make_examples_core.py:321] Task 19/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.013369 140655090475008 make_examples_core.py:321] Task 29/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.051102 140655090475008 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.051808 140631264624640 make_examples_core.py:321] Task 10/64: Preparing inputs
	I0405 19:00:33.080718 140655090475008 make_examples_core.py:321] Task 29/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.089767 140631264624640 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.119650 140631264624640 make_examples_core.py:321] Task 10/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:33.156984: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.157011: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.158931 140389708357632 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.162738: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.162763: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.164648 140270863183872 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.180930: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.180956: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.182772 140060365164544 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.185519: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.185547: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.187346 140314552401920 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.190617: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.190643: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.191909: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.191933: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.193779 139704442609664 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.192585 140110272163840 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.194021 140270863183872 make_examples_core.py:321] Task 8/64: Preparing inputs
	2025-04-05 19:00:33.194824: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.194845: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.196617: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	I0405 19:00:33.196735 139836317560832 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.196648: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.198512 140306755162112 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.199006: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.199032: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.200940 139954167652352 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.202717: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.202742: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.204617 140403951493120 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.208207: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.208230: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.210139 139768521895936 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.210333: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.210358: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.212266 139665467392000 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.211620: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.211653: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.213543 140477545705472 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.218639: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.218663: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.220578 139843433730048 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.221369 140060365164544 make_examples_core.py:321] Task 56/64: Preparing inputs
	I0405 19:00:33.221598 140389708357632 make_examples_core.py:321] Task 12/64: Preparing inputs
	2025-04-05 19:00:33.223608: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.223630: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.225483 140163637604352 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.227950 140314552401920 make_examples_core.py:321] Task 41/64: Preparing inputs
	I0405 19:00:33.232792 140270863183872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.236727 139704442609664 make_examples_core.py:321] Task 30/64: Preparing inputs
	I0405 19:00:33.236777 140110272163840 make_examples_core.py:321] Task 16/64: Preparing inputs
	I0405 19:00:33.238631 139836317560832 make_examples_core.py:321] Task 26/64: Preparing inputs
	I0405 19:00:33.245322 139954167652352 make_examples_core.py:321] Task 28/64: Preparing inputs
	I0405 19:00:33.246448 140306755162112 make_examples_core.py:321] Task 50/64: Preparing inputs
	I0405 19:00:33.248879 140403951493120 make_examples_core.py:321] Task 59/64: Preparing inputs
	2025-04-05 19:00:33.248966: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.248991: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.250865 140505173221376 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.251039: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.251060: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.251609 139768521895936 make_examples_core.py:321] Task 57/64: Preparing inputs
	2025-04-05 19:00:33.250671: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.250698: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.252922 140227901517824 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.252613 139708054331392 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.254326 139665467392000 make_examples_core.py:321] Task 58/64: Preparing inputs
	I0405 19:00:33.255353 140477545705472 make_examples_core.py:321] Task 49/64: Preparing inputs
	2025-04-05 19:00:33.257977: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.258008: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.259242 139843433730048 make_examples_core.py:321] Task 15/64: Preparing inputs
	I0405 19:00:33.260289 140060365164544 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.260757 140389708357632 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.260266 139774103187456 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.261770 140163637604352 make_examples_core.py:321] Task 11/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.262399 140270863183872 make_examples_core.py:321] Task 8/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.263790: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.263817: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.265765 139966317248512 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.267265 140314552401920 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.267209: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.267233: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.269181 140363231965184 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.273690: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.273715: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.275629 140694922235904 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.276087 139704442609664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.276724 140110272163840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.277792 139836317560832 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.284662 139954167652352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.286512 140306755162112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.288445 140403951493120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.289188 139708054331392 make_examples_core.py:321] Task 55/64: Preparing inputs
	I0405 19:00:33.289187 140227901517824 make_examples_core.py:321] Task 40/64: Preparing inputs
	I0405 19:00:33.291080 139768521895936 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.290577 140060365164544 make_examples_core.py:321] Task 56/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.290952 140389708357632 make_examples_core.py:321] Task 12/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.294049 139665467392000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.294942 140477545705472 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.293709 140505173221376 make_examples_core.py:321] Task 61/64: Preparing inputs
	I0405 19:00:33.297215 140314552401920 make_examples_core.py:321] Task 41/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.297869 139774103187456 make_examples_core.py:321] Task 36/64: Preparing inputs
	I0405 19:00:33.299104 139843433730048 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.300578 139966317248512 make_examples_core.py:321] Task 7/64: Preparing inputs
	I0405 19:00:33.301134 140163637604352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.306108 139704442609664 make_examples_core.py:321] Task 30/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.306402 140363231965184 make_examples_core.py:321] Task 17/64: Preparing inputs
	I0405 19:00:33.307110 140110272163840 make_examples_core.py:321] Task 16/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.308052 139836317560832 make_examples_core.py:321] Task 26/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.310342 140694922235904 make_examples_core.py:321] Task 31/64: Preparing inputs
	I0405 19:00:33.315747 139954167652352 make_examples_core.py:321] Task 28/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.317529 140306755162112 make_examples_core.py:321] Task 50/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.319665 140403951493120 make_examples_core.py:321] Task 59/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.322146 139768521895936 make_examples_core.py:321] Task 57/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.325876 139665467392000 make_examples_core.py:321] Task 58/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.325739 140477545705472 make_examples_core.py:321] Task 49/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.329114 139708054331392 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.329987 139843433730048 make_examples_core.py:321] Task 15/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.331835 140163637604352 make_examples_core.py:321] Task 11/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.332640 140227901517824 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.337278: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.337302: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.337836: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.337866: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.337819 139774103187456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.339175 140312747966464 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.339862 140375919124480 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.341381 140505173221376 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.340703 139966317248512 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.347777 140363231965184 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.350653 140694922235904 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.353227: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.353252: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.355112 140525544685568 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.359897 139708054331392 make_examples_core.py:321] Task 55/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.363915 140227901517824 make_examples_core.py:321] Task 40/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.368124 139774103187456 make_examples_core.py:321] Task 36/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.371998 139966317248512 make_examples_core.py:321] Task 7/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.373312 140312747966464 make_examples_core.py:321] Task 35/64: Preparing inputs
	I0405 19:00:33.373640 140375919124480 make_examples_core.py:321] Task 44/64: Preparing inputs
	I0405 19:00:33.375566 140505173221376 make_examples_core.py:321] Task 61/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.378037 140363231965184 make_examples_core.py:321] Task 17/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.382119 140694922235904 make_examples_core.py:321] Task 31/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.386161 140525544685568 make_examples_core.py:321] Task 22/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.412320 140312747966464 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.412991 140375919124480 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.425193 140525544685568 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.443286 140312747966464 make_examples_core.py:321] Task 35/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.442357 140375919124480 make_examples_core.py:321] Task 44/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.456139 140525544685568 make_examples_core.py:321] Task 22/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.460021: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.460048: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.461862 140131123752960 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.470572: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.470605: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.470205: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.470232: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.472397 140717129015296 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.472043 140154402775040 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.503567 140154402775040 make_examples_core.py:321] Task 39/64: Preparing inputs
	I0405 19:00:33.515752 140131123752960 make_examples_core.py:321] Task 23/64: Preparing inputs
	I0405 19:00:33.529181 140717129015296 make_examples_core.py:321] Task 32/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.545230 140154402775040 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.554810 140131123752960 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.568454 140717129015296 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.578745 140154402775040 make_examples_core.py:321] Task 39/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.584636 140131123752960 make_examples_core.py:321] Task 23/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.598800 140717129015296 make_examples_core.py:321] Task 32/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:33.667548: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.667586: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.670471 140714328625152 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.716139 140714328625152 make_examples_core.py:321] Task 42/64: Preparing inputs
	2025-04-05 19:00:33.740336: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.740371: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.742305 140535564201984 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.772354 140714328625152 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.772845 140535564201984 make_examples_core.py:321] Task 21/64: Preparing inputs
	2025-04-05 19:00:33.792873: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.792905: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.794700 139712801439744 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.799358: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.799385: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.801356 139796750065664 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.812827 140535564201984 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.818762 140714328625152 make_examples_core.py:321] Task 42/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.822693: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.822716: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.824682: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.824707: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.824649 140294693892096 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.826620 139684300988416 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.827203 139712801439744 make_examples_core.py:321] Task 51/64: Preparing inputs
	I0405 19:00:33.833520 139796750065664 make_examples_core.py:321] Task 24/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.842751 140535564201984 make_examples_core.py:321] Task 21/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.847899: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.847932: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.849847 140193283088384 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:33.850540: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.850578: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.852541 140581680250880 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.857177 140294693892096 make_examples_core.py:321] Task 33/64: Preparing inputs
	I0405 19:00:33.859069 139684300988416 make_examples_core.py:321] Task 63/64: Preparing inputs
	I0405 19:00:33.866070 139712801439744 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.866753: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.866781: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.866753: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.866778: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.868688 140375203229696 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.868665 139905489895424 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.873137 139796750065664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.880597: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.880627: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	2025-04-05 19:00:33.881255: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.881285: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.882438 140258039394304 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.883136 139665780047872 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.883507 140193283088384 make_examples_core.py:321] Task 34/64: Preparing inputs
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	I0405 19:00:33.886603 140581680250880 make_examples_core.py:321] Task 48/64: Preparing inputs
	2025-04-05 19:00:33.887938: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.887971: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.889888 139814879457280 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.895410 139712801439744 make_examples_core.py:321] Task 51/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.896225 140294693892096 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.898509 139684300988416 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.901057 140375203229696 make_examples_core.py:321] Task 43/64: Preparing inputs
	I0405 19:00:33.901057 139905489895424 make_examples_core.py:321] Task 54/64: Preparing inputs
	I0405 19:00:33.903130 139796750065664 make_examples_core.py:321] Task 24/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.917033 140258039394304 make_examples_core.py:321] Task 46/64: Preparing inputs
	I0405 19:00:33.918514 139665780047872 make_examples_core.py:321] Task 47/64: Preparing inputs
	2025-04-05 19:00:33.919635: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.919665: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.921491 140134123397120 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.922986 139814879457280 make_examples_core.py:321] Task 0/64: Preparing inputs
	I0405 19:00:33.923257 140193283088384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.926685 140294693892096 make_examples_core.py:321] Task 33/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.926499 140581680250880 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.929890 139684300988416 make_examples_core.py:321] Task 63/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.941316 140375203229696 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.941316 139905489895424 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.950228 140134123397120 make_examples_core.py:321] Task 20/64: Preparing inputs
	2025-04-05 19:00:33.951411: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.951435: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.953268 139625441087488 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.954369 140193283088384 make_examples_core.py:321] Task 34/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	2025-04-05 19:00:33.955584: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.955600: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.956110 140258039394304 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.957397 140581680250880 make_examples_core.py:321] Task 48/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.957421 139735622483968 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.958329 139665780047872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.962531 139814879457280 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:33.969325: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:33.969351: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:33.972059 140375203229696 make_examples_core.py:321] Task 43/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.971197 139897224224768 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:33.971631 139905489895424 make_examples_core.py:321] Task 54/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.982519 139625441087488 make_examples_core.py:321] Task 14/64: Preparing inputs
	I0405 19:00:33.984787 139735622483968 make_examples_core.py:321] Task 62/64: Preparing inputs
	I0405 19:00:33.986614 140258039394304 make_examples_core.py:321] Task 46/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.989464 140134123397120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:33.989841 139665780047872 make_examples_core.py:321] Task 47/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:33.993828 139814879457280 make_examples_core.py:321] Task 0/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.001382 139897224224768 make_examples_core.py:321] Task 52/64: Preparing inputs
	I0405 19:00:34.020705 140134123397120 make_examples_core.py:321] Task 20/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.022165 139625441087488 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.024224 139735622483968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	2025-04-05 19:00:34.026714: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:34.026742: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:34.028685 139997710905344 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:34.038422: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:34.038448: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:34.040307 140574414864384 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:34.040824 139897224224768 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.051505 139625441087488 make_examples_core.py:321] Task 14/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.054639 139735622483968 make_examples_core.py:321] Task 62/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.061119 139997710905344 make_examples_core.py:321] Task 45/64: Preparing inputs
	2025-04-05 19:00:34.068698: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:34.068724: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:34.070697 140574414864384 make_examples_core.py:321] Task 37/64: Preparing inputs
	I0405 19:00:34.070684 139897224224768 make_examples_core.py:321] Task 52/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.070500 140153868943360 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	2025-04-05 19:00:34.074805: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:34.074828: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:34.076627 139865017016320 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:34.100142 139997710905344 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.101660 140153868943360 make_examples_core.py:321] Task 27/64: Preparing inputs
	I0405 19:00:34.107419 139865017016320 make_examples_core.py:321] Task 25/64: Preparing inputs
	I0405 19:00:34.109829 140574414864384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.130993 139997710905344 make_examples_core.py:321] Task 45/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.140826 140153868943360 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.140662 140574414864384 make_examples_core.py:321] Task 37/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.146694 139865017016320 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.172587 140153868943360 make_examples_core.py:321] Task 27/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:34.176651 139865017016320 make_examples_core.py:321] Task 25/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:00:34.505591: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:00:34.505633: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:00:34.508658 140526383112192 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:00:34.551776 140526383112192 make_examples_core.py:321] Task 3/64: Preparing inputs
	I0405 19:00:34.610732 140526383112192 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:34.661305 140526383112192 make_examples_core.py:321] Task 3/64: Common contigs are ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrX', 'chrY', 'chrM']
	I0405 19:00:50.822220 139870741843968 make_examples_core.py:321] Task 13/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.164651 139870741843968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.288496 139870741843968 make_examples_core.py:321] Task 13/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.536820 139870741843968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:50.953310 139861846466560 make_examples_core.py:321] Task 2/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.344564 139861846466560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.464546 139861846466560 make_examples_core.py:321] Task 2/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.424724 139837493678080 make_examples_core.py:321] Task 53/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.523998 139837493678080 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:50.947657 140601925828608 make_examples_core.py:321] Task 9/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.191860 140601925828608 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.312091 140601925828608 make_examples_core.py:321] Task 9/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.620498 140601925828608 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.204018 139958181376000 make_examples_core.py:321] Task 1/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.415963 139958181376000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.535337 139958181376000 make_examples_core.py:321] Task 1/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:50.997739 140545069715456 make_examples_core.py:321] Task 5/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.260074 140545069715456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.382457 140545069715456 make_examples_core.py:321] Task 5/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.990561 139870741843968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.004645 139870741843968 make_examples_core.py:321] Task 13/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00013-of-00064.gz
	I0405 19:00:52.004827 139870741843968 make_examples_core.py:321] Task 13/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.053391 139870741843968 make_examples_core.py:321] Task 13/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:51.705509 139861846466560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.971242 139861846466560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.981033 139861846466560 make_examples_core.py:321] Task 2/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00002-of-00064.gz
	I0405 19:00:51.981190 139861846466560 make_examples_core.py:321] Task 2/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:51.996626 139861846466560 make_examples_core.py:321] Task 2/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:51.645445 139837493678080 make_examples_core.py:321] Task 53/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.970904 139837493678080 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.123283 139837493678080 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.133058 139837493678080 make_examples_core.py:321] Task 53/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00053-of-00064.gz
	I0405 19:00:52.133211 139837493678080 make_examples_core.py:321] Task 53/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:51.988592 139734917296128 make_examples_core.py:321] Task 6/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.093844 139734917296128 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.993462 140601925828608 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.008848 140601925828608 make_examples_core.py:321] Task 9/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00009-of-00064.gz
	I0405 19:00:52.009036 140601925828608 make_examples_core.py:321] Task 9/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.032417 140601925828608 make_examples_core.py:321] Task 9/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:51.882910 139958181376000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.035724 139958181376000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.045269 139958181376000 make_examples_core.py:321] Task 1/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00001-of-00064.gz
	I0405 19:00:52.045432 139958181376000 make_examples_core.py:321] Task 1/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.060873 139958181376000 make_examples_core.py:321] Task 1/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:52.036057 140283220058112 make_examples_core.py:321] Task 60/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:51.796841 140545069715456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.971096 140545069715456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:51.980892 140545069715456 make_examples_core.py:321] Task 5/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00005-of-00064.gz
	I0405 19:00:51.981048 140545069715456 make_examples_core.py:321] Task 5/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:51.999012 140545069715456 make_examples_core.py:321] Task 5/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:52.170315 139837493678080 make_examples_core.py:321] Task 53/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:52.219002 139734917296128 make_examples_core.py:321] Task 6/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.327449 139734917296128 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.363493 139784403828736 make_examples_core.py:321] Task 4/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.166666 140283220058112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.289049 140283220058112 make_examples_core.py:321] Task 60/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.400336 140283220058112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.482892 139734917296128 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.492678 139734917296128 make_examples_core.py:321] Task 6/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00006-of-00064.gz
	I0405 19:00:52.492852 139734917296128 make_examples_core.py:321] Task 6/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.508643 139734917296128 make_examples_core.py:321] Task 6/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:52.573593 140655090475008 make_examples_core.py:321] Task 29/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.533757 139634635714560 make_examples_core.py:321] Task 38/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.458608 140631264624640 make_examples_core.py:321] Task 10/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.565754 140631264624640 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.470703 139784403828736 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.595525 139784403828736 make_examples_core.py:321] Task 4/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.553136 140283220058112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.563105 140283220058112 make_examples_core.py:321] Task 60/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00060-of-00064.gz
	I0405 19:00:52.563289 140283220058112 make_examples_core.py:321] Task 60/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.602797 140283220058112 make_examples_core.py:321] Task 60/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:52.645669 139640432857088 make_examples_core.py:321] Task 19/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.642234 139634635714560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.690639 140631264624640 make_examples_core.py:321] Task 10/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.691494 140060365164544 make_examples_core.py:321] Task 56/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.715275 140346939555840 make_examples_core.py:321] Task 18/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.721752 140655090475008 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.710919 139784403828736 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.730131 140389708357632 make_examples_core.py:321] Task 12/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.705622 140270863183872 make_examples_core.py:321] Task 8/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.762142 139634635714560 make_examples_core.py:321] Task 38/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.792250 139640432857088 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.792966 140631264624640 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.841612 140655090475008 make_examples_core.py:321] Task 29/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.867317 139634635714560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.864508 140060365164544 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.877848 139784403828736 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.889991 139784403828736 make_examples_core.py:321] Task 4/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00004-of-00064.gz
	I0405 19:00:52.890159 139784403828736 make_examples_core.py:321] Task 4/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:52.911526 139784403828736 make_examples_core.py:321] Task 4/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:52.915220 139640432857088 make_examples_core.py:321] Task 19/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:52.938120 140389708357632 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.945896 140655090475008 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.945848 140631264624640 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:52.955717 140631264624640 make_examples_core.py:321] Task 10/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00010-of-00064.gz
	I0405 19:00:52.955874 140631264624640 make_examples_core.py:321] Task 10/64: Overhead for preparing inputs: 19 seconds
	I0405 19:00:52.984994 140060365164544 make_examples_core.py:321] Task 56/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.012789 140270863183872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.014605 139836317560832 make_examples_core.py:321] Task 26/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.014087 140346939555840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.020325 139640432857088 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.068007 140389708357632 make_examples_core.py:321] Task 12/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.092833 139634635714560 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.093199 140060365164544 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.100088 140655090475008 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.102792 139634635714560 make_examples_core.py:321] Task 38/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00038-of-00064.gz
	I0405 19:00:53.102948 139634635714560 make_examples_core.py:321] Task 38/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.110229 140655090475008 make_examples_core.py:321] Task 29/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00029-of-00064.gz
	I0405 19:00:53.110417 140655090475008 make_examples_core.py:321] Task 29/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.108663 139954167652352 make_examples_core.py:321] Task 28/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.121040 139836317560832 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.136709 140270863183872 make_examples_core.py:321] Task 8/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.137788 140346939555840 make_examples_core.py:321] Task 18/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.153231 139634635714560 make_examples_core.py:321] Task 38/64: 1 candidates (1 examples) [0.05s elapsed]
	I0405 19:00:53.173552 140389708357632 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.190120 140655090475008 make_examples_core.py:321] Task 29/64: 4 candidates (4 examples) [0.08s elapsed]
	I0405 19:00:53.213879 139954167652352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.240968 139836317560832 make_examples_core.py:321] Task 26/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.247236 140270863183872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.270575 140314552401920 make_examples_core.py:321] Task 41/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.318995 140346939555840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.319108 139640432857088 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.319382 140060365164544 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.328984 139640432857088 make_examples_core.py:321] Task 19/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00019-of-00064.gz
	I0405 19:00:53.329138 139640432857088 make_examples_core.py:321] Task 19/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.329322 140060365164544 make_examples_core.py:321] Task 56/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00056-of-00064.gz
	I0405 19:00:53.329473 140060365164544 make_examples_core.py:321] Task 56/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.337104 139954167652352 make_examples_core.py:321] Task 28/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.372573 140060365164544 make_examples_core.py:321] Task 56/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:53.376556 140314552401920 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.391739 139836317560832 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.398083 139640432857088 make_examples_core.py:321] Task 19/64: 4 candidates (4 examples) [0.07s elapsed]
	I0405 19:00:53.407125 140389708357632 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.420786 140389708357632 make_examples_core.py:321] Task 12/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00012-of-00064.gz
	I0405 19:00:53.420983 140389708357632 make_examples_core.py:321] Task 12/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.465495 140270863183872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.465389 139954167652352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.472033 140346939555840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.473468 140389708357632 make_examples_core.py:321] Task 12/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:53.475629 140270863183872 make_examples_core.py:321] Task 8/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00008-of-00064.gz
	I0405 19:00:53.475803 140270863183872 make_examples_core.py:321] Task 8/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.482155 140346939555840 make_examples_core.py:321] Task 18/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00018-of-00064.gz
	I0405 19:00:53.482332 140346939555840 make_examples_core.py:321] Task 18/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.492365 140270863183872 make_examples_core.py:321] Task 8/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:53.498211 140314552401920 make_examples_core.py:321] Task 41/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.526817 140346939555840 make_examples_core.py:321] Task 18/64: 2 candidates (2 examples) [0.04s elapsed]
	I0405 19:00:53.573922 139704442609664 make_examples_core.py:321] Task 30/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.590512 140477545705472 make_examples_core.py:321] Task 49/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.612182 140314552401920 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.612021 139836317560832 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.620053 139954167652352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.624094 139836317560832 make_examples_core.py:321] Task 26/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00026-of-00064.gz
	I0405 19:00:53.624290 139836317560832 make_examples_core.py:321] Task 26/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.632065 139954167652352 make_examples_core.py:321] Task 28/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00028-of-00064.gz
	I0405 19:00:53.632269 139954167652352 make_examples_core.py:321] Task 28/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.666681 139836317560832 make_examples_core.py:321] Task 26/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:53.687729 139704442609664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.690620 139665467392000 make_examples_core.py:321] Task 58/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.743205 139954167652352 make_examples_core.py:321] Task 28/64: 10 candidates (10 examples) [0.11s elapsed]
	I0405 19:00:53.769469 140314552401920 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.775206 140477545705472 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.782940 140314552401920 make_examples_core.py:321] Task 41/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00041-of-00064.gz
	I0405 19:00:53.783175 140314552401920 make_examples_core.py:321] Task 41/64: Overhead for preparing inputs: 20 seconds
	I0405 19:00:53.804578 140163637604352 make_examples_core.py:321] Task 11/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.811212 139704442609664 make_examples_core.py:321] Task 30/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.825802 140314552401920 make_examples_core.py:321] Task 41/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:53.854365 140306755162112 make_examples_core.py:321] Task 50/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.857271 140631264624640 make_examples_core.py:321] Task 10/64: 83 candidates (118 examples) [0.90s elapsed]
	I0405 19:00:53.866943 139665467392000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.900733 140477545705472 make_examples_core.py:321] Task 49/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.953306 139704442609664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:53.973259 140375919124480 make_examples_core.py:321] Task 44/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:53.988199 139665467392000 make_examples_core.py:321] Task 58/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.001057 140163637604352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.095555 140477545705472 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.119163 140163637604352 make_examples_core.py:321] Task 11/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.131602 140505173221376 make_examples_core.py:321] Task 61/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.152296 140525544685568 make_examples_core.py:321] Task 22/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.155272 140717129015296 make_examples_core.py:321] Task 32/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.179128 140306755162112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.187103 140403951493120 make_examples_core.py:321] Task 59/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.250828 139843433730048 make_examples_core.py:321] Task 15/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.281434 139768521895936 make_examples_core.py:321] Task 57/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.297061 140306755162112 make_examples_core.py:321] Task 50/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.296207 140375919124480 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.299543 140363231965184 make_examples_core.py:321] Task 17/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.324570 139704442609664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.326505 140477545705472 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.329390 139665467392000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.338163 139704442609664 make_examples_core.py:321] Task 30/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00030-of-00064.gz
	I0405 19:00:54.338400 139704442609664 make_examples_core.py:321] Task 30/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.341109 140477545705472 make_examples_core.py:321] Task 49/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00049-of-00064.gz
	I0405 19:00:54.341355 140477545705472 make_examples_core.py:321] Task 49/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.344772 140312747966464 make_examples_core.py:321] Task 35/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.348589 139796750065664 make_examples_core.py:321] Task 24/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.353164 140535564201984 make_examples_core.py:321] Task 21/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.383702 140294693892096 make_examples_core.py:321] Task 33/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.388393 139704442609664 make_examples_core.py:321] Task 30/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:54.392926 139774103187456 make_examples_core.py:321] Task 36/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.408050 140375919124480 make_examples_core.py:321] Task 44/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.419448 140477545705472 make_examples_core.py:321] Task 49/64: 2 candidates (2 examples) [0.08s elapsed]
	I0405 19:00:54.428334 140505173221376 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.450637 140163637604352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.474753 139966317248512 make_examples_core.py:321] Task 7/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.483261 139684300988416 make_examples_core.py:321] Task 63/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.487559 139712801439744 make_examples_core.py:321] Task 51/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.503932 140227901517824 make_examples_core.py:321] Task 40/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.524624 140110272163840 make_examples_core.py:321] Task 16/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.532959 140525544685568 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.541514 140505173221376 make_examples_core.py:321] Task 61/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.545960 140306755162112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.549117 139708054331392 make_examples_core.py:321] Task 55/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.608029 139665780047872 make_examples_core.py:321] Task 47/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.623876 139814879457280 make_examples_core.py:321] Task 0/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.638118 139843433730048 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.647670 140403951493120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.655849 140525544685568 make_examples_core.py:321] Task 22/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.658447 140375919124480 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.660757 140163637604352 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.669615 140581680250880 make_examples_core.py:321] Task 48/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.672951 139665467392000 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.673904 140163637604352 make_examples_core.py:321] Task 11/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00011-of-00064.gz
	I0405 19:00:54.674134 140163637604352 make_examples_core.py:321] Task 11/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.675239 140153868943360 make_examples_core.py:321] Task 27/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.690595 139665467392000 make_examples_core.py:321] Task 58/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00058-of-00064.gz
	I0405 19:00:54.690972 139665467392000 make_examples_core.py:321] Task 58/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.696743 140134123397120 make_examples_core.py:321] Task 20/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.704053 139905489895424 make_examples_core.py:321] Task 54/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.705040 140163637604352 make_examples_core.py:321] Task 11/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:54.706302 140131123752960 make_examples_core.py:321] Task 23/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.706884 139997710905344 make_examples_core.py:321] Task 45/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.708082 139897224224768 make_examples_core.py:321] Task 52/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.716446 140258039394304 make_examples_core.py:321] Task 46/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.731994 139665467392000 make_examples_core.py:321] Task 58/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:54.744518 139843433730048 make_examples_core.py:321] Task 15/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.743819 140574414864384 make_examples_core.py:321] Task 37/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.747995 140694922235904 make_examples_core.py:321] Task 31/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.750203 140306755162112 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.751471 140717129015296 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.750313 140505173221376 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.753648 140403951493120 make_examples_core.py:321] Task 59/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.755066 140154402775040 make_examples_core.py:321] Task 39/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.760707 140306755162112 make_examples_core.py:321] Task 50/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00050-of-00064.gz
	I0405 19:00:54.760868 140306755162112 make_examples_core.py:321] Task 50/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.791372 140375203229696 make_examples_core.py:321] Task 43/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.798280 139865017016320 make_examples_core.py:321] Task 25/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.799745 140306755162112 make_examples_core.py:321] Task 50/64: 1 candidates (1 examples) [0.04s elapsed]
	I0405 19:00:54.811544 139735622483968 make_examples_core.py:321] Task 62/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.822082 140193283088384 make_examples_core.py:321] Task 34/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.823558 140525544685568 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.823420 139625441087488 make_examples_core.py:321] Task 14/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.840701 139768521895936 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.850529 140717129015296 make_examples_core.py:321] Task 32/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.885132 139843433730048 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.923448 139774103187456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.945557 139768521895936 make_examples_core.py:321] Task 57/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:54.946988 140717129015296 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.946641 140505173221376 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.947399 140375919124480 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:54.954670 140505173221376 make_examples_core.py:321] Task 61/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00061-of-00064.gz
	I0405 19:00:54.954816 140505173221376 make_examples_core.py:321] Task 61/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.955742 140375919124480 make_examples_core.py:321] Task 44/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00044-of-00064.gz
	I0405 19:00:54.955887 140375919124480 make_examples_core.py:321] Task 44/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:54.988127 140375919124480 make_examples_core.py:321] Task 44/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:54.996380 140505173221376 make_examples_core.py:321] Task 61/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:55.005219 140312747966464 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.008573 140525544685568 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.009003 140403951493120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.009264 139843433730048 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.016801 140525544685568 make_examples_core.py:321] Task 22/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00022-of-00064.gz
	I0405 19:00:55.017547 139843433730048 make_examples_core.py:321] Task 15/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00015-of-00064.gz
	I0405 19:00:55.017695 139843433730048 make_examples_core.py:321] Task 15/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.016943 140525544685568 make_examples_core.py:321] Task 22/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.021285 139774103187456 make_examples_core.py:321] Task 36/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.044811 140525544685568 make_examples_core.py:321] Task 22/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:55.068806 139712801439744 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.071529 139768521895936 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.106390 140312747966464 make_examples_core.py:321] Task 35/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.109057 139843433730048 make_examples_core.py:321] Task 15/64: 8 candidates (8 examples) [0.09s elapsed]
	I0405 19:00:55.110331 140714328625152 make_examples_core.py:321] Task 42/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.131710 139684300988416 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.134092 139774103187456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.134299 140717129015296 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.134253 140403951493120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.142317 140717129015296 make_examples_core.py:321] Task 32/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00032-of-00064.gz
	I0405 19:00:55.142458 140717129015296 make_examples_core.py:321] Task 32/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.142406 140403951493120 make_examples_core.py:321] Task 59/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00059-of-00064.gz
	I0405 19:00:55.142545 140403951493120 make_examples_core.py:321] Task 59/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.168740 139712801439744 make_examples_core.py:321] Task 51/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.173275 140403951493120 make_examples_core.py:321] Task 59/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:55.181540 140717129015296 make_examples_core.py:321] Task 32/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:55.196131 140312747966464 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.215281 140363231965184 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.230073 139684300988416 make_examples_core.py:321] Task 63/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.259459 139712801439744 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.259291 139774103187456 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.259295 139768521895936 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.267771 139768521895936 make_examples_core.py:321] Task 57/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00057-of-00064.gz
	I0405 19:00:55.267905 139768521895936 make_examples_core.py:321] Task 57/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:55.267740 139774103187456 make_examples_core.py:321] Task 36/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00036-of-00064.gz
	I0405 19:00:55.267884 139774103187456 make_examples_core.py:321] Task 36/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.277797 139966317248512 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.291159 139774103187456 make_examples_core.py:321] Task 36/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:55.309195 139768521895936 make_examples_core.py:321] Task 57/64: 1 candidates (1 examples) [0.04s elapsed]
	I0405 19:00:55.319001 140363231965184 make_examples_core.py:321] Task 17/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.322635 139684300988416 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.323825 140312747966464 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.332315 140312747966464 make_examples_core.py:321] Task 35/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00035-of-00064.gz
	I0405 19:00:55.332461 140312747966464 make_examples_core.py:321] Task 35/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.355353 140312747966464 make_examples_core.py:321] Task 35/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:55.363793 140535564201984 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.379111 139966317248512 make_examples_core.py:321] Task 7/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.409010 140363231965184 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.409566 139712801439744 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.417984 139712801439744 make_examples_core.py:321] Task 51/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00051-of-00064.gz
	I0405 19:00:55.418130 139712801439744 make_examples_core.py:321] Task 51/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.454484 140294693892096 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.464894 140535564201984 make_examples_core.py:321] Task 21/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.471525 139684300988416 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.471260 139966317248512 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.473317 139712801439744 make_examples_core.py:321] Task 51/64: 3 candidates (3 examples) [0.06s elapsed]
	I0405 19:00:55.479655 139684300988416 make_examples_core.py:321] Task 63/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00063-of-00064.gz
	I0405 19:00:55.479796 139684300988416 make_examples_core.py:321] Task 63/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.515766 139684300988416 make_examples_core.py:321] Task 63/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:55.545078 139796750065664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.554953 140535564201984 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.555567 140294693892096 make_examples_core.py:321] Task 33/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.555022 140363231965184 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.563706 140363231965184 make_examples_core.py:321] Task 17/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00017-of-00064.gz
	I0405 19:00:55.563844 140363231965184 make_examples_core.py:321] Task 17/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:55.626135 140526383112192 make_examples_core.py:321] Task 3/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.631692 140131123752960 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.647889 139796750065664 make_examples_core.py:321] Task 24/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.648344 140294693892096 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.648118 139966317248512 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.656550 139966317248512 make_examples_core.py:321] Task 7/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00007-of-00064.gz
	I0405 19:00:55.656692 139966317248512 make_examples_core.py:321] Task 7/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:55.669689 139966317248512 make_examples_core.py:321] Task 7/64: 0 candidates (0 examples) [0.01s elapsed]
	I0405 19:00:55.689813 140363231965184 make_examples_core.py:321] Task 17/64: 6 candidates (6 examples) [0.13s elapsed]
	I0405 19:00:55.703729 139865017016320 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.735002 140131123752960 make_examples_core.py:321] Task 23/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.738250 140535564201984 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.738438 139796750065664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.746800 140535564201984 make_examples_core.py:321] Task 21/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00021-of-00064.gz
	I0405 19:00:55.746948 140535564201984 make_examples_core.py:321] Task 21/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.777100 140535564201984 make_examples_core.py:321] Task 21/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:55.789013 140714328625152 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.807298 139865017016320 make_examples_core.py:321] Task 25/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.825545 140294693892096 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.825812 140131123752960 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.834020 140294693892096 make_examples_core.py:321] Task 33/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00033-of-00064.gz
	I0405 19:00:55.834161 140294693892096 make_examples_core.py:321] Task 33/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:55.856178 140294693892096 make_examples_core.py:321] Task 33/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:55.860322 139708054331392 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.896669 140714328625152 make_examples_core.py:321] Task 42/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.898830 139865017016320 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.898830 139796750065664 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.907465 139796750065664 make_examples_core.py:321] Task 24/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00024-of-00064.gz
	I0405 19:00:55.907613 139796750065664 make_examples_core.py:321] Task 24/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:55.937101 140574414864384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.949243 139796750065664 make_examples_core.py:321] Task 24/64: 1 candidates (1 examples) [0.04s elapsed]
	I0405 19:00:55.964751 139708054331392 make_examples_core.py:321] Task 55/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:55.988451 140131123752960 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.989223 140714328625152 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:55.997022 140131123752960 make_examples_core.py:321] Task 23/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00023-of-00064.gz
	I0405 19:00:55.997169 140131123752960 make_examples_core.py:321] Task 23/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.024704 140581680250880 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.030427 140131123752960 make_examples_core.py:321] Task 23/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:56.043209 140574414864384 make_examples_core.py:321] Task 37/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.057234 139865017016320 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.057230 139708054331392 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.066057 139865017016320 make_examples_core.py:321] Task 25/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00025-of-00064.gz
	I0405 19:00:56.066205 139865017016320 make_examples_core.py:321] Task 25/64: Overhead for preparing inputs: 21 seconds
	I0405 19:00:56.102673 139865017016320 make_examples_core.py:321] Task 25/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:56.105149 140258039394304 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.131049 140581680250880 make_examples_core.py:321] Task 48/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.136833 140714328625152 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.136697 140574414864384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.145465 140714328625152 make_examples_core.py:321] Task 42/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00042-of-00064.gz
	I0405 19:00:56.145611 140714328625152 make_examples_core.py:321] Task 42/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.178188 140714328625152 make_examples_core.py:321] Task 42/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:56.186206 139735622483968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.214356 140258039394304 make_examples_core.py:321] Task 46/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.224817 140581680250880 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.224412 139708054331392 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.233294 139708054331392 make_examples_core.py:321] Task 55/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00055-of-00064.gz
	I0405 19:00:56.233436 139708054331392 make_examples_core.py:321] Task 55/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.268548 140694922235904 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.282476 139708054331392 make_examples_core.py:321] Task 55/64: 1 candidates (1 examples) [0.05s elapsed]
	I0405 19:00:56.294173 139735622483968 make_examples_core.py:321] Task 62/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.308743 140258039394304 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.308594 140574414864384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.317322 140574414864384 make_examples_core.py:321] Task 37/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00037-of-00064.gz
	I0405 19:00:56.317473 140574414864384 make_examples_core.py:321] Task 37/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.332597 140193283088384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.343700 140574414864384 make_examples_core.py:321] Task 37/64: 0 candidates (0 examples) [0.03s elapsed]
	I0405 19:00:56.378428 140694922235904 make_examples_core.py:321] Task 31/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.388303 139735622483968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.388038 140581680250880 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.396960 140581680250880 make_examples_core.py:321] Task 48/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00048-of-00064.gz
	I0405 19:00:56.397103 140581680250880 make_examples_core.py:321] Task 48/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.414639 139665780047872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.444350 140193283088384 make_examples_core.py:321] Task 34/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.452021 140581680250880 make_examples_core.py:321] Task 48/64: 1 candidates (1 examples) [0.05s elapsed]
	I0405 19:00:56.474482 140258039394304 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.474031 140694922235904 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.484992 140258039394304 make_examples_core.py:321] Task 46/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00046-of-00064.gz
	I0405 19:00:56.485150 140258039394304 make_examples_core.py:321] Task 46/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.514484 139625441087488 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.527148 139665780047872 make_examples_core.py:321] Task 47/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.528087 140258039394304 make_examples_core.py:321] Task 46/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:56.541947 140193283088384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.541662 139735622483968 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.550711 139735622483968 make_examples_core.py:321] Task 62/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00062-of-00064.gz
	I0405 19:00:56.550863 139735622483968 make_examples_core.py:321] Task 62/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.568723 139905489895424 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.588515 139735622483968 make_examples_core.py:321] Task 62/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:56.622303 139665780047872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.622564 140694922235904 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.631479 140694922235904 make_examples_core.py:321] Task 31/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00031-of-00064.gz
	I0405 19:00:56.631623 140694922235904 make_examples_core.py:321] Task 31/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:56.649480 140134123397120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.670906 139625441087488 make_examples_core.py:321] Task 14/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.677142 140694922235904 make_examples_core.py:321] Task 31/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:56.679366 139905489895424 make_examples_core.py:321] Task 54/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.681395 140193283088384 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.690241 140193283088384 make_examples_core.py:321] Task 34/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00034-of-00064.gz
	I0405 19:00:56.690383 140193283088384 make_examples_core.py:321] Task 34/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.714678 140193283088384 make_examples_core.py:321] Task 34/64: 0 candidates (0 examples) [0.02s elapsed]
	I0405 19:00:56.730230 139997710905344 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.757400 140134123397120 make_examples_core.py:321] Task 20/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.785324 139625441087488 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.827827 140110272163840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.840585 139997710905344 make_examples_core.py:321] Task 45/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.852281 139905489895424 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.866364 139665780047872 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.875524 139665780047872 make_examples_core.py:321] Task 47/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00047-of-00064.gz
	I0405 19:00:56.875675 139665780047872 make_examples_core.py:321] Task 47/64: Overhead for preparing inputs: 22 seconds
	I0405 19:00:56.908301 139897224224768 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.920078 140134123397120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.924049 139665780047872 make_examples_core.py:321] Task 47/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:56.942116 140110272163840 make_examples_core.py:321] Task 16/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:56.987266 139997710905344 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:56.991107 139625441087488 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.000129 139625441087488 make_examples_core.py:321] Task 14/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00014-of-00064.gz
	I0405 19:00:57.000285 139625441087488 make_examples_core.py:321] Task 14/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.009696 140153868943360 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.022370 139897224224768 make_examples_core.py:321] Task 52/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.055023 140110272163840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.055752 139905489895424 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.065173 139905489895424 make_examples_core.py:321] Task 54/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00054-of-00064.gz
	I0405 19:00:57.065344 139905489895424 make_examples_core.py:321] Task 54/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.096175 140154402775040 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.129007 140153868943360 make_examples_core.py:321] Task 27/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.142605 140134123397120 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.143145 139997710905344 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.151695 140134123397120 make_examples_core.py:321] Task 20/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00020-of-00064.gz
	I0405 19:00:57.151843 140134123397120 make_examples_core.py:321] Task 20/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.152527 139997710905344 make_examples_core.py:321] Task 45/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00045-of-00064.gz
	I0405 19:00:57.152676 139997710905344 make_examples_core.py:321] Task 45/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.156004 139897224224768 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.166019 139905489895424 make_examples_core.py:321] Task 54/64: 8 candidates (8 examples) [0.10s elapsed]
	I0405 19:00:57.185112 140375203229696 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.190396 139997710905344 make_examples_core.py:321] Task 45/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:57.226502 140110272163840 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.226027 140153868943360 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.235631 140110272163840 make_examples_core.py:321] Task 16/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00016-of-00064.gz
	I0405 19:00:57.235779 140110272163840 make_examples_core.py:321] Task 16/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.260850 139814879457280 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.272660 140154402775040 make_examples_core.py:321] Task 39/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.285803 139625441087488 make_examples_core.py:321] Task 14/64: 18 candidates (18 examples) [0.29s elapsed]
	I0405 19:00:57.299172 140134123397120 make_examples_core.py:321] Task 20/64: 8 candidates (10 examples) [0.15s elapsed]
	I0405 19:00:57.302088 139897224224768 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.312018 139897224224768 make_examples_core.py:321] Task 52/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00052-of-00064.gz
	I0405 19:00:57.312178 139897224224768 make_examples_core.py:321] Task 52/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.352774 140227901517824 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.363666 140375203229696 make_examples_core.py:321] Task 43/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.376794 139814879457280 make_examples_core.py:321] Task 0/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.389699 140153868943360 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.391674 139897224224768 make_examples_core.py:321] Task 52/64: 1 candidates (1 examples) [0.08s elapsed]
	I0405 19:00:57.399110 140153868943360 make_examples_core.py:321] Task 27/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00027-of-00064.gz
	I0405 19:00:57.399262 140153868943360 make_examples_core.py:321] Task 27/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.404698 140154402775040 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.431374 140526383112192 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.439015 140153868943360 make_examples_core.py:321] Task 27/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:57.470516 140227901517824 make_examples_core.py:321] Task 40/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.495197 140375203229696 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.548730 139814879457280 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.549818 140526383112192 make_examples_core.py:321] Task 3/64: Starting from v0.9.0, --use_ref_for_cram is default to true. If you are using CRAM input, note that we will decode CRAM using the reference you passed in with --ref
	I0405 19:00:57.613263 140227901517824 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.634224 140110272163840 make_examples_core.py:321] Task 16/64: 17 candidates (17 examples) [0.40s elapsed]
	I0405 19:00:57.678470 140154402775040 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.679088 140526383112192 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.687849 140154402775040 make_examples_core.py:321] Task 39/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00039-of-00064.gz
	I0405 19:00:57.688008 140154402775040 make_examples_core.py:321] Task 39/64: Overhead for preparing inputs: 24 seconds
	I0405 19:00:57.694199 139814879457280 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.703520 139814879457280 make_examples_core.py:321] Task 0/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00000-of-00064.gz
	I0405 19:00:57.703669 139814879457280 make_examples_core.py:321] Task 0/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.718146 139814879457280 make_examples_core.py:321] Task 0/64: 0 candidates (0 examples) [0.01s elapsed]
	I0405 19:00:57.719070 140375203229696 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.732173 140375203229696 make_examples_core.py:321] Task 43/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00043-of-00064.gz
	I0405 19:00:57.732363 140375203229696 make_examples_core.py:321] Task 43/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.758164 140227901517824 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.767336 140227901517824 make_examples_core.py:321] Task 40/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00040-of-00064.gz
	I0405 19:00:57.767480 140227901517824 make_examples_core.py:321] Task 40/64: Overhead for preparing inputs: 24 seconds
	I0405 19:00:57.781493 140375203229696 make_examples_core.py:321] Task 43/64: 0 candidates (0 examples) [0.05s elapsed]
	I0405 19:00:57.806534 140227901517824 make_examples_core.py:321] Task 40/64: 0 candidates (0 examples) [0.04s elapsed]
	I0405 19:00:57.823783 140526383112192 genomics_reader.py:223] Reading /mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam with NativeSamReader
	I0405 19:00:57.833075 140526383112192 make_examples_core.py:321] Task 3/64: Writing examples to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00003-of-00064.gz
	I0405 19:00:57.833218 140526383112192 make_examples_core.py:321] Task 3/64: Overhead for preparing inputs: 23 seconds
	I0405 19:00:57.848223 140526383112192 make_examples_core.py:321] Task 3/64: 0 candidates (0 examples) [0.01s elapsed]
	I0405 19:00:57.905770 140154402775040 make_examples_core.py:321] Task 39/64: 7 candidates (7 examples) [0.22s elapsed]
	I0405 19:02:13.828329 139837493678080 make_examples_core.py:321] Task 53/64: 2003 candidates (2304 examples) [81.66s elapsed]
	I0405 19:02:14.044859 139784403828736 make_examples_core.py:321] Task 4/64: 2019 candidates (2355 examples) [81.13s elapsed]
	I0405 19:02:14.003860 140163637604352 make_examples_core.py:321] Task 11/64: 2005 candidates (2270 examples) [79.30s elapsed]
	I0405 19:02:15.884907 140545069715456 make_examples_core.py:321] Task 5/64: 2000 candidates (2268 examples) [83.89s elapsed]
	I0405 19:02:16.543594 139735622483968 make_examples_core.py:321] Task 62/64: 2002 candidates (2217 examples) [79.95s elapsed]
	I0405 19:02:17.267381 139966317248512 make_examples_core.py:321] Task 7/64: 2011 candidates (2297 examples) [81.60s elapsed]
	I0405 19:02:18.082039 139954167652352 make_examples_core.py:321] Task 28/64: 2005 candidates (2498 examples) [84.34s elapsed]
	I0405 19:02:20.083902 139774103187456 make_examples_core.py:321] Task 36/64: 2001 candidates (2358 examples) [84.79s elapsed]
	I0405 19:02:20.973956 139861846466560 make_examples_core.py:321] Task 2/64: 2004 candidates (2294 examples) [88.98s elapsed]
	I0405 19:02:21.062520 140270863183872 make_examples_core.py:321] Task 8/64: 2001 candidates (2296 examples) [87.57s elapsed]
	I0405 19:02:21.378051 140153868943360 make_examples_core.py:321] Task 27/64: 2007 candidates (2384 examples) [83.94s elapsed]
	I0405 19:02:21.384534 140535564201984 make_examples_core.py:321] Task 21/64: 2004 candidates (2281 examples) [85.61s elapsed]
	I0405 19:02:21.750558 139734917296128 make_examples_core.py:321] Task 6/64: 2002 candidates (2268 examples) [89.24s elapsed]
	I0405 19:02:22.288867 140312747966464 make_examples_core.py:321] Task 35/64: 2000 candidates (2289 examples) [86.93s elapsed]
	I0405 19:02:23.320269 140346939555840 make_examples_core.py:321] Task 18/64: 2003 candidates (2586 examples) [89.79s elapsed]
	I0405 19:02:23.951980 140306755162112 make_examples_core.py:321] Task 50/64: 2003 candidates (2286 examples) [89.15s elapsed]
	I0405 19:02:24.205729 140655090475008 make_examples_core.py:321] Task 29/64: 2002 candidates (2294 examples) [91.02s elapsed]
	I0405 19:02:24.336951 139684300988416 make_examples_core.py:321] Task 63/64: 2007 candidates (2305 examples) [88.82s elapsed]
	I0405 19:02:24.773026 140717129015296 make_examples_core.py:321] Task 32/64: 2010 candidates (2262 examples) [89.59s elapsed]
	I0405 19:02:24.788103 139625441087488 make_examples_core.py:321] Task 14/64: 2001 candidates (2317 examples) [87.50s elapsed]
	I0405 19:02:25.053602 139712801439744 make_examples_core.py:321] Task 51/64: 2000 candidates (2219 examples) [89.58s elapsed]
	I0405 19:02:25.210483 140525544685568 make_examples_core.py:321] Task 22/64: 2020 candidates (2262 examples) [90.17s elapsed]
	I0405 19:02:25.260956 140389708357632 make_examples_core.py:321] Task 12/64: 2004 candidates (2295 examples) [91.79s elapsed]
	I0405 19:02:25.422345 140694922235904 make_examples_core.py:321] Task 31/64: 2003 candidates (2252 examples) [88.74s elapsed]
	I0405 19:02:25.601709 139768521895936 make_examples_core.py:321] Task 57/64: 2006 candidates (2303 examples) [90.29s elapsed]
	I0405 19:02:25.792751 140283220058112 make_examples_core.py:321] Task 60/64: 2013 candidates (2332 examples) [93.19s elapsed]
	I0405 19:02:26.170690 140403951493120 make_examples_core.py:321] Task 59/64: 2003 candidates (2322 examples) [91.00s elapsed]
	I0405 19:02:26.177479 139704442609664 make_examples_core.py:321] Task 30/64: 2002 candidates (2256 examples) [91.79s elapsed]
	I0405 19:02:26.569121 140060365164544 make_examples_core.py:321] Task 56/64: 2004 candidates (2234 examples) [93.20s elapsed]
	I0405 19:02:27.112316 139814879457280 make_examples_core.py:321] Task 0/64: 2006 candidates (2275 examples) [89.39s elapsed]
	I0405 19:02:27.243886 140631264624640 make_examples_core.py:321] Task 10/64: 2007 candidates (2250 examples) [93.39s elapsed]
	I0405 19:02:27.283413 139865017016320 make_examples_core.py:321] Task 25/64: 2000 candidates (2227 examples) [91.18s elapsed]
	I0405 19:02:27.423885 139997710905344 make_examples_core.py:321] Task 45/64: 2001 candidates (2221 examples) [90.23s elapsed]
	I0405 19:02:28.105687 140601925828608 make_examples_core.py:321] Task 9/64: 2051 candidates (2266 examples) [96.07s elapsed]
	I0405 19:02:28.433931 139897224224768 make_examples_core.py:321] Task 52/64: 2000 candidates (2233 examples) [91.04s elapsed]
	I0405 19:02:28.882280 139796750065664 make_examples_core.py:321] Task 24/64: 2002 candidates (2185 examples) [92.93s elapsed]
	I0405 19:02:29.528548 140154402775040 make_examples_core.py:321] Task 39/64: 2002 candidates (2226 examples) [91.62s elapsed]
	I0405 19:02:31.121697 140258039394304 make_examples_core.py:321] Task 46/64: 2009 candidates (2268 examples) [94.59s elapsed]
	I0405 19:02:31.291061 139634635714560 make_examples_core.py:321] Task 38/64: 2001 candidates (2202 examples) [98.14s elapsed]
	I0405 19:02:31.989416 139958181376000 make_examples_core.py:321] Task 1/64: 2072 candidates (2334 examples) [99.93s elapsed]
	I0405 19:02:32.077254 140714328625152 make_examples_core.py:321] Task 42/64: 2001 candidates (2236 examples) [95.90s elapsed]
	I0405 19:02:32.115998 140131123752960 make_examples_core.py:321] Task 23/64: 2003 candidates (2325 examples) [96.09s elapsed]
	I0405 19:02:32.498413 140314552401920 make_examples_core.py:321] Task 41/64: 2029 candidates (2271 examples) [98.67s elapsed]
	I0405 19:02:32.872257 139836317560832 make_examples_core.py:321] Task 26/64: 2001 candidates (2238 examples) [99.21s elapsed]
	I0405 19:02:32.949237 140363231965184 make_examples_core.py:321] Task 17/64: 2000 candidates (2250 examples) [97.26s elapsed]
	I0405 19:02:32.955702 140581680250880 make_examples_core.py:321] Task 48/64: 2001 candidates (2296 examples) [96.50s elapsed]
	I0405 19:02:33.063917 139870741843968 make_examples_core.py:321] Task 13/64: 2004 candidates (2191 examples) [101.01s elapsed]
	I0405 19:02:33.237302 140477545705472 make_examples_core.py:321] Task 49/64: 2005 candidates (2298 examples) [98.82s elapsed]
	I0405 19:02:33.715288 139640432857088 make_examples_core.py:321] Task 19/64: 2012 candidates (2293 examples) [100.32s elapsed]
	I0405 19:02:33.846893 139708054331392 make_examples_core.py:321] Task 55/64: 2004 candidates (2245 examples) [97.56s elapsed]
	I0405 19:02:33.990038 140294693892096 make_examples_core.py:321] Task 33/64: 2001 candidates (2234 examples) [98.13s elapsed]
	I0405 19:02:34.458262 140505173221376 make_examples_core.py:321] Task 61/64: 2011 candidates (2341 examples) [99.46s elapsed]
	I0405 19:02:35.812666 139905489895424 make_examples_core.py:321] Task 54/64: 2003 candidates (2215 examples) [98.65s elapsed]
	I0405 19:02:35.788041 140227901517824 make_examples_core.py:321] Task 40/64: 2002 candidates (2297 examples) [97.98s elapsed]
	I0405 19:02:36.889641 140526383112192 make_examples_core.py:321] Task 3/64: 2004 candidates (2296 examples) [99.04s elapsed]
	I0405 19:02:37.871575 140375919124480 make_examples_core.py:321] Task 44/64: 2003 candidates (2255 examples) [102.88s elapsed]
	I0405 19:02:37.873387 139665467392000 make_examples_core.py:321] Task 58/64: 2004 candidates (2212 examples) [103.14s elapsed]
	I0405 19:02:37.951749 140110272163840 make_examples_core.py:321] Task 16/64: 2003 candidates (2295 examples) [100.32s elapsed]
	I0405 19:02:39.689454 139843433730048 make_examples_core.py:321] Task 15/64: 2015 candidates (2276 examples) [104.58s elapsed]
	I0405 19:02:40.222801 140574414864384 make_examples_core.py:321] Task 37/64: 2003 candidates (2309 examples) [103.88s elapsed]
	I0405 19:02:41.600997 140375203229696 make_examples_core.py:321] Task 43/64: 2001 candidates (2248 examples) [103.82s elapsed]
	I0405 19:02:47.078743 139665780047872 make_examples_core.py:321] Task 47/64: 2005 candidates (2303 examples) [110.15s elapsed]
	I0405 19:02:50.829297 140193283088384 make_examples_core.py:321] Task 34/64: 2008 candidates (2257 examples) [114.11s elapsed]
	I0405 19:02:51.067181 140134123397120 make_examples_core.py:321] Task 20/64: 2000 candidates (2267 examples) [113.77s elapsed]
	I0405 19:04:13.218628 140163637604352 make_examples_core.py:321] Task 11/64: 4007 candidates (4483 examples) [119.21s elapsed]
	I0405 19:04:19.810289 139837493678080 make_examples_core.py:321] Task 53/64: 4004 candidates (4535 examples) [125.98s elapsed]
	I0405 19:04:20.039058 139734917296128 make_examples_core.py:321] Task 6/64: 4001 candidates (4439 examples) [118.29s elapsed]
	I0405 19:04:21.470311 140270863183872 make_examples_core.py:321] Task 8/64: 4005 candidates (4474 examples) [120.41s elapsed]
	I0405 19:04:22.380643 140545069715456 make_examples_core.py:321] Task 5/64: 4001 candidates (4506 examples) [126.50s elapsed]
	I0405 19:04:23.506440 139966317248512 make_examples_core.py:321] Task 7/64: 4001 candidates (4411 examples) [126.24s elapsed]
	I0405 19:04:24.472280 139784403828736 make_examples_core.py:321] Task 4/64: 4001 candidates (4536 examples) [130.43s elapsed]
	I0405 19:04:24.910900 139735622483968 make_examples_core.py:321] Task 62/64: 4000 candidates (4393 examples) [128.37s elapsed]
	I0405 19:04:25.310226 139774103187456 make_examples_core.py:321] Task 36/64: 4002 candidates (4571 examples) [125.23s elapsed]
	I0405 19:04:25.597839 139768521895936 make_examples_core.py:321] Task 57/64: 4001 candidates (4551 examples) [120.00s elapsed]
	I0405 19:04:26.282307 139954167652352 make_examples_core.py:321] Task 28/64: 4006 candidates (4713 examples) [128.20s elapsed]
	I0405 19:04:27.349555 140403951493120 make_examples_core.py:321] Task 59/64: 4008 candidates (4528 examples) [121.18s elapsed]
	I0405 19:04:27.290707 140535564201984 make_examples_core.py:321] Task 21/64: 4003 candidates (4472 examples) [125.91s elapsed]
	I0405 19:04:29.365711 140060365164544 make_examples_core.py:321] Task 56/64: 4016 candidates (4423 examples) [122.80s elapsed]
	I0405 19:04:29.720291 140694922235904 make_examples_core.py:321] Task 31/64: 4010 candidates (4438 examples) [124.30s elapsed]
	I0405 19:04:30.793875 140601925828608 make_examples_core.py:321] Task 9/64: 4002 candidates (4388 examples) [122.69s elapsed]
	I0405 19:04:31.419952 139625441087488 make_examples_core.py:321] Task 14/64: 4006 candidates (4555 examples) [126.63s elapsed]
	I0405 19:04:32.510350 140312747966464 make_examples_core.py:321] Task 35/64: 4003 candidates (4500 examples) [130.22s elapsed]
	I0405 19:04:33.297883 139684300988416 make_examples_core.py:321] Task 63/64: 4000 candidates (4532 examples) [128.96s elapsed]
	I0405 19:04:33.217872 140525544685568 make_examples_core.py:321] Task 22/64: 4002 candidates (4393 examples) [128.01s elapsed]
	I0405 19:04:33.504887 139814879457280 make_examples_core.py:321] Task 0/64: 4006 candidates (4472 examples) [126.39s elapsed]
	I0405 19:04:34.204458 140153868943360 make_examples_core.py:321] Task 27/64: 4000 candidates (4561 examples) [132.83s elapsed]
	I0405 19:04:34.774234 140717129015296 make_examples_core.py:321] Task 32/64: 4008 candidates (4511 examples) [130.00s elapsed]
	I0405 19:04:34.856853 139704442609664 make_examples_core.py:321] Task 30/64: 4001 candidates (4448 examples) [128.68s elapsed]
	I0405 19:04:35.236974 140283220058112 make_examples_core.py:321] Task 60/64: 4001 candidates (4527 examples) [129.44s elapsed]
	I0405 19:04:35.654462 139861846466560 make_examples_core.py:321] Task 2/64: 4001 candidates (4455 examples) [134.68s elapsed]
	I0405 19:04:35.875333 139958181376000 make_examples_core.py:321] Task 1/64: 4000 candidates (4435 examples) [123.89s elapsed]
	I0405 19:04:36.669325 140306755162112 make_examples_core.py:321] Task 50/64: 4003 candidates (4430 examples) [132.72s elapsed]
	I0405 19:04:37.237607 139997710905344 make_examples_core.py:321] Task 45/64: 4008 candidates (4414 examples) [129.81s elapsed]
	I0405 19:04:38.135662 139865017016320 make_examples_core.py:321] Task 25/64: 4000 candidates (4413 examples) [130.85s elapsed]
	I0405 19:04:38.339973 140154402775040 make_examples_core.py:321] Task 39/64: 4004 candidates (4404 examples) [128.81s elapsed]
	I0405 19:04:38.344996 140389708357632 make_examples_core.py:321] Task 12/64: 4006 candidates (4522 examples) [133.08s elapsed]
	I0405 19:04:39.113560 139708054331392 make_examples_core.py:321] Task 55/64: 4003 candidates (4432 examples) [125.27s elapsed]
	I0405 19:04:39.735550 140655090475008 make_examples_core.py:321] Task 29/64: 4000 candidates (4496 examples) [135.53s elapsed]
	I0405 19:04:40.068283 140314552401920 make_examples_core.py:321] Task 41/64: 4005 candidates (4424 examples) [127.57s elapsed]
	I0405 19:04:40.340630 139712801439744 make_examples_core.py:321] Task 51/64: 4028 candidates (4435 examples) [135.29s elapsed]
	I0405 19:04:40.538505 139796750065664 make_examples_core.py:321] Task 24/64: 4012 candidates (4390 examples) [131.66s elapsed]
	I0405 19:04:40.702194 140346939555840 make_examples_core.py:321] Task 18/64: 4002 candidates (4760 examples) [137.38s elapsed]
	I0405 19:04:40.786554 140131123752960 make_examples_core.py:321] Task 23/64: 4000 candidates (4449 examples) [128.67s elapsed]
	I0405 19:04:41.279598 140294693892096 make_examples_core.py:321] Task 33/64: 4009 candidates (4434 examples) [127.29s elapsed]
	I0405 19:04:41.495838 139897224224768 make_examples_core.py:321] Task 52/64: 4000 candidates (4403 examples) [133.06s elapsed]
	I0405 19:04:41.583790 139640432857088 make_examples_core.py:321] Task 19/64: 4000 candidates (4423 examples) [127.87s elapsed]
	I0405 19:04:41.635296 139870741843968 make_examples_core.py:321] Task 13/64: 4001 candidates (4372 examples) [128.57s elapsed]
	I0405 19:04:41.806603 140363231965184 make_examples_core.py:321] Task 17/64: 4001 candidates (4472 examples) [128.86s elapsed]
	I0405 19:04:42.523158 139905489895424 make_examples_core.py:321] Task 54/64: 4004 candidates (4385 examples) [126.71s elapsed]
	I0405 19:04:42.924819 139634635714560 make_examples_core.py:321] Task 38/64: 4004 candidates (4415 examples) [131.63s elapsed]
	I0405 19:04:42.935970 139665467392000 make_examples_core.py:321] Task 58/64: 4010 candidates (4372 examples) [125.06s elapsed]
	I0405 19:04:43.211728 140581680250880 make_examples_core.py:321] Task 48/64: 4002 candidates (4458 examples) [130.26s elapsed]
	I0405 19:04:43.559702 140505173221376 make_examples_core.py:321] Task 61/64: 4000 candidates (4497 examples) [129.10s elapsed]
	I0405 19:04:44.432639 140227901517824 make_examples_core.py:321] Task 40/64: 4003 candidates (4467 examples) [128.64s elapsed]
	I0405 19:04:45.927298 140375919124480 make_examples_core.py:321] Task 44/64: 4006 candidates (4440 examples) [128.06s elapsed]
	I0405 19:04:46.123984 140526383112192 make_examples_core.py:321] Task 3/64: 4000 candidates (4483 examples) [129.23s elapsed]
	I0405 19:04:46.400849 140110272163840 make_examples_core.py:321] Task 16/64: 4002 candidates (4508 examples) [128.45s elapsed]
	I0405 19:04:46.379831 139836317560832 make_examples_core.py:321] Task 26/64: 4000 candidates (4412 examples) [133.51s elapsed]
	I0405 19:04:47.128450 140375203229696 make_examples_core.py:321] Task 43/64: 4000 candidates (4450 examples) [125.53s elapsed]
	I0405 19:04:47.349924 140477545705472 make_examples_core.py:321] Task 49/64: 4009 candidates (4509 examples) [134.11s elapsed]
	I0405 19:04:50.236275 140258039394304 make_examples_core.py:321] Task 46/64: 4001 candidates (4486 examples) [139.11s elapsed]
	I0405 19:04:51.774203 140631264624640 make_examples_core.py:321] Task 10/64: 4009 candidates (4403 examples) [144.53s elapsed]
	I0405 19:04:51.835917 140714328625152 make_examples_core.py:321] Task 42/64: 4000 candidates (4408 examples) [139.76s elapsed]
	I0405 19:04:54.655520 140574414864384 make_examples_core.py:321] Task 37/64: 4041 candidates (4504 examples) [134.43s elapsed]
	I0405 19:04:55.941763 139843433730048 make_examples_core.py:321] Task 15/64: 4006 candidates (4428 examples) [136.25s elapsed]
	I0405 19:04:57.037880 140134123397120 make_examples_core.py:321] Task 20/64: 4008 candidates (4485 examples) [125.97s elapsed]
	I0405 19:04:58.748143 140193283088384 make_examples_core.py:321] Task 34/64: 4001 candidates (4433 examples) [127.92s elapsed]
	I0405 19:04:58.959838 139665780047872 make_examples_core.py:321] Task 47/64: 4008 candidates (4432 examples) [131.88s elapsed]
	I0405 19:05:19.431658 139735622483968 make_examples_core.py:321] Task 62/64: 6036 candidates (6573 examples) [54.52s elapsed]
	I0405 19:05:20.562711 140545069715456 make_examples_core.py:321] Task 5/64: 6028 candidates (6673 examples) [58.18s elapsed]
	I0405 19:05:22.619557 140535564201984 make_examples_core.py:321] Task 21/64: 6043 candidates (6705 examples) [55.33s elapsed]
	I0405 19:05:23.532065 139768521895936 make_examples_core.py:321] Task 57/64: 6011 candidates (6671 examples) [57.93s elapsed]
	I0405 19:05:23.485583 139734917296128 make_examples_core.py:321] Task 6/64: 6022 candidates (6620 examples) [63.45s elapsed]
	I0405 19:05:23.479557 139966317248512 make_examples_core.py:321] Task 7/64: 6036 candidates (6625 examples) [59.97s elapsed]
	I0405 19:05:25.831449 139837493678080 make_examples_core.py:321] Task 53/64: 6037 candidates (6744 examples) [66.02s elapsed]
	I0405 19:05:26.965537 139774103187456 make_examples_core.py:321] Task 36/64: 6022 candidates (6728 examples) [61.65s elapsed]
	I0405 19:05:26.852832 140270863183872 make_examples_core.py:321] Task 8/64: 6033 candidates (6668 examples) [65.38s elapsed]
	I0405 19:05:27.164814 140060365164544 make_examples_core.py:321] Task 56/64: 6028 candidates (6561 examples) [57.80s elapsed]
	I0405 19:05:27.728224 139625441087488 make_examples_core.py:321] Task 14/64: 6001 candidates (6683 examples) [56.31s elapsed]
	I0405 19:05:27.735123 140163637604352 make_examples_core.py:321] Task 11/64: 6008 candidates (6676 examples) [74.52s elapsed]
	I0405 19:05:27.884640 140389708357632 make_examples_core.py:321] Task 12/64: 6002 candidates (6687 examples) [49.54s elapsed]
	I0405 19:05:28.318942 139640432857088 make_examples_core.py:321] Task 19/64: 6014 candidates (6590 examples) [46.73s elapsed]
	I0405 19:05:29.303851 139997710905344 make_examples_core.py:321] Task 45/64: 6013 candidates (6604 examples) [52.07s elapsed]
	I0405 19:05:29.481576 139684300988416 make_examples_core.py:321] Task 63/64: 6004 candidates (6700 examples) [56.18s elapsed]
	I0405 19:05:29.812170 139870741843968 make_examples_core.py:321] Task 13/64: 6029 candidates (6573 examples) [48.18s elapsed]
	I0405 19:05:30.371236 140403951493120 make_examples_core.py:321] Task 59/64: 6017 candidates (6686 examples) [63.02s elapsed]
	I0405 19:05:30.369980 140694922235904 make_examples_core.py:321] Task 31/64: 6047 candidates (6652 examples) [60.65s elapsed]
	I0405 19:05:30.412742 139814879457280 make_examples_core.py:321] Task 0/64: 6020 candidates (6707 examples) [56.91s elapsed]
	I0405 19:05:30.678823 140312747966464 make_examples_core.py:321] Task 35/64: 6014 candidates (6698 examples) [58.17s elapsed]
	I0405 19:05:31.152192 140601925828608 make_examples_core.py:321] Task 9/64: 6047 candidates (6659 examples) [60.36s elapsed]
	I0405 19:05:31.245053 139784403828736 make_examples_core.py:321] Task 4/64: 6045 candidates (6758 examples) [66.77s elapsed]
	I0405 19:05:31.306404 140153868943360 make_examples_core.py:321] Task 27/64: 6016 candidates (6730 examples) [57.10s elapsed]
	I0405 19:05:31.619379 140655090475008 make_examples_core.py:321] Task 29/64: 6000 candidates (6693 examples) [51.88s elapsed]
	I0405 19:05:31.786636 140294693892096 make_examples_core.py:321] Task 33/64: 6015 candidates (6625 examples) [50.51s elapsed]
	I0405 19:05:33.154180 139712801439744 make_examples_core.py:321] Task 51/64: 6024 candidates (6645 examples) [52.81s elapsed]
	I0405 19:05:33.360675 140306755162112 make_examples_core.py:321] Task 50/64: 6008 candidates (6625 examples) [56.69s elapsed]
	I0405 19:05:33.528404 140717129015296 make_examples_core.py:321] Task 32/64: 6048 candidates (6741 examples) [58.75s elapsed]
	I0405 19:05:33.590421 139954167652352 make_examples_core.py:321] Task 28/64: 6037 candidates (6912 examples) [67.31s elapsed]
	I0405 19:05:33.870782 139905489895424 make_examples_core.py:321] Task 54/64: 6005 candidates (6526 examples) [51.35s elapsed]
	I0405 19:05:33.994609 140525544685568 make_examples_core.py:321] Task 22/64: 6025 candidates (6574 examples) [60.78s elapsed]
	I0405 19:05:34.236593 140631264624640 make_examples_core.py:321] Task 10/64: 6008 candidates (6598 examples) [42.46s elapsed]
	I0405 19:05:34.727384 139704442609664 make_examples_core.py:321] Task 30/64: 6079 candidates (6736 examples) [59.87s elapsed]
	I0405 19:05:34.957365 139796750065664 make_examples_core.py:321] Task 24/64: 6004 candidates (6583 examples) [54.42s elapsed]
	I0405 19:05:35.633140 139665780047872 make_examples_core.py:321] Task 47/64: 6007 candidates (6626 examples) [36.67s elapsed]
	I0405 19:05:37.806146 140581680250880 make_examples_core.py:321] Task 48/64: 6029 candidates (6676 examples) [54.59s elapsed]
	I0405 19:05:38.158452 140363231965184 make_examples_core.py:321] Task 17/64: 6015 candidates (6663 examples) [56.35s elapsed]
	I0405 19:05:38.084192 140110272163840 make_examples_core.py:321] Task 16/64: 6051 candidates (6699 examples) [51.68s elapsed]
	I0405 19:05:38.479102 139634635714560 make_examples_core.py:321] Task 38/64: 6017 candidates (6636 examples) [55.55s elapsed]
	I0405 19:05:38.572518 139958181376000 make_examples_core.py:321] Task 1/64: 6011 candidates (6602 examples) [62.70s elapsed]
	I0405 19:05:38.737057 139865017016320 make_examples_core.py:321] Task 25/64: 6055 candidates (6617 examples) [60.60s elapsed]
	I0405 19:05:39.031381 139836317560832 make_examples_core.py:321] Task 26/64: 6001 candidates (6579 examples) [52.65s elapsed]
	I0405 19:05:39.062535 140375203229696 make_examples_core.py:321] Task 43/64: 6001 candidates (6663 examples) [51.93s elapsed]
	I0405 19:05:39.091734 139861846466560 make_examples_core.py:321] Task 2/64: 6001 candidates (6660 examples) [63.44s elapsed]
	I0405 19:05:39.967925 140346939555840 make_examples_core.py:321] Task 18/64: 6065 candidates (6967 examples) [59.27s elapsed]
	I0405 19:05:40.002662 140131123752960 make_examples_core.py:321] Task 23/64: 6051 candidates (6656 examples) [59.22s elapsed]
	I0405 19:05:40.140343 140505173221376 make_examples_core.py:321] Task 61/64: 6005 candidates (6659 examples) [56.58s elapsed]
	I0405 19:05:40.501802 139665467392000 make_examples_core.py:321] Task 58/64: 6002 candidates (6512 examples) [57.57s elapsed]
	I0405 19:05:40.522568 140477545705472 make_examples_core.py:321] Task 49/64: 6006 candidates (6659 examples) [53.17s elapsed]
	I0405 19:05:40.696672 139843433730048 make_examples_core.py:321] Task 15/64: 6000 candidates (6598 examples) [44.75s elapsed]
	I0405 19:05:41.626468 140314552401920 make_examples_core.py:321] Task 41/64: 6000 candidates (6572 examples) [61.56s elapsed]
	I0405 19:05:41.676415 140227901517824 make_examples_core.py:321] Task 40/64: 6021 candidates (6636 examples) [57.24s elapsed]
	I0405 19:05:41.853141 139897224224768 make_examples_core.py:321] Task 52/64: 6002 candidates (6618 examples) [60.36s elapsed]
	I0405 19:05:42.783021 139708054331392 make_examples_core.py:321] Task 55/64: 6011 candidates (6583 examples) [63.67s elapsed]
	I0405 19:05:43.201830 140375919124480 make_examples_core.py:321] Task 44/64: 6007 candidates (6594 examples) [57.27s elapsed]
	I0405 19:05:43.605483 140193283088384 make_examples_core.py:321] Task 34/64: 6005 candidates (6603 examples) [44.86s elapsed]
	I0405 19:05:43.939145 140154402775040 make_examples_core.py:321] Task 39/64: 6072 candidates (6634 examples) [65.60s elapsed]
	I0405 19:05:44.825367 140258039394304 make_examples_core.py:321] Task 46/64: 6008 candidates (6619 examples) [54.59s elapsed]
	I0405 19:05:45.586519 140526383112192 make_examples_core.py:321] Task 3/64: 6000 candidates (6694 examples) [59.46s elapsed]
	I0405 19:05:46.425793 140283220058112 make_examples_core.py:321] Task 60/64: 6006 candidates (6708 examples) [71.19s elapsed]
	I0405 19:05:46.976138 140574414864384 make_examples_core.py:321] Task 37/64: 6005 candidates (6654 examples) [52.32s elapsed]
	I0405 19:05:47.694025 140714328625152 make_examples_core.py:321] Task 42/64: 6001 candidates (6593 examples) [55.86s elapsed]
	I0405 19:05:47.831333 140134123397120 make_examples_core.py:321] Task 20/64: 6002 candidates (6649 examples) [50.79s elapsed]
	I0405 19:06:59.146740 140163637604352 make_examples_core.py:321] Task 11/64: 8000 candidates (8861 examples) [91.41s elapsed]
	I0405 19:07:02.628990 140694922235904 make_examples_core.py:321] Task 31/64: 8012 candidates (8892 examples) [92.26s elapsed]
	I0405 19:07:04.397999 140270863183872 make_examples_core.py:321] Task 8/64: 8000 candidates (8849 examples) [97.54s elapsed]
	I0405 19:07:05.048787 139735622483968 make_examples_core.py:321] Task 62/64: 8000 candidates (8742 examples) [105.62s elapsed]
	I0405 19:07:16.095530 140535564201984 make_examples_core.py:321] Task 21/64: 8000 candidates (8872 examples) [113.48s elapsed]
	I0405 19:07:16.651329 139774103187456 make_examples_core.py:321] Task 36/64: 8000 candidates (8910 examples) [109.69s elapsed]
	I0405 19:07:17.634329 139966317248512 make_examples_core.py:321] Task 7/64: 8000 candidates (8799 examples) [114.15s elapsed]
	I0405 19:07:17.944157 139712801439744 make_examples_core.py:321] Task 51/64: 8000 candidates (8831 examples) [104.79s elapsed]
	I0405 19:07:18.453257 139837493678080 make_examples_core.py:321] Task 53/64: 8001 candidates (8973 examples) [112.62s elapsed]
	I0405 19:07:19.005028 139954167652352 make_examples_core.py:321] Task 28/64: 8000 candidates (9098 examples) [105.41s elapsed]
	I0405 19:07:19.420134 139625441087488 make_examples_core.py:321] Task 14/64: 8009 candidates (8893 examples) [111.69s elapsed]
	I0405 19:07:20.180320 140655090475008 make_examples_core.py:321] Task 29/64: 8000 candidates (8926 examples) [108.56s elapsed]
	I0405 19:07:20.499978 140403951493120 make_examples_core.py:321] Task 59/64: 8005 candidates (8937 examples) [110.13s elapsed]
	I0405 19:07:23.365993 139684300988416 make_examples_core.py:321] Task 63/64: 8002 candidates (8926 examples) [113.88s elapsed]
	I0405 19:07:23.743131 140717129015296 make_examples_core.py:321] Task 32/64: 8001 candidates (8885 examples) [110.21s elapsed]
	I0405 19:07:24.237042 139796750065664 make_examples_core.py:321] Task 24/64: 8007 candidates (8870 examples) [109.28s elapsed]
	I0405 19:07:24.933803 140312747966464 make_examples_core.py:321] Task 35/64: 8000 candidates (8896 examples) [114.25s elapsed]
	I0405 19:07:24.963367 140306755162112 make_examples_core.py:321] Task 50/64: 8002 candidates (8814 examples) [111.60s elapsed]
	I0405 19:07:26.735543 139704442609664 make_examples_core.py:321] Task 30/64: 8010 candidates (8922 examples) [112.01s elapsed]
	I0405 19:07:27.402942 140060365164544 make_examples_core.py:321] Task 56/64: 8001 candidates (8756 examples) [120.24s elapsed]
	I0405 19:07:27.952076 140294693892096 make_examples_core.py:321] Task 33/64: 8001 candidates (8844 examples) [116.17s elapsed]
	I0405 19:07:28.577825 139870741843968 make_examples_core.py:321] Task 13/64: 8012 candidates (8791 examples) [118.77s elapsed]
	I0405 19:07:29.463912 140525544685568 make_examples_core.py:321] Task 22/64: 8001 candidates (8757 examples) [115.47s elapsed]
	I0405 19:07:30.423393 140153868943360 make_examples_core.py:321] Task 27/64: 8010 candidates (8932 examples) [119.12s elapsed]
	I0405 19:07:30.407285 140110272163840 make_examples_core.py:321] Task 16/64: 8001 candidates (8892 examples) [112.32s elapsed]
	I0405 19:07:33.559673 140545069715456 make_examples_core.py:321] Task 5/64: 8006 candidates (8856 examples) [133.00s elapsed]
	I0405 19:07:35.157837 140131123752960 make_examples_core.py:321] Task 23/64: 8007 candidates (8876 examples) [115.15s elapsed]
	I0405 19:07:35.421221 140389708357632 make_examples_core.py:321] Task 12/64: 8005 candidates (8918 examples) [127.54s elapsed]
	I0405 19:07:35.592767 139768521895936 make_examples_core.py:321] Task 57/64: 8003 candidates (8894 examples) [132.06s elapsed]
	I0405 19:07:35.810625 140601925828608 make_examples_core.py:321] Task 9/64: 8001 candidates (8784 examples) [124.66s elapsed]
	I0405 19:07:36.683464 140346939555840 make_examples_core.py:321] Task 18/64: 8003 candidates (9109 examples) [116.72s elapsed]
	I0405 19:07:37.832551 139865017016320 make_examples_core.py:321] Task 25/64: 8001 candidates (8780 examples) [119.10s elapsed]
	I0405 19:07:38.899439 139734917296128 make_examples_core.py:321] Task 6/64: 8008 candidates (8833 examples) [135.41s elapsed]
	I0405 19:07:38.800759 140227901517824 make_examples_core.py:321] Task 40/64: 8000 candidates (8882 examples) [117.12s elapsed]
	I0405 19:07:39.055926 139640432857088 make_examples_core.py:321] Task 19/64: 8000 candidates (8878 examples) [130.74s elapsed]
	I0405 19:07:39.319259 139997710905344 make_examples_core.py:321] Task 45/64: 8003 candidates (8768 examples) [130.02s elapsed]
	I0405 19:07:41.267045 140154402775040 make_examples_core.py:321] Task 39/64: 8004 candidates (8748 examples) [117.33s elapsed]
	I0405 19:07:41.301097 139814879457280 make_examples_core.py:321] Task 0/64: 8000 candidates (8889 examples) [130.89s elapsed]
	I0405 19:07:42.357286 139897224224768 make_examples_core.py:321] Task 52/64: 8008 candidates (8806 examples) [120.50s elapsed]
	I0405 19:07:42.652289 139784403828736 make_examples_core.py:321] Task 4/64: 8002 candidates (8925 examples) [131.41s elapsed]
	I0405 19:07:43.179886 140581680250880 make_examples_core.py:321] Task 48/64: 8000 candidates (8881 examples) [125.37s elapsed]
	I0405 19:07:44.460127 139665467392000 make_examples_core.py:321] Task 58/64: 8001 candidates (8717 examples) [123.96s elapsed]
	I0405 19:07:45.737263 140505173221376 make_examples_core.py:321] Task 61/64: 8000 candidates (8899 examples) [125.60s elapsed]
	I0405 19:07:45.943048 140477545705472 make_examples_core.py:321] Task 49/64: 8006 candidates (8865 examples) [125.42s elapsed]
	I0405 19:07:46.039530 139665780047872 make_examples_core.py:321] Task 47/64: 8012 candidates (8844 examples) [130.41s elapsed]
	I0405 19:07:46.813175 139836317560832 make_examples_core.py:321] Task 26/64: 8002 candidates (8833 examples) [127.78s elapsed]
	I0405 19:07:48.171557 140363231965184 make_examples_core.py:321] Task 17/64: 8011 candidates (8890 examples) [130.01s elapsed]
	I0405 19:07:48.138194 139843433730048 make_examples_core.py:321] Task 15/64: 8003 candidates (8893 examples) [127.44s elapsed]
	I0405 19:07:50.760326 139958181376000 make_examples_core.py:321] Task 1/64: 8008 candidates (8860 examples) [132.19s elapsed]
	I0405 19:07:51.431972 140314552401920 make_examples_core.py:321] Task 41/64: 8002 candidates (8835 examples) [129.81s elapsed]
	I0405 19:07:52.732037 140526383112192 make_examples_core.py:321] Task 3/64: 8006 candidates (8939 examples) [127.15s elapsed]
	I0405 19:07:53.205285 140631264624640 make_examples_core.py:321] Task 10/64: 8000 candidates (8760 examples) [138.97s elapsed]
	I0405 19:07:53.479450 140283220058112 make_examples_core.py:321] Task 60/64: 8004 candidates (8927 examples) [127.05s elapsed]
	I0405 19:07:54.950473 139708054331392 make_examples_core.py:321] Task 55/64: 8003 candidates (8761 examples) [132.17s elapsed]
	I0405 19:07:55.144927 140375203229696 make_examples_core.py:321] Task 43/64: 8001 candidates (8901 examples) [136.08s elapsed]
	I0405 19:07:55.671148 139905489895424 make_examples_core.py:321] Task 54/64: 8012 candidates (8762 examples) [141.80s elapsed]
	I0405 19:07:56.074243 139634635714560 make_examples_core.py:321] Task 38/64: 8003 candidates (8879 examples) [137.59s elapsed]
	I0405 19:07:57.879853 139861846466560 make_examples_core.py:321] Task 2/64: 8005 candidates (8950 examples) [138.79s elapsed]
	I0405 19:07:57.968037 140193283088384 make_examples_core.py:321] Task 34/64: 8000 candidates (8784 examples) [134.36s elapsed]
	I0405 19:07:59.089260 140714328625152 make_examples_core.py:321] Task 42/64: 8017 candidates (8827 examples) [131.39s elapsed]
	I0405 19:07:59.395781 140375919124480 make_examples_core.py:321] Task 44/64: 8001 candidates (8915 examples) [136.19s elapsed]
	I0405 19:08:01.236656 140574414864384 make_examples_core.py:321] Task 37/64: 8014 candidates (8893 examples) [134.26s elapsed]
	I0405 19:08:03.252233 140134123397120 make_examples_core.py:321] Task 20/64: 8000 candidates (8859 examples) [135.42s elapsed]
	I0405 19:08:03.675246 140258039394304 make_examples_core.py:321] Task 46/64: 8001 candidates (8769 examples) [138.85s elapsed]
	I0405 19:08:57.523421 140694922235904 make_examples_core.py:321] Task 31/64: 10000 candidates (11145 examples) [114.89s elapsed]
	I0405 19:09:04.234276 140163637604352 make_examples_core.py:321] Task 11/64: 10007 candidates (11069 examples) [125.09s elapsed]
	I0405 19:09:10.352504 140535564201984 make_examples_core.py:321] Task 21/64: 10000 candidates (11102 examples) [114.26s elapsed]
	I0405 19:09:10.139817 139625441087488 make_examples_core.py:321] Task 14/64: 10000 candidates (11113 examples) [110.72s elapsed]
	I0405 19:09:11.997951 139870741843968 make_examples_core.py:321] Task 13/64: 10003 candidates (11165 examples) [103.42s elapsed]
	I0405 19:09:12.345230 140477545705472 make_examples_core.py:321] Task 49/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00049-of-00064.gz.example_info.json
	I0405 19:09:12.345456 140477545705472 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:12.345795 140477545705472 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905352.346478     573 make_examples_native.h:179] Received shard finished.
	I0405 19:09:12.346524 140477545705472 make_examples_core.py:321] Task 49/64: Found 9664 candidate variants
	I0405 19:09:12.346587 140477545705472 make_examples_core.py:321] Task 49/64: Created 10705 examples
	I0405 19:09:12.346632 140477545705472 make_examples_core.py:321] Task 49/64: Created 0 small model examples
	I0405 19:09:12.346673 140477545705472 make_examples_core.py:321] Task 49/64: Small Model called 0 candidates
	I0405 19:09:12.316783 140270863183872 make_examples_core.py:321] Task 8/64: 10008 candidates (11079 examples) [127.92s elapsed]
	I0405 19:09:12.832602 140389708357632 make_examples_core.py:321] Task 12/64: 10009 candidates (11181 examples) [97.41s elapsed]
	I0405 19:09:14.550326 140655090475008 make_examples_core.py:321] Task 29/64: 10003 candidates (11238 examples) [114.37s elapsed]
	I0405 19:09:14.626849 140574414864384 make_examples_core.py:321] Task 37/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00037-of-00064.gz.example_info.json
	I0405 19:09:14.627090 140574414864384 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:14.627482 140574414864384 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905354.628118     566 make_examples_native.h:179] Received shard finished.
	I0405 19:09:14.628173 140574414864384 make_examples_core.py:321] Task 37/64: Found 9284 candidate variants
	I0405 19:09:14.628235 140574414864384 make_examples_core.py:321] Task 37/64: Created 10306 examples
	I0405 19:09:14.628278 140574414864384 make_examples_core.py:321] Task 37/64: Created 0 small model examples
	I0405 19:09:14.628317 140574414864384 make_examples_core.py:321] Task 37/64: Small Model called 0 candidates
	I0405 19:09:15.586135 140535564201984 make_examples_core.py:321] Task 21/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00021-of-00064.gz.example_info.json
	I0405 19:09:15.586314 140535564201984 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:15.586574 140535564201984 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905355.587155     544 make_examples_native.h:179] Received shard finished.
	I0405 19:09:15.587203 140535564201984 make_examples_core.py:321] Task 21/64: Found 10092 candidate variants
	I0405 19:09:15.587265 140535564201984 make_examples_core.py:321] Task 21/64: Created 11210 examples
	I0405 19:09:15.587348 140535564201984 make_examples_core.py:321] Task 21/64: Created 0 small model examples
	I0405 19:09:15.587394 140535564201984 make_examples_core.py:321] Task 21/64: Small Model called 0 candidates
	I0405 19:09:16.188334 139640432857088 make_examples_core.py:321] Task 19/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00019-of-00064.gz.example_info.json
	I0405 19:09:16.188559 139640432857088 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:16.188901 139640432857088 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905356.189523     534 make_examples_native.h:179] Received shard finished.
	I0405 19:09:16.189577 139640432857088 make_examples_core.py:321] Task 19/64: Found 9853 candidate variants
	I0405 19:09:16.189647 139640432857088 make_examples_core.py:321] Task 19/64: Created 11009 examples
	I0405 19:09:16.189692 139640432857088 make_examples_core.py:321] Task 19/64: Created 0 small model examples
	I0405 19:09:16.189732 139640432857088 make_examples_core.py:321] Task 19/64: Small Model called 0 candidates
	I0405 19:09:16.536587 139704442609664 make_examples_core.py:321] Task 30/64: 10009 candidates (11164 examples) [109.80s elapsed]
	I0405 19:09:16.763949 139734917296128 make_examples_core.py:321] Task 6/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00006-of-00064.gz.example_info.json
	I0405 19:09:16.764263 139734917296128 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:16.764703 139734917296128 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905356.765475     531 make_examples_native.h:179] Received shard finished.
	I0405 19:09:16.765534 139734917296128 make_examples_core.py:321] Task 6/64: Found 9751 candidate variants
	I0405 19:09:16.765598 139734917296128 make_examples_core.py:321] Task 6/64: Created 10745 examples
	I0405 19:09:16.765643 139734917296128 make_examples_core.py:321] Task 6/64: Created 0 small model examples
	I0405 19:09:16.765682 139734917296128 make_examples_core.py:321] Task 6/64: Small Model called 0 candidates
	I0405 19:09:16.870765 140601925828608 make_examples_core.py:321] Task 9/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00009-of-00064.gz.example_info.json
	I0405 19:09:16.870947 140601925828608 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:16.871365 140601925828608 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905356.871907     527 make_examples_native.h:179] Received shard finished.
	I0405 19:09:16.871951 140601925828608 make_examples_core.py:321] Task 9/64: Found 9858 candidate variants
	I0405 19:09:16.872011 140601925828608 make_examples_core.py:321] Task 9/64: Created 10799 examples
	I0405 19:09:16.872054 140601925828608 make_examples_core.py:321] Task 9/64: Created 0 small model examples
	I0405 19:09:16.872094 140601925828608 make_examples_core.py:321] Task 9/64: Small Model called 0 candidates
	I0405 19:09:17.042376 139774103187456 make_examples_core.py:321] Task 36/64: 10001 candidates (11160 examples) [120.39s elapsed]
	I0405 19:09:17.095764 139768521895936 make_examples_core.py:321] Task 57/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00057-of-00064.gz.example_info.json
	I0405 19:09:17.095941 139768521895936 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:17.096325 139768521895936 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905357.096973     581 make_examples_native.h:179] Received shard finished.
	I0405 19:09:17.097017 139768521895936 make_examples_core.py:321] Task 57/64: Found 9807 candidate variants
	I0405 19:09:17.097081 139768521895936 make_examples_core.py:321] Task 57/64: Created 10991 examples
	I0405 19:09:17.097125 139768521895936 make_examples_core.py:321] Task 57/64: Created 0 small model examples
	I0405 19:09:17.097165 139768521895936 make_examples_core.py:321] Task 57/64: Small Model called 0 candidates
	I0405 19:09:17.269745 139735622483968 make_examples_core.py:321] Task 62/64: 10005 candidates (10957 examples) [132.22s elapsed]
	I0405 19:09:17.268804 140306755162112 make_examples_core.py:321] Task 50/64: 10002 candidates (11086 examples) [112.31s elapsed]
	I0405 19:09:17.609858 140312747966464 make_examples_core.py:321] Task 35/64: 10008 candidates (11112 examples) [112.68s elapsed]
	I0405 19:09:17.630557 140389708357632 make_examples_core.py:321] Task 12/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00012-of-00064.gz.example_info.json
	I0405 19:09:17.630728 140389708357632 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:17.631070 140389708357632 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905357.631705     525 make_examples_native.h:179] Received shard finished.
	I0405 19:09:17.631756 140389708357632 make_examples_core.py:321] Task 12/64: Found 10085 candidate variants
	I0405 19:09:17.631819 140389708357632 make_examples_core.py:321] Task 12/64: Created 11263 examples
	I0405 19:09:17.631861 140389708357632 make_examples_core.py:321] Task 12/64: Created 0 small model examples
	I0405 19:09:17.631899 140389708357632 make_examples_core.py:321] Task 12/64: Small Model called 0 candidates
	I0405 19:09:18.093625 140134123397120 make_examples_core.py:321] Task 20/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00020-of-00064.gz.example_info.json
	I0405 19:09:18.093849 140134123397120 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:18.094187 140134123397120 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905358.094727     541 make_examples_native.h:179] Received shard finished.
	I0405 19:09:18.094771 140134123397120 make_examples_core.py:321] Task 20/64: Found 9217 candidate variants
	I0405 19:09:18.094832 140134123397120 make_examples_core.py:321] Task 20/64: Created 10197 examples
	I0405 19:09:18.094876 140134123397120 make_examples_core.py:321] Task 20/64: Created 0 small model examples
	I0405 19:09:18.094916 140134123397120 make_examples_core.py:321] Task 20/64: Small Model called 0 candidates
	I0405 19:09:18.200834 139837493678080 make_examples_core.py:321] Task 53/64: 10000 candidates (11157 examples) [119.75s elapsed]
	I0405 19:09:18.386445 139966317248512 make_examples_core.py:321] Task 7/64: 10002 candidates (11024 examples) [120.75s elapsed]
	I0405 19:09:18.566924 139997710905344 make_examples_core.py:321] Task 45/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00045-of-00064.gz.example_info.json
	I0405 19:09:18.567100 139997710905344 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:18.567373 139997710905344 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905358.567992     572 make_examples_native.h:179] Received shard finished.
	I0405 19:09:18.568035 139997710905344 make_examples_core.py:321] Task 45/64: Found 9534 candidate variants
	I0405 19:09:18.568095 139997710905344 make_examples_core.py:321] Task 45/64: Created 10477 examples
	I0405 19:09:18.568137 139997710905344 make_examples_core.py:321] Task 45/64: Created 0 small model examples
	I0405 19:09:18.568176 139997710905344 make_examples_core.py:321] Task 45/64: Small Model called 0 candidates
	I0405 19:09:18.607506 140110272163840 make_examples_core.py:321] Task 16/64: 10000 candidates (11237 examples) [108.20s elapsed]
	I0405 19:09:18.924780 139843433730048 make_examples_core.py:321] Task 15/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00015-of-00064.gz.example_info.json
	I0405 19:09:18.924987 139843433730048 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:18.925331 139843433730048 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905358.926134     543 make_examples_native.h:179] Received shard finished.
	I0405 19:09:18.926179 139843433730048 make_examples_core.py:321] Task 15/64: Found 9646 candidate variants
	I0405 19:09:18.926239 139843433730048 make_examples_core.py:321] Task 15/64: Created 10726 examples
	I0405 19:09:18.926280 139843433730048 make_examples_core.py:321] Task 15/64: Created 0 small model examples
	I0405 19:09:18.926317 139843433730048 make_examples_core.py:321] Task 15/64: Small Model called 0 candidates
	I0405 19:09:19.477880 139665780047872 make_examples_core.py:321] Task 47/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00047-of-00064.gz.example_info.json
	I0405 19:09:19.478090 139665780047872 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:19.478452 139665780047872 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905359.479091     570 make_examples_native.h:179] Received shard finished.
	I0405 19:09:19.479136 139665780047872 make_examples_core.py:321] Task 47/64: Found 9757 candidate variants
	I0405 19:09:19.479194 139665780047872 make_examples_core.py:321] Task 47/64: Created 10789 examples
	I0405 19:09:19.479233 139665780047872 make_examples_core.py:321] Task 47/64: Created 0 small model examples
	I0405 19:09:19.479269 139665780047872 make_examples_core.py:321] Task 47/64: Small Model called 0 candidates
	I0405 19:09:19.899035 139796750065664 make_examples_core.py:321] Task 24/64: 10041 candidates (11120 examples) [115.66s elapsed]
	I0405 19:09:20.249567 139966317248512 make_examples_core.py:321] Task 7/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00007-of-00064.gz.example_info.json
	I0405 19:09:20.249731 139966317248512 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:20.249973 139966317248512 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905360.250579     540 make_examples_native.h:179] Received shard finished.
	I0405 19:09:20.250621 139966317248512 make_examples_core.py:321] Task 7/64: Found 10033 candidate variants
	I0405 19:09:20.250679 139966317248512 make_examples_core.py:321] Task 7/64: Created 11055 examples
	I0405 19:09:20.250720 139966317248512 make_examples_core.py:321] Task 7/64: Created 0 small model examples
	I0405 19:09:20.250756 139966317248512 make_examples_core.py:321] Task 7/64: Small Model called 0 candidates
	I0405 19:09:20.700129 139870741843968 make_examples_core.py:321] Task 13/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00013-of-00064.gz.example_info.json
	I0405 19:09:20.700316 139870741843968 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:20.700585 139870741843968 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905360.701168     533 make_examples_native.h:179] Received shard finished.
	I0405 19:09:20.701213 139870741843968 make_examples_core.py:321] Task 13/64: Found 10167 candidate variants
	I0405 19:09:20.701270 139870741843968 make_examples_core.py:321] Task 13/64: Created 11331 examples
	I0405 19:09:20.701309 139870741843968 make_examples_core.py:321] Task 13/64: Created 0 small model examples
	I0405 19:09:20.701345 139870741843968 make_examples_core.py:321] Task 13/64: Small Model called 0 candidates
	I0405 19:09:20.856496 140403951493120 make_examples_core.py:321] Task 59/64: 10001 candidates (11125 examples) [120.36s elapsed]
	I0405 19:09:20.986882 139665467392000 make_examples_core.py:321] Task 58/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00058-of-00064.gz.example_info.json
	I0405 19:09:20.987057 139665467392000 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:20.987321 139665467392000 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905360.987899     580 make_examples_native.h:179] Received shard finished.
	I0405 19:09:20.987943 139665467392000 make_examples_core.py:321] Task 58/64: Found 9644 candidate variants
	I0405 19:09:20.988000 139665467392000 make_examples_core.py:321] Task 58/64: Created 10484 examples
	I0405 19:09:20.988040 139665467392000 make_examples_core.py:321] Task 58/64: Created 0 small model examples
	I0405 19:09:20.988076 139665467392000 make_examples_core.py:321] Task 58/64: Small Model called 0 candidates
	I0405 19:09:21.311955 139708054331392 make_examples_core.py:321] Task 55/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00055-of-00064.gz.example_info.json
	I0405 19:09:21.312244 139708054331392 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:21.312784 139708054331392 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905361.313527     576 make_examples_native.h:179] Received shard finished.
	I0405 19:09:21.313572 139708054331392 make_examples_core.py:321] Task 55/64: Found 9671 candidate variants
	I0405 19:09:21.313634 139708054331392 make_examples_core.py:321] Task 55/64: Created 10665 examples
	I0405 19:09:21.313678 139708054331392 make_examples_core.py:321] Task 55/64: Created 0 small model examples
	I0405 19:09:21.313717 139708054331392 make_examples_core.py:321] Task 55/64: Small Model called 0 candidates
	I0405 19:09:21.367721 140525544685568 make_examples_core.py:321] Task 22/64: 10002 candidates (10953 examples) [111.90s elapsed]
	I0405 19:09:21.956880 140505173221376 make_examples_core.py:321] Task 61/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00061-of-00064.gz.example_info.json
	I0405 19:09:21.957158 140505173221376 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:21.957650 140505173221376 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905361.958482     584 make_examples_native.h:179] Received shard finished.
	I0405 19:09:21.958531 140505173221376 make_examples_core.py:321] Task 61/64: Found 9714 candidate variants
	I0405 19:09:21.958599 140505173221376 make_examples_core.py:321] Task 61/64: Created 10805 examples
	I0405 19:09:21.958650 140505173221376 make_examples_core.py:321] Task 61/64: Created 0 small model examples
	I0405 19:09:21.958694 140505173221376 make_examples_core.py:321] Task 61/64: Small Model called 0 candidates
	I0405 19:09:22.020924 139625441087488 make_examples_core.py:321] Task 14/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00014-of-00064.gz.example_info.json
	I0405 19:09:22.021083 139625441087488 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:22.021351 139625441087488 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905362.021858     537 make_examples_native.h:179] Received shard finished.
	I0405 19:09:22.021899 139625441087488 make_examples_core.py:321] Task 14/64: Found 10266 candidate variants
	I0405 19:09:22.021956 139625441087488 make_examples_core.py:321] Task 14/64: Created 11409 examples
	I0405 19:09:22.021995 139625441087488 make_examples_core.py:321] Task 14/64: Created 0 small model examples
	I0405 19:09:22.022030 139625441087488 make_examples_core.py:321] Task 14/64: Small Model called 0 candidates
	I0405 19:09:22.089878 139684300988416 make_examples_core.py:321] Task 63/64: 10007 candidates (11151 examples) [118.72s elapsed]
	I0405 19:09:22.598160 140375919124480 make_examples_core.py:321] Task 44/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00044-of-00064.gz.example_info.json
	I0405 19:09:22.598344 140375919124480 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:22.598601 140375919124480 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905362.599174     567 make_examples_native.h:179] Received shard finished.
	I0405 19:09:22.599231 140375919124480 make_examples_core.py:321] Task 44/64: Found 9499 candidate variants
	I0405 19:09:22.599289 140375919124480 make_examples_core.py:321] Task 44/64: Created 10587 examples
	I0405 19:09:22.599358 140375919124480 make_examples_core.py:321] Task 44/64: Created 0 small model examples
	I0405 19:09:22.599396 140375919124480 make_examples_core.py:321] Task 44/64: Small Model called 0 candidates
	I0405 19:09:22.920031 140060365164544 make_examples_core.py:321] Task 56/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00056-of-00064.gz.example_info.json
	I0405 19:09:22.920197 140060365164544 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:22.920429 140060365164544 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905362.920989     579 make_examples_native.h:179] Received shard finished.
	I0405 19:09:22.921029 140060365164544 make_examples_core.py:321] Task 56/64: Found 9898 candidate variants
	I0405 19:09:22.921084 140060365164544 make_examples_core.py:321] Task 56/64: Created 10858 examples
	I0405 19:09:22.921124 140060365164544 make_examples_core.py:321] Task 56/64: Created 0 small model examples
	I0405 19:09:22.921162 140060365164544 make_examples_core.py:321] Task 56/64: Small Model called 0 candidates
	I0405 19:09:23.007013 139905489895424 make_examples_core.py:321] Task 54/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00054-of-00064.gz.example_info.json
	I0405 19:09:23.007202 139905489895424 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:23.007481 139905489895424 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905363.008054     577 make_examples_native.h:179] Received shard finished.
	I0405 19:09:23.008096 139905489895424 make_examples_core.py:321] Task 54/64: Found 9587 candidate variants
	I0405 19:09:23.008152 139905489895424 make_examples_core.py:321] Task 54/64: Created 10560 examples
	I0405 19:09:23.008190 139905489895424 make_examples_core.py:321] Task 54/64: Created 0 small model examples
	I0405 19:09:23.008231 139905489895424 make_examples_core.py:321] Task 54/64: Small Model called 0 candidates
	I0405 19:09:23.825644 139861846466560 make_examples_core.py:321] Task 2/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00002-of-00064.gz.example_info.json
	I0405 19:09:23.825813 139861846466560 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:23.826154 139861846466560 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905363.826715     532 make_examples_native.h:179] Received shard finished.
	I0405 19:09:23.826758 139861846466560 make_examples_core.py:321] Task 2/64: Found 9524 candidate variants
	I0405 19:09:23.826812 139861846466560 make_examples_core.py:321] Task 2/64: Created 10601 examples
	I0405 19:09:23.826849 139861846466560 make_examples_core.py:321] Task 2/64: Created 0 small model examples
	I0405 19:09:23.826884 139861846466560 make_examples_core.py:321] Task 2/64: Small Model called 0 candidates
	I0405 19:09:24.080067 140714328625152 make_examples_core.py:321] Task 42/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00042-of-00064.gz.example_info.json
	I0405 19:09:24.080243 140714328625152 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.080482 140714328625152 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.081010     568 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.081053 140714328625152 make_examples_core.py:321] Task 42/64: Found 9627 candidate variants
	I0405 19:09:24.081107 140714328625152 make_examples_core.py:321] Task 42/64: Created 10616 examples
	I0405 19:09:24.081146 140714328625152 make_examples_core.py:321] Task 42/64: Created 0 small model examples
	I0405 19:09:24.081181 140714328625152 make_examples_core.py:321] Task 42/64: Small Model called 0 candidates
	I0405 19:09:24.307501 140631264624640 make_examples_core.py:321] Task 10/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00010-of-00064.gz.example_info.json
	I0405 19:09:24.307682 140631264624640 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.307934 140631264624640 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.308519     535 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.308562 140631264624640 make_examples_core.py:321] Task 10/64: Found 9821 candidate variants
	I0405 19:09:24.308617 140631264624640 make_examples_core.py:321] Task 10/64: Created 10807 examples
	I0405 19:09:24.308656 140631264624640 make_examples_core.py:321] Task 10/64: Created 0 small model examples
	I0405 19:09:24.308692 140631264624640 make_examples_core.py:321] Task 10/64: Small Model called 0 candidates
	I0405 19:09:24.281014 140375203229696 make_examples_core.py:321] Task 43/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00043-of-00064.gz.example_info.json
	I0405 19:09:24.281295 140375203229696 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.281685 140375203229696 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.282409     565 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.282457 140375203229696 make_examples_core.py:321] Task 43/64: Found 9699 candidate variants
	I0405 19:09:24.282512 140375203229696 make_examples_core.py:321] Task 43/64: Created 10781 examples
	I0405 19:09:24.282549 140375203229696 make_examples_core.py:321] Task 43/64: Created 0 small model examples
	I0405 19:09:24.282583 140375203229696 make_examples_core.py:321] Task 43/64: Small Model called 0 candidates
	I0405 19:09:24.581607 140346939555840 make_examples_core.py:321] Task 18/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00018-of-00064.gz.example_info.json
	I0405 19:09:24.581776 140346939555840 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.582115 140346939555840 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.582656     539 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.582695 140346939555840 make_examples_core.py:321] Task 18/64: Found 9835 candidate variants
	I0405 19:09:24.582748 140346939555840 make_examples_core.py:321] Task 18/64: Created 11130 examples
	I0405 19:09:24.582783 140346939555840 make_examples_core.py:321] Task 18/64: Created 0 small model examples
	I0405 19:09:24.582816 140346939555840 make_examples_core.py:321] Task 18/64: Small Model called 0 candidates
	I0405 19:09:24.622865 139958181376000 make_examples_core.py:321] Task 1/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00001-of-00064.gz.example_info.json
	I0405 19:09:24.623135 139958181376000 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.623616 139958181376000 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.624323     526 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.624361 139958181376000 make_examples_core.py:321] Task 1/64: Found 9824 candidate variants
	I0405 19:09:24.624414 139958181376000 make_examples_core.py:321] Task 1/64: Created 10886 examples
	I0405 19:09:24.624452 139958181376000 make_examples_core.py:321] Task 1/64: Created 0 small model examples
	I0405 19:09:24.624487 139958181376000 make_examples_core.py:321] Task 1/64: Small Model called 0 candidates
	I0405 19:09:24.708471 139634635714560 make_examples_core.py:321] Task 38/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00038-of-00064.gz.example_info.json
	I0405 19:09:24.708637 139634635714560 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.708881 139634635714560 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.709473     560 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.709521 139634635714560 make_examples_core.py:321] Task 38/64: Found 9566 candidate variants
	I0405 19:09:24.709574 139634635714560 make_examples_core.py:321] Task 38/64: Created 10600 examples
	I0405 19:09:24.709616 139634635714560 make_examples_core.py:321] Task 38/64: Created 0 small model examples
	I0405 19:09:24.709659 139634635714560 make_examples_core.py:321] Task 38/64: Small Model called 0 candidates
	I0405 19:09:24.725435 140581680250880 make_examples_core.py:321] Task 48/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00048-of-00064.gz.example_info.json
	I0405 19:09:24.725622 140581680250880 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:24.725998 140581680250880 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905364.726589     571 make_examples_native.h:179] Received shard finished.
	I0405 19:09:24.726629 140581680250880 make_examples_core.py:321] Task 48/64: Found 9872 candidate variants
	I0405 19:09:24.726683 140581680250880 make_examples_core.py:321] Task 48/64: Created 10986 examples
	I0405 19:09:24.726722 140581680250880 make_examples_core.py:321] Task 48/64: Created 0 small model examples
	I0405 19:09:24.726758 140581680250880 make_examples_core.py:321] Task 48/64: Small Model called 0 candidates
	I0405 19:09:24.874585 140227901517824 make_examples_core.py:321] Task 40/64: 10005 candidates (11122 examples) [106.07s elapsed]
	I0405 19:09:25.101145 139954167652352 make_examples_core.py:321] Task 28/64: 10004 candidates (11327 examples) [126.10s elapsed]
	I0405 19:09:25.422259 139897224224768 make_examples_core.py:321] Task 52/64: 10017 candidates (11048 examples) [103.06s elapsed]
	I0405 19:09:25.422293 139836317560832 make_examples_core.py:321] Task 26/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00026-of-00064.gz.example_info.json
	I0405 19:09:25.422431 139836317560832 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:25.422663 139836317560832 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905365.423160     542 make_examples_native.h:179] Received shard finished.
	I0405 19:09:25.423196 139836317560832 make_examples_core.py:321] Task 26/64: Found 9847 candidate variants
	I0405 19:09:25.423248 139836317560832 make_examples_core.py:321] Task 26/64: Created 10909 examples
	I0405 19:09:25.423284 139836317560832 make_examples_core.py:321] Task 26/64: Created 0 small model examples
	I0405 19:09:25.423339 139836317560832 make_examples_core.py:321] Task 26/64: Small Model called 0 candidates
	I0405 19:09:25.500285 139837493678080 make_examples_core.py:321] Task 53/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00053-of-00064.gz.example_info.json
	I0405 19:09:25.500437 139837493678080 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:25.500679 139837493678080 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905365.501216     578 make_examples_native.h:179] Received shard finished.
	I0405 19:09:25.501260 139837493678080 make_examples_core.py:321] Task 53/64: Found 10149 candidate variants
	I0405 19:09:25.501311 139837493678080 make_examples_core.py:321] Task 53/64: Created 11335 examples
	I0405 19:09:25.501346 139837493678080 make_examples_core.py:321] Task 53/64: Created 0 small model examples
	I0405 19:09:25.501378 139837493678080 make_examples_core.py:321] Task 53/64: Small Model called 0 candidates
	I0405 19:09:25.778570 139712801439744 make_examples_core.py:321] Task 51/64: 10004 candidates (11110 examples) [127.83s elapsed]
	I0405 19:09:25.994660 139704442609664 make_examples_core.py:321] Task 30/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00030-of-00064.gz.example_info.json
	I0405 19:09:25.994906 139704442609664 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:25.995365 139704442609664 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905365.996039     549 make_examples_native.h:179] Received shard finished.
	I0405 19:09:25.996076 139704442609664 make_examples_core.py:321] Task 30/64: Found 10163 candidate variants
	I0405 19:09:25.996127 139704442609664 make_examples_core.py:321] Task 30/64: Created 11322 examples
	I0405 19:09:25.996164 139704442609664 make_examples_core.py:321] Task 30/64: Created 0 small model examples
	I0405 19:09:25.996197 139704442609664 make_examples_core.py:321] Task 30/64: Small Model called 0 candidates
	I0405 19:09:26.185680 140363231965184 make_examples_core.py:321] Task 17/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00017-of-00064.gz.example_info.json
	I0405 19:09:26.185842 140363231965184 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:26.186190 140363231965184 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905366.186779     555 make_examples_native.h:179] Received shard finished.
	I0405 19:09:26.186815 140363231965184 make_examples_core.py:321] Task 17/64: Found 9648 candidate variants
	I0405 19:09:26.186867 140363231965184 make_examples_core.py:321] Task 17/64: Created 10732 examples
	I0405 19:09:26.186901 140363231965184 make_examples_core.py:321] Task 17/64: Created 0 small model examples
	I0405 19:09:26.186931 140363231965184 make_examples_core.py:321] Task 17/64: Small Model called 0 candidates
	I0405 19:09:26.198944 140193283088384 make_examples_core.py:321] Task 34/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00034-of-00064.gz.example_info.json
	I0405 19:09:26.199107 140193283088384 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:26.199450 140193283088384 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905366.200034     564 make_examples_native.h:179] Received shard finished.
	I0405 19:09:26.200070 140193283088384 make_examples_core.py:321] Task 34/64: Found 9555 candidate variants
	I0405 19:09:26.200124 140193283088384 make_examples_core.py:321] Task 34/64: Created 10491 examples
	I0405 19:09:26.200161 140193283088384 make_examples_core.py:321] Task 34/64: Created 0 small model examples
	I0405 19:09:26.200197 140193283088384 make_examples_core.py:321] Task 34/64: Small Model called 0 candidates
	I0405 19:09:26.430252 139684300988416 make_examples_core.py:321] Task 63/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00063-of-00064.gz.example_info.json
	I0405 19:09:26.430397 139684300988416 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:26.430686 139684300988416 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905366.431292     587 make_examples_native.h:179] Received shard finished.
	I0405 19:09:26.431342 139684300988416 make_examples_core.py:321] Task 63/64: Found 10110 candidate variants
	I0405 19:09:26.431391 139684300988416 make_examples_core.py:321] Task 63/64: Created 11260 examples
	I0405 19:09:26.431425 139684300988416 make_examples_core.py:321] Task 63/64: Created 0 small model examples
	I0405 19:09:26.431455 139684300988416 make_examples_core.py:321] Task 63/64: Small Model called 0 candidates
	I0405 19:09:26.526303 140312747966464 make_examples_core.py:321] Task 35/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00035-of-00064.gz.example_info.json
	I0405 19:09:26.526558 140312747966464 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:26.527025 140312747966464 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905366.527749     558 make_examples_native.h:179] Received shard finished.
	I0405 19:09:26.527787 140312747966464 make_examples_core.py:321] Task 35/64: Found 10177 candidate variants
	I0405 19:09:26.527838 140312747966464 make_examples_core.py:321] Task 35/64: Created 11303 examples
	I0405 19:09:26.527873 140312747966464 make_examples_core.py:321] Task 35/64: Created 0 small model examples
	I0405 19:09:26.527904 140312747966464 make_examples_core.py:321] Task 35/64: Small Model called 0 candidates
	I0405 19:09:26.735742 139814879457280 make_examples_core.py:321] Task 0/64: 10006 candidates (11149 examples) [105.43s elapsed]
	I0405 19:09:27.137730 140131123752960 make_examples_core.py:321] Task 23/64: 10005 candidates (11065 examples) [111.98s elapsed]
	I0405 19:09:27.350533 140283220058112 make_examples_core.py:321] Task 60/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00060-of-00064.gz.example_info.json
	I0405 19:09:27.350705 140283220058112 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:27.351034 140283220058112 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905367.351606     585 make_examples_native.h:179] Received shard finished.
	I0405 19:09:27.351644 140283220058112 make_examples_core.py:321] Task 60/64: Found 9749 candidate variants
	I0405 19:09:27.351695 140283220058112 make_examples_core.py:321] Task 60/64: Created 10914 examples
	I0405 19:09:27.351728 140283220058112 make_examples_core.py:321] Task 60/64: Created 0 small model examples
	I0405 19:09:27.351758 140283220058112 make_examples_core.py:321] Task 60/64: Small Model called 0 candidates
	I0405 19:09:27.350579 140545069715456 make_examples_core.py:321] Task 5/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00005-of-00064.gz.example_info.json
	I0405 19:09:27.350732 140545069715456 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:27.350951 140545069715456 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905367.351451     524 make_examples_native.h:179] Received shard finished.
	I0405 19:09:27.351491 140545069715456 make_examples_core.py:321] Task 5/64: Found 9976 candidate variants
	I0405 19:09:27.351539 140545069715456 make_examples_core.py:321] Task 5/64: Created 11028 examples
	I0405 19:09:27.351572 140545069715456 make_examples_core.py:321] Task 5/64: Created 0 small model examples
	I0405 19:09:27.351602 140545069715456 make_examples_core.py:321] Task 5/64: Small Model called 0 candidates
	I0405 19:09:27.507572 140258039394304 make_examples_core.py:321] Task 46/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00046-of-00064.gz.example_info.json
	I0405 19:09:27.507722 140258039394304 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:27.508056 140258039394304 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905367.508550     569 make_examples_native.h:179] Received shard finished.
	I0405 19:09:27.508584 140258039394304 make_examples_core.py:321] Task 46/64: Found 9463 candidate variants
	I0405 19:09:27.508630 140258039394304 make_examples_core.py:321] Task 46/64: Created 10403 examples
	I0405 19:09:27.508662 140258039394304 make_examples_core.py:321] Task 46/64: Created 0 small model examples
	I0405 19:09:27.508692 140258039394304 make_examples_core.py:321] Task 46/64: Small Model called 0 candidates
	I0405 19:09:27.660274 140717129015296 make_examples_core.py:321] Task 32/64: 10023 candidates (11155 examples) [123.92s elapsed]
	I0405 19:09:27.846431 139774103187456 make_examples_core.py:321] Task 36/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00036-of-00064.gz.example_info.json
	I0405 19:09:27.846671 139774103187456 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:27.847083 139774103187456 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905367.847715     557 make_examples_native.h:179] Received shard finished.
	I0405 19:09:27.847751 139774103187456 make_examples_core.py:321] Task 36/64: Found 10266 candidate variants
	I0405 19:09:27.847799 139774103187456 make_examples_core.py:321] Task 36/64: Created 11464 examples
	I0405 19:09:27.847831 139774103187456 make_examples_core.py:321] Task 36/64: Created 0 small model examples
	I0405 19:09:27.847859 139774103187456 make_examples_core.py:321] Task 36/64: Small Model called 0 candidates
	I0405 19:09:27.974672 139735622483968 make_examples_core.py:321] Task 62/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00062-of-00064.gz.example_info.json
	I0405 19:09:27.974810 139735622483968 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:27.975087 139735622483968 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905367.975629     583 make_examples_native.h:179] Received shard finished.
	I0405 19:09:27.975662 139735622483968 make_examples_core.py:321] Task 62/64: Found 10240 candidate variants
	I0405 19:09:27.975708 139735622483968 make_examples_core.py:321] Task 62/64: Created 11201 examples
	I0405 19:09:27.975740 139735622483968 make_examples_core.py:321] Task 62/64: Created 0 small model examples
	I0405 19:09:27.975770 139735622483968 make_examples_core.py:321] Task 62/64: Small Model called 0 candidates
	I0405 19:09:28.014513 140153868943360 make_examples_core.py:321] Task 27/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00027-of-00064.gz.example_info.json
	I0405 19:09:28.014678 140153868943360 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:28.014994 140153868943360 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905368.015497     545 make_examples_native.h:179] Received shard finished.
	I0405 19:09:28.015538 140153868943360 make_examples_core.py:321] Task 27/64: Found 9806 candidate variants
	I0405 19:09:28.015587 140153868943360 make_examples_core.py:321] Task 27/64: Created 10884 examples
	I0405 19:09:28.015618 140153868943360 make_examples_core.py:321] Task 27/64: Created 0 small model examples
	I0405 19:09:28.015648 140153868943360 make_examples_core.py:321] Task 27/64: Small Model called 0 candidates
	I0405 19:09:28.115915 140163637604352 make_examples_core.py:321] Task 11/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00011-of-00064.gz.example_info.json
	I0405 19:09:28.116066 140163637604352 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:28.116395 140163637604352 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905368.116877     528 make_examples_native.h:179] Received shard finished.
	I0405 19:09:28.116911 140163637604352 make_examples_core.py:321] Task 11/64: Found 10501 candidate variants
	I0405 19:09:28.116958 140163637604352 make_examples_core.py:321] Task 11/64: Created 11599 examples
	I0405 19:09:28.116990 140163637604352 make_examples_core.py:321] Task 11/64: Created 0 small model examples
	I0405 19:09:28.117019 140163637604352 make_examples_core.py:321] Task 11/64: Small Model called 0 candidates
	I0405 19:09:28.533179 140525544685568 make_examples_core.py:321] Task 22/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00022-of-00064.gz.example_info.json
	I0405 19:09:28.533346 140525544685568 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:28.533674 140525544685568 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905368.534229     538 make_examples_native.h:179] Received shard finished.
	I0405 19:09:28.534277 140525544685568 make_examples_core.py:321] Task 22/64: Found 10162 candidate variants
	I0405 19:09:28.534343 140525544685568 make_examples_core.py:321] Task 22/64: Created 11119 examples
	I0405 19:09:28.534386 140525544685568 make_examples_core.py:321] Task 22/64: Created 0 small model examples
	I0405 19:09:28.534424 140525544685568 make_examples_core.py:321] Task 22/64: Small Model called 0 candidates
	I0405 19:09:28.830268 140294693892096 make_examples_core.py:321] Task 33/64: 10015 candidates (11114 examples) [120.88s elapsed]
	I0405 19:09:29.694445 140655090475008 make_examples_core.py:321] Task 29/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00029-of-00064.gz.example_info.json
	I0405 19:09:29.694602 140655090475008 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:29.694945 140655090475008 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905369.695546     548 make_examples_native.h:179] Received shard finished.
	I0405 19:09:29.695580 140655090475008 make_examples_core.py:321] Task 29/64: Found 10354 candidate variants
	I0405 19:09:29.695627 140655090475008 make_examples_core.py:321] Task 29/64: Created 11618 examples
	I0405 19:09:29.695660 140655090475008 make_examples_core.py:321] Task 29/64: Created 0 small model examples
	I0405 19:09:29.695691 140655090475008 make_examples_core.py:321] Task 29/64: Small Model called 0 candidates
	I0405 19:09:29.696407 140294693892096 make_examples_core.py:321] Task 33/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00033-of-00064.gz.example_info.json
	I0405 19:09:29.696543 140294693892096 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:29.696758 140294693892096 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905369.697300     554 make_examples_native.h:179] Received shard finished.
	I0405 19:09:29.697335 140294693892096 make_examples_core.py:321] Task 33/64: Found 10032 candidate variants
	I0405 19:09:29.697380 140294693892096 make_examples_core.py:321] Task 33/64: Created 11135 examples
	I0405 19:09:29.697411 140294693892096 make_examples_core.py:321] Task 33/64: Created 0 small model examples
	I0405 19:09:29.697438 140294693892096 make_examples_core.py:321] Task 33/64: Small Model called 0 candidates
	I0405 19:09:29.924884 139865017016320 make_examples_core.py:321] Task 25/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00025-of-00064.gz.example_info.json
	I0405 19:09:29.925038 139865017016320 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:29.925341 139865017016320 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905369.925842     559 make_examples_native.h:179] Received shard finished.
	I0405 19:09:29.925875 139865017016320 make_examples_core.py:321] Task 25/64: Found 9935 candidate variants
	I0405 19:09:29.925922 139865017016320 make_examples_core.py:321] Task 25/64: Created 10929 examples
	I0405 19:09:29.925954 139865017016320 make_examples_core.py:321] Task 25/64: Created 0 small model examples
	I0405 19:09:29.925982 139865017016320 make_examples_core.py:321] Task 25/64: Small Model called 0 candidates
	I0405 19:09:30.221116 139784403828736 make_examples_core.py:321] Task 4/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00004-of-00064.gz.example_info.json
	I0405 19:09:30.221271 139784403828736 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.221513 139784403828736 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.222053     529 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.222085 139784403828736 make_examples_core.py:321] Task 4/64: Found 9985 candidate variants
	I0405 19:09:30.222132 139784403828736 make_examples_core.py:321] Task 4/64: Created 11159 examples
	I0405 19:09:30.222165 139784403828736 make_examples_core.py:321] Task 4/64: Created 0 small model examples
	I0405 19:09:30.222195 139784403828736 make_examples_core.py:321] Task 4/64: Small Model called 0 candidates
	I0405 19:09:30.355697 139796750065664 make_examples_core.py:321] Task 24/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00024-of-00064.gz.example_info.json
	I0405 19:09:30.355866 139796750065664 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.356209 139796750065664 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.356744     552 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.356784 139796750065664 make_examples_core.py:321] Task 24/64: Found 10330 candidate variants
	I0405 19:09:30.356830 139796750065664 make_examples_core.py:321] Task 24/64: Created 11430 examples
	I0405 19:09:30.356862 139796750065664 make_examples_core.py:321] Task 24/64: Created 0 small model examples
	I0405 19:09:30.356890 139796750065664 make_examples_core.py:321] Task 24/64: Small Model called 0 candidates
	I0405 19:09:30.498348 140154402775040 make_examples_core.py:321] Task 39/64: 10002 candidates (10958 examples) [109.23s elapsed]
	I0405 19:09:30.599509 140270863183872 make_examples_core.py:321] Task 8/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00008-of-00064.gz.example_info.json
	I0405 19:09:30.599763 140270863183872 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.600160 140270863183872 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.600899     530 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.600934 140270863183872 make_examples_core.py:321] Task 8/64: Found 10491 candidate variants
	I0405 19:09:30.600981 140270863183872 make_examples_core.py:321] Task 8/64: Created 11612 examples
	I0405 19:09:30.601014 140270863183872 make_examples_core.py:321] Task 8/64: Created 0 small model examples
	I0405 19:09:30.601044 140270863183872 make_examples_core.py:321] Task 8/64: Small Model called 0 candidates
	I0405 19:09:30.850215 139814879457280 make_examples_core.py:321] Task 0/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00000-of-00064.gz.example_info.json
	I0405 19:09:30.850342 139814879457280 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.850636 139814879457280 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.851039     536 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.851070 139814879457280 make_examples_core.py:321] Task 0/64: Found 10120 candidate variants
	I0405 19:09:30.851117 139814879457280 make_examples_core.py:321] Task 0/64: Created 11276 examples
	I0405 19:09:30.851150 139814879457280 make_examples_core.py:321] Task 0/64: Created 0 small model examples
	I0405 19:09:30.851180 139814879457280 make_examples_core.py:321] Task 0/64: Small Model called 0 candidates
	I0405 19:09:30.907825 140314552401920 make_examples_core.py:321] Task 41/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00041-of-00064.gz.example_info.json
	I0405 19:09:30.907968 140314552401920 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.908292 140314552401920 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.908831     562 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.908867 140314552401920 make_examples_core.py:321] Task 41/64: Found 9773 candidate variants
	I0405 19:09:30.908913 140314552401920 make_examples_core.py:321] Task 41/64: Created 10794 examples
	I0405 19:09:30.908944 140314552401920 make_examples_core.py:321] Task 41/64: Created 0 small model examples
	I0405 19:09:30.908972 140314552401920 make_examples_core.py:321] Task 41/64: Small Model called 0 candidates
	I0405 19:09:30.959397 140154402775040 make_examples_core.py:321] Task 39/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00039-of-00064.gz.example_info.json
	I0405 19:09:30.959522 140154402775040 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:30.959833 140154402775040 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905370.960297     563 make_examples_native.h:179] Received shard finished.
	I0405 19:09:30.960330 140154402775040 make_examples_core.py:321] Task 39/64: Found 10014 candidate variants
	I0405 19:09:30.960377 140154402775040 make_examples_core.py:321] Task 39/64: Created 10970 examples
	I0405 19:09:30.960410 140154402775040 make_examples_core.py:321] Task 39/64: Created 0 small model examples
	I0405 19:09:30.960440 140154402775040 make_examples_core.py:321] Task 39/64: Small Model called 0 candidates
	I0405 19:09:31.007441 140694922235904 make_examples_core.py:321] Task 31/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00031-of-00064.gz.example_info.json
	I0405 19:09:31.007687 140694922235904 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:31.008075 140694922235904 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905371.008709     553 make_examples_native.h:179] Received shard finished.
	I0405 19:09:31.008746 140694922235904 make_examples_core.py:321] Task 31/64: Found 10695 candidate variants
	I0405 19:09:31.008793 140694922235904 make_examples_core.py:321] Task 31/64: Created 11928 examples
	I0405 19:09:31.008826 140694922235904 make_examples_core.py:321] Task 31/64: Created 0 small model examples
	I0405 19:09:31.008856 140694922235904 make_examples_core.py:321] Task 31/64: Small Model called 0 candidates
	I0405 19:09:31.300354 140306755162112 make_examples_core.py:321] Task 50/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00050-of-00064.gz.example_info.json
	I0405 19:09:31.300507 140306755162112 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:31.300815 140306755162112 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905371.301256     575 make_examples_native.h:179] Received shard finished.
	I0405 19:09:31.301288 140306755162112 make_examples_core.py:321] Task 50/64: Found 10440 candidate variants
	I0405 19:09:31.301333 140306755162112 make_examples_core.py:321] Task 50/64: Created 11592 examples
	I0405 19:09:31.301364 140306755162112 make_examples_core.py:321] Task 50/64: Created 0 small model examples
	I0405 19:09:31.301392 140306755162112 make_examples_core.py:321] Task 50/64: Small Model called 0 candidates
	I0405 19:09:31.771923 140110272163840 make_examples_core.py:321] Task 16/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00016-of-00064.gz.example_info.json
	I0405 19:09:31.772055 140110272163840 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:31.772359 140110272163840 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905371.772834     546 make_examples_native.h:179] Received shard finished.
	I0405 19:09:31.772866 140110272163840 make_examples_core.py:321] Task 16/64: Found 10331 candidate variants
	I0405 19:09:31.772912 140110272163840 make_examples_core.py:321] Task 16/64: Created 11598 examples
	I0405 19:09:31.772944 140110272163840 make_examples_core.py:321] Task 16/64: Created 0 small model examples
	I0405 19:09:31.772972 140110272163840 make_examples_core.py:321] Task 16/64: Small Model called 0 candidates
	I0405 19:09:31.890323 140526383112192 make_examples_core.py:321] Task 3/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00003-of-00064.gz.example_info.json
	I0405 19:09:31.890568 140526383112192 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:31.891024 140526383112192 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905371.891809     550 make_examples_native.h:179] Received shard finished.
	I0405 19:09:31.891842 140526383112192 make_examples_core.py:321] Task 3/64: Found 9818 candidate variants
	I0405 19:09:31.891889 140526383112192 make_examples_core.py:321] Task 3/64: Created 10970 examples
	I0405 19:09:31.891921 140526383112192 make_examples_core.py:321] Task 3/64: Created 0 small model examples
	I0405 19:09:31.891949 140526383112192 make_examples_core.py:321] Task 3/64: Small Model called 0 candidates
	I0405 19:09:31.934371 139712801439744 make_examples_core.py:321] Task 51/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00051-of-00064.gz.example_info.json
	I0405 19:09:31.934590 139712801439744 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:31.934914 139712801439744 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905371.935594     574 make_examples_native.h:179] Received shard finished.
	I0405 19:09:31.935630 139712801439744 make_examples_core.py:321] Task 51/64: Found 10158 candidate variants
	I0405 19:09:31.935677 139712801439744 make_examples_core.py:321] Task 51/64: Created 11264 examples
	I0405 19:09:31.935710 139712801439744 make_examples_core.py:321] Task 51/64: Created 0 small model examples
	I0405 19:09:31.935740 139712801439744 make_examples_core.py:321] Task 51/64: Small Model called 0 candidates
	I0405 19:09:33.342843 139897224224768 make_examples_core.py:321] Task 52/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00052-of-00064.gz.example_info.json
	I0405 19:09:33.342981 139897224224768 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:33.343185 139897224224768 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905373.343723     582 make_examples_native.h:179] Received shard finished.
	I0405 19:09:33.343755 139897224224768 make_examples_core.py:321] Task 52/64: Found 10237 candidate variants
	I0405 19:09:33.343848 139897224224768 make_examples_core.py:321] Task 52/64: Created 11295 examples
	I0405 19:09:33.343882 139897224224768 make_examples_core.py:321] Task 52/64: Created 0 small model examples
	I0405 19:09:33.343912 139897224224768 make_examples_core.py:321] Task 52/64: Small Model called 0 candidates
	I0405 19:09:33.984947 140403951493120 make_examples_core.py:321] Task 59/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00059-of-00064.gz.example_info.json
	I0405 19:09:33.985076 140403951493120 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:33.985283 140403951493120 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905373.985805     586 make_examples_native.h:179] Received shard finished.
	I0405 19:09:33.985838 140403951493120 make_examples_core.py:321] Task 59/64: Found 10250 candidate variants
	I0405 19:09:33.985885 140403951493120 make_examples_core.py:321] Task 59/64: Created 11382 examples
	I0405 19:09:33.985918 140403951493120 make_examples_core.py:321] Task 59/64: Created 0 small model examples
	I0405 19:09:33.985948 140403951493120 make_examples_core.py:321] Task 59/64: Small Model called 0 candidates
	I0405 19:09:34.117876 139954167652352 make_examples_core.py:321] Task 28/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00028-of-00064.gz.example_info.json
	I0405 19:09:34.118002 139954167652352 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:34.118298 139954167652352 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905374.118767     547 make_examples_native.h:179] Received shard finished.
	I0405 19:09:34.118800 139954167652352 make_examples_core.py:321] Task 28/64: Found 10282 candidate variants
	I0405 19:09:34.118848 139954167652352 make_examples_core.py:321] Task 28/64: Created 11659 examples
	I0405 19:09:34.118881 139954167652352 make_examples_core.py:321] Task 28/64: Created 0 small model examples
	I0405 19:09:34.118912 139954167652352 make_examples_core.py:321] Task 28/64: Small Model called 0 candidates
	I0405 19:09:34.154543 140717129015296 make_examples_core.py:321] Task 32/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00032-of-00064.gz.example_info.json
	I0405 19:09:34.154669 140717129015296 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:34.154874 140717129015296 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905374.155323     551 make_examples_native.h:179] Received shard finished.
	I0405 19:09:34.155356 140717129015296 make_examples_core.py:321] Task 32/64: Found 10233 candidate variants
	I0405 19:09:34.155408 140717129015296 make_examples_core.py:321] Task 32/64: Created 11382 examples
	I0405 19:09:34.155440 140717129015296 make_examples_core.py:321] Task 32/64: Created 0 small model examples
	I0405 19:09:34.155468 140717129015296 make_examples_core.py:321] Task 32/64: Small Model called 0 candidates
	I0405 19:09:34.835494 140227901517824 make_examples_core.py:321] Task 40/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00040-of-00064.gz.example_info.json
	I0405 19:09:34.835617 140227901517824 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:34.835822 140227901517824 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905374.836275     561 make_examples_native.h:179] Received shard finished.
	I0405 19:09:34.836312 140227901517824 make_examples_core.py:321] Task 40/64: Found 10248 candidate variants
	I0405 19:09:34.836359 140227901517824 make_examples_core.py:321] Task 40/64: Created 11393 examples
	I0405 19:09:34.836391 140227901517824 make_examples_core.py:321] Task 40/64: Created 0 small model examples
	I0405 19:09:34.836421 140227901517824 make_examples_core.py:321] Task 40/64: Small Model called 0 candidates
	I0405 19:09:36.936706 140131123752960 make_examples_core.py:321] Task 23/64: Writing example info to /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00023-of-00064.gz.example_info.json
	I0405 19:09:36.936832 140131123752960 make_examples_core.py:3189] example_shape = [200, 221, 7]
	I0405 19:09:36.937035 140131123752960 make_examples_core.py:3190] example_channels = [1, 2, 3, 4, 5, 6, 19]
	WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
	I0000 00:00:1743905376.937550     556 make_examples_native.h:179] Received shard finished.
	I0405 19:09:36.937582 140131123752960 make_examples_core.py:321] Task 23/64: Found 10267 candidate variants
	I0405 19:09:36.937628 140131123752960 make_examples_core.py:321] Task 23/64: Created 11354 examples
	I0405 19:09:36.937661 140131123752960 make_examples_core.py:321] Task 23/64: Created 0 small model examples
	I0405 19:09:36.937690 140131123752960 make_examples_core.py:321] Task 23/64: Small Model called 0 candidates
	
	real	9m23.586s
	user	570m8.617s
	sys	14m35.154s
	
	***** Running the command:*****
	time /opt/deepvariant/bin/call_variants --outfile "/tmp/tmpjerb65j8/call_variants_output.tfrecord.gz" --examples "/tmp/tmpjerb65j8/make_examples_somatic.tfrecord@64.gz" --checkpoint "/opt/models/deepsomatic/wgs"
	
	2025-04-05 19:09:38.045036: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:09:38.777325: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:09:38.777389: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:09:38.777394: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	/usr/local/lib/python3.10/dist-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 
	
	TensorFlow Addons (TFA) has ended development and introduction of new features.
	TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
	Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 
	
	For more information see: https://github.com/tensorflow/addons/issues/2807 
	
	  warnings.warn(
	2025-04-05 19:09:40.605803: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:09:40.605834: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:09:40.605950 140645533655040 call_variants.py:920] call_variants: env = {'PYTHON_VERSION': '3.10', 'SINGULARITY_NAME': 'docker___google_deepsomatic_1.7.0.sif', 'TF_CPP_MIN_LOG_LEVEL': '1', 'DV_GPU_BUILD': '0', 'SINGULARITY_ENVIRONMENT': '/.singularity.d/env/91-environment.sh', 'PWD': '/mnt/miniwdl_task_container/work', 'VERSION_DEEPSOMATIC': '1.7.0', 'TF_ENABLE_ONEDNN_OPTS': '1', '_': '/usr/bin/python3', 'HOME': '/private/home/jpark621', 'LANG': 'C', 'SINGULARITY_CONTAINER': '/private/home/jpark621/.cache/miniwdl/docker___google_deepsomatic_1.7.0.sif', 'PROMPT_COMMAND': 'PS1="Singularity> "; unset PROMPT_COMMAND', 'CUDA_VISIBLE_DEVICES': '', 'TERM': 'screen.xterm-256color', 'TPU_ML_PLATFORM': 'Tensorflow', 'SHLVL': '4', 'SINGULARITY_BIND': '/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/stdout.txt:/mnt/miniwdl_task_container/stdout.txt,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/stderr.txt:/mnt/miniwdl_task_container/stderr.txt,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/work:/mnt/miniwdl_task_container/work,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/command:/mnt/miniwdl_task_container/command:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam.bai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Tumor.GRCh38.addreadgroupSM.sorted.bam.bai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/c634f4be-f4be-4a9b-b7a2-2a350fa426c8/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam:/mnt/miniwdl_task_container/work/_miniwdl_inputs/0/1395_Illumina_Normal.GRCh38.addreadgroupSM.sorted.bam:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/5ca0c716-1c30-400a-b63c-d088aa7f4c80/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai:/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/5ca0c716-1c30-400a-b63c-d088aa7f4c80/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna:/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna:ro,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/_singularity_tmpdir_rvs2892j/tmp:/tmp,/data/tmp/toilwf-9c2dba3841eb5986a9399ef775494f8e/b093/job/_singularity_tmpdir_rvs2892j/var_tmp:/var/tmp', 'LD_LIBRARY_PATH': '/.singularity.d/libs', 'LC_CTYPE': 'C.UTF-8', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/deepvariant/bin/deepsomatic:/opt/deepvariant/bin', 'TF2_BEHAVIOR': '1', 'SINGULARITY_COMMAND': 'exec', 'PYTHONPATH': '/tmp/Bazel.runfiles_8r6l7qv9/runfiles:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/com_google_protobuf/python:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/absl_py:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/bazel_tools:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/com_google_deepvariant:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/com_google_protobuf:/tmp/Bazel.runfiles_8r6l7qv9/runfiles/six_archive', 'RUNFILES_DIR': '/tmp/Bazel.runfiles_8r6l7qv9/runfiles'}
	I0405 19:09:40.627065 140645533655040 call_variants.py:787] Total 1 writing processes started.
	I0405 19:09:40.628241 140645533655040 call_variants.py:798] Use saved model: True
	I0405 19:09:40.628842 140645533655040 dv_utils.py:327] From /tmp/tmpjerb65j8/make_examples_somatic.tfrecord-00000-of-00064.gz.example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:09:47.476686 140645533655040 dv_utils.py:327] From /opt/models/deepsomatic/wgs/example_info.json: Shape of input examples: [200, 221, 7], Channels of input examples: [1, 2, 3, 4, 5, 6, 19].
	I0405 19:09:47.476852 140645533655040 call_variants.py:816] example_shape: [200, 221, 7]
	I0405 19:09:51.374461 140645533655040 call_variants.py:893] Predicted 1024 examples in 1 batches [0.361 sec per 100].
	I0405 19:11:39.641172 140645533655040 call_variants.py:893] Predicted 52224 examples in 51 batches [0.214 sec per 100].
	I0405 19:13:27.960844 140645533655040 call_variants.py:893] Predicted 103424 examples in 101 batches [0.213 sec per 100].
	I0405 19:15:16.594431 140645533655040 call_variants.py:893] Predicted 154624 examples in 151 batches [0.213 sec per 100].
	I0405 19:17:04.770724 140645533655040 call_variants.py:893] Predicted 205824 examples in 201 batches [0.212 sec per 100].
	I0405 19:18:53.142700 140645533655040 call_variants.py:893] Predicted 257024 examples in 251 batches [0.212 sec per 100].
	I0405 19:20:41.397107 140645533655040 call_variants.py:893] Predicted 308224 examples in 301 batches [0.212 sec per 100].
	I0405 19:22:29.727199 140645533655040 call_variants.py:893] Predicted 359424 examples in 351 batches [0.212 sec per 100].
	I0405 19:24:17.907385 140645533655040 call_variants.py:893] Predicted 410624 examples in 401 batches [0.212 sec per 100].
	I0405 19:26:06.321660 140645533655040 call_variants.py:893] Predicted 461824 examples in 451 batches [0.212 sec per 100].
	I0405 19:27:54.185532 140645533655040 call_variants.py:893] Predicted 513024 examples in 501 batches [0.212 sec per 100].
	I0405 19:29:42.567128 140645533655040 call_variants.py:893] Predicted 564224 examples in 551 batches [0.212 sec per 100].
	I0405 19:31:30.699902 140645533655040 call_variants.py:893] Predicted 615424 examples in 601 batches [0.212 sec per 100].
	I0405 19:33:19.172203 140645533655040 call_variants.py:893] Predicted 666624 examples in 651 batches [0.212 sec per 100].
	I0405 19:34:43.099569 140645533655040 call_variants.py:969] Complete: call_variants.
	
	real	25m7.573s
	user	2812m18.936s
	sys	7m50.077s
	
	***** Running the command:*****
	time /opt/deepvariant/bin/postprocess_variants --ref "/mnt/miniwdl_task_container/work/_miniwdl_inputs/1/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna" --infile "/tmp/tmpjerb65j8/call_variants_output.tfrecord.gz" --outfile "1395_Illumina_wdl_test.vcf.gz" --process_somatic=true
	
	2025-04-05 19:34:45.776290: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:34:46.509179: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:34:46.509246: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:34:46.509251: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:34:47.845488: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:34:47.845515: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:34:47.855831 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:55.597381 140683014930432 postprocess_variants.py:1208] Processing region chr4:169527008-chr4:181636080
	I0405 19:34:55.597954 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09112557967503866 minutes
	I0405 19:34:55.599167 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09114584922790528 minutes
	I0405 19:34:55.599350 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.599487 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpsjbo4os7.gz
	I0405 19:34:55.601570 140683014930432 genomics_writer.py:183] Writing /tmp/tmpsjbo4os7.gz with NativeVcfWriter
	I0405 19:34:55.616009 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00027831395467122394 minutes
	I0405 19:34:55.626403 140683014930432 postprocess_variants.py:1208] Processing region chr5:36327216-chr5:48436288
	I0405 19:34:55.626852 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09155120054880778 minutes
	I0405 19:34:55.627965 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.0915698250134786 minutes
	I0405 19:34:55.628125 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.628247 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgy23oy8g.gz
	I0405 19:34:55.629994 140683014930432 postprocess_variants.py:1208] Processing region chr5:169527008-chr5:181538259
	I0405 19:34:55.630365 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgy23oy8g.gz with NativeVcfWriter
	I0405 19:34:55.630444 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09156550963719685 minutes
	I0405 19:34:55.631512 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09158333539962768 minutes
	I0405 19:34:55.631686 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.631723 140683014930432 postprocess_variants.py:1432] VCF creation took 6.0280164082845054e-05 minutes
	I0405 19:34:55.631811 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmprgd_9dj9.gz
	I0405 19:34:55.633909 140683014930432 genomics_writer.py:183] Writing /tmp/tmprgd_9dj9.gz with NativeVcfWriter
	I0405 19:34:55.634982 140683014930432 postprocess_variants.py:1432] VCF creation took 5.533297856648763e-05 minutes
	I0405 19:34:55.810353 140683014930432 postprocess_variants.py:1208] Processing region chr6:133199792-chr6:145308864
	I0405 19:34:55.810353 140683014930432 postprocess_variants.py:1208] Processing region chr6:121090720-chr6:133199792
	I0405 19:34:55.810879 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09448962608973185 minutes
	I0405 19:34:55.810781 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09449282884597779 minutes
	I0405 19:34:55.811963 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09451261361440023 minutes
	I0405 19:34:55.812017 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09450861612955729 minutes
	I0405 19:34:55.812136 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.812180 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.812278 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpm5dqu8p7.gz
	I0405 19:34:55.812313 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmphmpwgkxv.gz
	I0405 19:34:55.814659 140683014930432 genomics_writer.py:183] Writing /tmp/tmpm5dqu8p7.gz with NativeVcfWriter
	I0405 19:34:55.814659 140683014930432 genomics_writer.py:183] Writing /tmp/tmphmpwgkxv.gz with NativeVcfWriter
	I0405 19:34:55.816358 140683014930432 postprocess_variants.py:1432] VCF creation took 6.983280181884765e-05 minutes
	I0405 19:34:55.824382 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00020435651143391927 minutes
	I0405 19:34:55.881313 140683014930432 postprocess_variants.py:1208] Processing region chr1:157417936-chr1:169527008
	I0405 19:34:55.881955 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09692747990290324 minutes
	I0405 19:34:55.883140 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:34:55.883282 140683014930432 postprocess_variants.py:1226] Processed 27144 variants.
	I0405 19:34:55.883751 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09695765177408854 minutes
	I0405 19:34:55.883907 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.884035 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpu1b5almw.gz
	I0405 19:34:55.886373 140683014930432 genomics_writer.py:183] Writing /tmp/tmpu1b5almw.gz with NativeVcfWriter
	I0405 19:34:55.899946 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:55.903010 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:34:55.959708 140683014930432 postprocess_variants.py:1208] Processing region chr9:24218144-chr9:36327216
	I0405 19:34:55.960290 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.09612242778142294 minutes
	I0405 19:34:55.961509 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.09614274899164836 minutes
	I0405 19:34:55.961661 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:55.961786 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpl8rtthpn.gz
	I0405 19:34:55.963980 140683014930432 genomics_writer.py:183] Writing /tmp/tmpl8rtthpn.gz with NativeVcfWriter
	I0405 19:34:55.979711 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003007213274637858 minutes
	I0405 19:34:56.192091 140683014930432 postprocess_variants.py:1208] Processing region chr1:217963296-chr1:230072368
	I0405 19:34:56.192608 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.10209372838338217 minutes
	I0405 19:34:56.193716 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:34:56.193810 140683014930432 postprocess_variants.py:1226] Processed 33176 variants.
	I0405 19:34:56.194196 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1021203358968099 minutes
	I0405 19:34:56.194307 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.194387 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp80dnrw04.gz
	I0405 19:34:56.204680 140683014930432 genomics_writer.py:183] Writing /tmp/tmp80dnrw04.gz with NativeVcfWriter
	I0405 19:34:56.210997 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:56.230488 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:34:56.313690 140683014930432 postprocess_variants.py:1208] Processing region chr2:36327216-chr2:48436288
	I0405 19:34:56.314252 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.10408440430959066 minutes
	I0405 19:34:56.315430 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.10410412947336832 minutes
	I0405 19:34:56.315583 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.315698 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpvn5saemq.gz
	I0405 19:34:56.317794 140683014930432 genomics_writer.py:183] Writing /tmp/tmpvn5saemq.gz with NativeVcfWriter
	I0405 19:34:56.332070 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00027503172556559243 minutes
	I0405 19:34:56.415545 140683014930432 postprocess_variants.py:1208] Processing region chr6:0-chr6:12109072
	I0405 19:34:56.416084 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.10464762449264527 minutes
	I0405 19:34:56.417160 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.10466565688451131 minutes
	I0405 19:34:56.417296 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.417412 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmptbjb402s.gz
	I0405 19:34:56.419599 140683014930432 genomics_writer.py:183] Writing /tmp/tmptbjb402s.gz with NativeVcfWriter
	I0405 19:34:56.424005 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00011204878489176432 minutes
	I0405 19:34:56.492272 140683014930432 postprocess_variants.py:1208] Processing region chr2:48436288-chr2:60545360
	I0405 19:34:56.492861 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.10704330603281657 minutes
	I0405 19:34:56.494056 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.10706338485081991 minutes
	I0405 19:34:56.494214 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.494335 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpnvyr7uzq.gz
	I0405 19:34:56.496554 140683014930432 genomics_writer.py:183] Writing /tmp/tmpnvyr7uzq.gz with NativeVcfWriter
	I0405 19:34:56.519865 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0004273533821105957 minutes
	I0405 19:34:56.666528 140683014930432 postprocess_variants.py:1208] Processing region chr6:96872576-chr6:108981648
	I0405 19:34:56.667004 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.10877036650975545 minutes
	I0405 19:34:56.668219 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.10879073937733968 minutes
	I0405 19:34:56.668332 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.668414 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp79xx87zq.gz
	I0405 19:34:56.670455 140683014930432 genomics_writer.py:183] Writing /tmp/tmp79xx87zq.gz with NativeVcfWriter
	I0405 19:34:56.681810 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002247929573059082 minutes
	I0405 19:34:56.725467 140683014930432 postprocess_variants.py:1208] Processing region chr4:72654432-chr4:84763504
	I0405 19:34:56.739393 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.11047069231669109 minutes
	I0405 19:34:56.740583 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.11049095789591472 minutes
	I0405 19:34:56.740740 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.740866 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpim0cgogn.gz
	I0405 19:34:56.743057 140683014930432 genomics_writer.py:183] Writing /tmp/tmpim0cgogn.gz with NativeVcfWriter
	I0405 19:34:56.758371 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002940972646077474 minutes
	I0405 19:34:56.928661 140683014930432 postprocess_variants.py:1208] Processing region chr3:36327216-chr3:48436288
	I0405 19:34:56.929234 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.11406544446945191 minutes
	I0405 19:34:56.930392 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.11408483187357585 minutes
	I0405 19:34:56.930554 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:56.930684 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpett44l_u.gz
	I0405 19:34:56.932908 140683014930432 genomics_writer.py:183] Writing /tmp/tmpett44l_u.gz with NativeVcfWriter
	I0405 19:34:56.944391 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002309401830037435 minutes
	I0405 19:34:57.156691 140683014930432 postprocess_variants.py:1208] Processing region chr3:181636080-chr3:193745152
	I0405 19:34:57.157273 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.11752231915791829 minutes
	I0405 19:34:57.158439 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1175419012705485 minutes
	I0405 19:34:57.158596 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.158718 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpos2an27e.gz
	I0405 19:34:57.160918 140683014930432 genomics_writer.py:183] Writing /tmp/tmpos2an27e.gz with NativeVcfWriter
	I0405 19:34:57.178487 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00033184687296549477 minutes
	I0405 19:34:57.249631 140683014930432 postprocess_variants.py:1208] Processing region chr6:84763504-chr6:96872576
	I0405 19:34:57.250217 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1185210625330607 minutes
	I0405 19:34:57.251435 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.11854143937428792 minutes
	I0405 19:34:57.251585 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.251705 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqck2n1a5.gz
	I0405 19:34:57.253911 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqck2n1a5.gz with NativeVcfWriter
	I0405 19:34:57.267561 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002665241559346517 minutes
	I0405 19:34:57.633183 140683014930432 postprocess_variants.py:1208] Processing region chr4:48436288-chr4:60545360
	I0405 19:34:57.633670 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.12541397015253702 minutes
	I0405 19:34:57.634814 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.12543320655822754 minutes
	I0405 19:34:57.634925 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.635005 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpjj_en6w3.gz
	I0405 19:34:57.657373 140683014930432 genomics_writer.py:183] Writing /tmp/tmpjj_en6w3.gz with NativeVcfWriter
	I0405 19:34:57.668255 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0005556941032409668 minutes
	I0405 19:34:57.731142 140683014930432 postprocess_variants.py:1208] Processing region chr7:96872576-chr7:108981648
	I0405 19:34:57.731680 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.12630496819814047 minutes
	I0405 19:34:57.732817 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.12632393836975098 minutes
	I0405 19:34:57.732927 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.732997 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmph4ded4zm.gz
	I0405 19:34:57.735031 140683014930432 genomics_writer.py:183] Writing /tmp/tmph4ded4zm.gz with NativeVcfWriter
	I0405 19:34:57.752685 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00032871166865030925 minutes
	I0405 19:34:57.957125 140683014930432 postprocess_variants.py:1208] Processing region chr6:169527008-chr7:12109072
	I0405 19:34:57.957314 140683014930432 postprocess_variants.py:1208] Processing region chr4:121090720-chr4:133199792
	I0405 19:34:57.957694 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13018415768941244 minutes
	I0405 19:34:57.957897 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13068684736887615 minutes
	I0405 19:34:57.958922 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1302048126856486 minutes
	I0405 19:34:57.959039 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.959129 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13070741494496663 minutes
	I0405 19:34:57.959176 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp2i_cqmg9.gz
	I0405 19:34:57.959348 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:57.959486 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmphe8ltqwb.gz
	I0405 19:34:57.961390 140683014930432 genomics_writer.py:183] Writing /tmp/tmp2i_cqmg9.gz with NativeVcfWriter
	I0405 19:34:57.961711 140683014930432 genomics_writer.py:183] Writing /tmp/tmphe8ltqwb.gz with NativeVcfWriter
	I0405 19:34:57.976047 140683014930432 postprocess_variants.py:1432] VCF creation took 0.000278929869333903 minutes
	I0405 19:34:57.976044 140683014930432 postprocess_variants.py:1432] VCF creation took 0.000283658504486084 minutes
	I0405 19:34:58.016088 140683014930432 postprocess_variants.py:1208] Processing region chr7:12109072-chr7:24218144
	I0405 19:34:58.016681 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13116192420323688 minutes
	I0405 19:34:58.017907 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13118255933125814 minutes
	I0405 19:34:58.018060 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.018176 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp_0nnl72f.gz
	I0405 19:34:58.020226 140683014930432 genomics_writer.py:183] Writing /tmp/tmp_0nnl72f.gz with NativeVcfWriter
	I0405 19:34:58.021925 140683014930432 postprocess_variants.py:1432] VCF creation took 6.401538848876953e-05 minutes
	I0405 19:34:58.062646 140683014930432 postprocess_variants.py:1208] Processing region chr2:181636080-chr2:193745152
	I0405 19:34:58.063215 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13306882381439208 minutes
	I0405 19:34:58.064428 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1330890655517578 minutes
	I0405 19:34:58.064613 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.064736 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpot8t_ox7.gz
	I0405 19:34:58.066974 140683014930432 genomics_writer.py:183] Writing /tmp/tmpot8t_ox7.gz with NativeVcfWriter
	I0405 19:34:58.080175 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00025910536448160807 minutes
	I0405 19:34:58.131707 140683014930432 postprocess_variants.py:1208] Processing region chr2:60545360-chr2:72654432
	I0405 19:34:58.132309 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13437719742457072 minutes
	I0405 19:34:58.133547 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13439788420995077 minutes
	I0405 19:34:58.133722 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.133862 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmplygv_i8j.gz
	I0405 19:34:58.136078 140683014930432 genomics_writer.py:183] Writing /tmp/tmplygv_i8j.gz with NativeVcfWriter
	I0405 19:34:58.137677 140683014930432 postprocess_variants.py:1432] VCF creation took 6.547371546427409e-05 minutes
	I0405 19:34:58.151782 140683014930432 postprocess_variants.py:1208] Processing region chr1:96872576-chr1:108981648
	I0405 19:34:58.167399 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1350516200065613 minutes
	I0405 19:34:58.168586 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:34:58.168705 140683014930432 postprocess_variants.py:1226] Processed 20671 variants.
	I0405 19:34:58.169076 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13507979710896809 minutes
	I0405 19:34:58.169203 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.169306 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpd7rm7_0a.gz
	I0405 19:34:58.171562 140683014930432 genomics_writer.py:183] Writing /tmp/tmpd7rm7_0a.gz with NativeVcfWriter
	I0405 19:34:58.177567 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:58.180224 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:34:58.319488 140683014930432 postprocess_variants.py:1208] Processing region chr4:181636080-chr4:190214555
	I0405 19:34:58.319952 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13647754589716593 minutes
	I0405 19:34:58.335426 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13673557043075563 minutes
	I0405 19:34:58.335592 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.335702 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmplvyowl24.gz
	I0405 19:34:58.337880 140683014930432 genomics_writer.py:183] Writing /tmp/tmplvyowl24.gz with NativeVcfWriter
	I0405 19:34:58.339054 140683014930432 postprocess_variants.py:1432] VCF creation took 5.793968836466472e-05 minutes
	I0405 19:34:58.411847 140683014930432 postprocess_variants.py:1208] Processing region chr8:24218144-chr8:36327216
	I0405 19:34:58.412386 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1375170111656189 minutes
	I0405 19:34:58.413522 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13753603299458822 minutes
	I0405 19:34:58.413683 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.413806 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp4vl1xbqh.gz
	I0405 19:34:58.416003 140683014930432 genomics_writer.py:183] Writing /tmp/tmp4vl1xbqh.gz with NativeVcfWriter
	I0405 19:34:58.437813 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00040245850880940754 minutes
	I0405 19:34:58.491998 140683014930432 postprocess_variants.py:1208] Processing region chr7:72654432-chr7:84763504
	I0405 19:34:58.492565 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13900688886642457 minutes
	I0405 19:34:58.493734 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13902644316355386 minutes
	I0405 19:34:58.493947 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.494076 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmprkumx9ve.gz
	I0405 19:34:58.496354 140683014930432 genomics_writer.py:183] Writing /tmp/tmprkumx9ve.gz with NativeVcfWriter
	I0405 19:34:58.518724 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0004133025805155436 minutes
	I0405 19:34:58.648350 140683014930432 postprocess_variants.py:1208] Processing region chr9:72654432-chr9:84763504
	I0405 19:34:58.648939 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14066465298334757 minutes
	I0405 19:34:58.650176 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1406853437423706 minutes
	I0405 19:34:58.650321 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.650444 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp23wdjj4i.gz
	I0405 19:34:58.652657 140683014930432 genomics_writer.py:183] Writing /tmp/tmp23wdjj4i.gz with NativeVcfWriter
	I0405 19:34:58.655171 140683014930432 postprocess_variants.py:1432] VCF creation took 8.105436960856119e-05 minutes
	I0405 19:34:58.673152 140683014930432 postprocess_variants.py:1208] Processing region chr13:72654432-chr13:84763504
	I0405 19:34:58.673695 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.13880037069320678 minutes
	I0405 19:34:58.674911 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.13882070779800415 minutes
	I0405 19:34:58.675070 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.675189 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpth583u6n.gz
	I0405 19:34:58.677422 140683014930432 genomics_writer.py:183] Writing /tmp/tmpth583u6n.gz with NativeVcfWriter
	I0405 19:34:58.681207 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00010212262471516927 minutes
	I0405 19:34:58.698241 140683014930432 postprocess_variants.py:1208] Processing region chr8:84763504-chr8:96872576
	I0405 19:34:58.698611 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1420299013455709 minutes
	I0405 19:34:58.699611 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14204660256703694 minutes
	I0405 19:34:58.699704 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.699763 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpq9ts9kss.gz
	I0405 19:34:58.701313 140683014930432 genomics_writer.py:183] Writing /tmp/tmpq9ts9kss.gz with NativeVcfWriter
	I0405 19:34:58.704365 140683014930432 postprocess_variants.py:1432] VCF creation took 7.797876993815104e-05 minutes
	I0405 19:34:58.719008 140683014930432 postprocess_variants.py:1208] Processing region chr11:133199792-chr12:12109072
	I0405 19:34:58.719627 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14034156799316405 minutes
	I0405 19:34:58.720830 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14036182562510172 minutes
	I0405 19:34:58.720958 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.721056 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpkuf4wk09.gz
	I0405 19:34:58.723147 140683014930432 genomics_writer.py:183] Writing /tmp/tmpkuf4wk09.gz with NativeVcfWriter
	I0405 19:34:58.724979 140683014930432 postprocess_variants.py:1432] VCF creation took 6.67254130045573e-05 minutes
	I0405 19:34:58.734561 140683014930432 postprocess_variants.py:1208] Processing region chr13:12109072-chr13:24218144
	I0405 19:34:58.735139 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1400323271751404 minutes
	I0405 19:34:58.736424 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1400538166364034 minutes
	I0405 19:34:58.736572 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.736687 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpz_w1alby.gz
	I0405 19:34:58.738820 140683014930432 genomics_writer.py:183] Writing /tmp/tmpz_w1alby.gz with NativeVcfWriter
	I0405 19:34:58.740275 140683014930432 postprocess_variants.py:1432] VCF creation took 6.203651428222656e-05 minutes
	I0405 19:34:58.795735 140683014930432 postprocess_variants.py:1208] Processing region chr4:24218144-chr4:36327216
	I0405 19:34:58.796222 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14480023384094237 minutes
	I0405 19:34:58.797358 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14481945832570395 minutes
	I0405 19:34:58.797499 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.797612 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpbwehsv4n.gz
	I0405 19:34:58.799764 140683014930432 genomics_writer.py:183] Writing /tmp/tmpbwehsv4n.gz with NativeVcfWriter
	I0405 19:34:58.806831 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00015578269958496093 minutes
	I0405 19:34:58.828008 140683014930432 postprocess_variants.py:1208] Processing region chr9:48436288-chr9:60545360
	I0405 19:34:58.828588 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1439165234565735 minutes
	I0405 19:34:58.829801 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14393681685129803 minutes
	I0405 19:34:58.829956 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.830081 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp14zn9b92.gz
	I0405 19:34:58.832164 140683014930432 genomics_writer.py:183] Writing /tmp/tmp14zn9b92.gz with NativeVcfWriter
	I0405 19:34:58.842816 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00021462043126424152 minutes
	I0405 19:34:58.868858 140683014930432 postprocess_variants.py:1208] Processing region chr11:84763504-chr11:96872576
	I0405 19:34:58.869427 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14351650873819988 minutes
	I0405 19:34:58.870621 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14353659947713215 minutes
	I0405 19:34:58.870782 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.870905 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpo6aa6p_y.gz
	I0405 19:34:58.873090 140683014930432 genomics_writer.py:183] Writing /tmp/tmpo6aa6p_y.gz with NativeVcfWriter
	I0405 19:34:58.879735 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00014966328938802084 minutes
	I0405 19:34:58.908105 140683014930432 postprocess_variants.py:1208] Processing region chr5:0-chr5:12109072
	I0405 19:34:58.908667 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14627581040064494 minutes
	I0405 19:34:58.909842 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14629570245742798 minutes
	I0405 19:34:58.909999 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.910119 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpw75kwot8.gz
	I0405 19:34:58.912270 140683014930432 genomics_writer.py:183] Writing /tmp/tmpw75kwot8.gz with NativeVcfWriter
	I0405 19:34:58.918334 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0001392364501953125 minutes
	I0405 19:34:58.939076 140683014930432 postprocess_variants.py:1208] Processing region chr2:72654432-chr2:84763504
	I0405 19:34:58.939650 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1478009859720866 minutes
	I0405 19:34:58.940885 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1478217045466105 minutes
	I0405 19:34:58.941036 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.941157 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpjjww41to.gz
	I0405 19:34:58.943174 140683014930432 genomics_writer.py:183] Writing /tmp/tmpjjww41to.gz with NativeVcfWriter
	I0405 19:34:58.960167 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00031851927439371746 minutes
	I0405 19:34:58.970687 140683014930432 postprocess_variants.py:1208] Processing region chr3:193745152-chr4:12109072
	I0405 19:34:58.971216 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14773889382680258 minutes
	I0405 19:34:58.972421 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14775928656260173 minutes
	I0405 19:34:58.972578 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:58.972700 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwaesjlun.gz
	I0405 19:34:58.974711 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwaesjlun.gz with NativeVcfWriter
	I0405 19:34:58.975926 140683014930432 postprocess_variants.py:1432] VCF creation took 5.6127707163492836e-05 minutes
	I0405 19:34:58.998285 140683014930432 postprocess_variants.py:1208] Processing region chr9:60545360-chr9:72654432
	I0405 19:34:58.998856 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1467499812444051 minutes
	I0405 19:34:59.000065 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14677023887634277 minutes
	I0405 19:34:59.000215 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.000338 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp_fc1_2ty.gz
	I0405 19:34:59.002527 140683014930432 genomics_writer.py:183] Writing /tmp/tmp_fc1_2ty.gz with NativeVcfWriter
	I0405 19:34:59.003948 140683014930432 postprocess_variants.py:1432] VCF creation took 6.252527236938477e-05 minutes
	I0405 19:34:59.038649 140683014930432 postprocess_variants.py:1208] Processing region chr15:84763504-chr15:96872576
	I0405 19:34:59.039197 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14353628953297934 minutes
	I0405 19:34:59.040416 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14355671803156536 minutes
	I0405 19:34:59.040570 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.040694 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpy7ov6iop.gz
	I0405 19:34:59.042886 140683014930432 genomics_writer.py:183] Writing /tmp/tmpy7ov6iop.gz with NativeVcfWriter
	I0405 19:34:59.044280 140683014930432 postprocess_variants.py:1432] VCF creation took 6.156762440999349e-05 minutes
	I0405 19:34:59.081074 140683014930432 postprocess_variants.py:1208] Processing region chr13:60545360-chr13:72654432
	I0405 19:34:59.081657 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1455032229423523 minutes
	I0405 19:34:59.082926 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14552457729975382 minutes
	I0405 19:34:59.083106 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.083248 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmppsx3ajzx.gz
	I0405 19:34:59.085506 140683014930432 genomics_writer.py:183] Writing /tmp/tmppsx3ajzx.gz with NativeVcfWriter
	I0405 19:34:59.085960 140683014930432 postprocess_variants.py:1208] Processing region chr2:12109072-chr2:24218144
	I0405 19:34:59.086129 140683014930432 postprocess_variants.py:1208] Processing region chr10:72654432-chr10:84763504
	I0405 19:34:59.086665 140683014930432 postprocess_variants.py:1432] VCF creation took 5.979140599568685e-05 minutes
	I0405 19:34:59.086507 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1502956748008728 minutes
	I0405 19:34:59.087725 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15031613111495973 minutes
	I0405 19:34:59.086712 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1476157347361247 minutes
	I0405 19:34:59.087870 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14763516585032146 minutes
	I0405 19:34:59.087896 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.087978 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpazy6a_az.gz
	I0405 19:34:59.088057 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.088194 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpz_ies1qq.gz
	I0405 19:34:59.090189 140683014930432 genomics_writer.py:183] Writing /tmp/tmpazy6a_az.gz with NativeVcfWriter
	I0405 19:34:59.090425 140683014930432 genomics_writer.py:183] Writing /tmp/tmpz_ies1qq.gz with NativeVcfWriter
	I0405 19:34:59.096339 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0001384139060974121 minutes
	I0405 19:34:59.096538 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00014393726984659831 minutes
	I0405 19:34:59.099588 140683014930432 postprocess_variants.py:1208] Processing region chr10:24218144-chr10:36327216
	I0405 19:34:59.100077 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14811292092005413 minutes
	I0405 19:34:59.101259 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14813270966211955 minutes
	I0405 19:34:59.101372 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.101451 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpozcfvklw.gz
	I0405 19:34:59.103654 140683014930432 genomics_writer.py:183] Writing /tmp/tmpozcfvklw.gz with NativeVcfWriter
	I0405 19:34:59.109500 140683014930432 postprocess_variants.py:1208] Processing region chr3:96872576-chr3:108981648
	I0405 19:34:59.109985 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15023639996846516 minutes
	I0405 19:34:59.111144 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15025583505630494 minutes
	I0405 19:34:59.119917 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003094037373860677 minutes
	I0405 19:34:59.111258 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.127383 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3neymcoe.gz
	I0405 19:34:59.128735 140683014930432 postprocess_variants.py:1208] Processing region chr16:48436288-chr16:60545360
	I0405 19:34:59.129528 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3neymcoe.gz with NativeVcfWriter
	I0405 19:34:59.129275 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.14482999245325726 minutes
	I0405 19:34:59.130500 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1448505163192749 minutes
	I0405 19:34:59.130648 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.130773 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp4wbcbs80.gz
	I0405 19:34:59.131021 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00032912492752075196 minutes
	I0405 19:34:59.132884 140683014930432 genomics_writer.py:183] Writing /tmp/tmp4wbcbs80.gz with NativeVcfWriter
	I0405 19:34:59.148063 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002899924914042155 minutes
	I0405 19:34:59.178880 140683014930432 postprocess_variants.py:1208] Processing region chr3:169527008-chr3:181636080
	I0405 19:34:59.179415 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15122333367665608 minutes
	I0405 19:34:59.180601 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1512433608373006 minutes
	I0405 19:34:59.180759 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.180885 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpn4uyeexg.gz
	I0405 19:34:59.182993 140683014930432 genomics_writer.py:183] Writing /tmp/tmpn4uyeexg.gz with NativeVcfWriter
	I0405 19:34:59.184042 140683014930432 postprocess_variants.py:1432] VCF creation took 5.511045455932617e-05 minutes
	I0405 19:34:59.204948 140683014930432 postprocess_variants.py:1208] Processing region chr5:12109072-chr5:24218144
	I0405 19:34:59.205561 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15121454397837322 minutes
	I0405 19:34:59.206807 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15123538176218668 minutes
	I0405 19:34:59.206965 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.207090 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp249nn224.gz
	I0405 19:34:59.209387 140683014930432 genomics_writer.py:183] Writing /tmp/tmp249nn224.gz with NativeVcfWriter
	I0405 19:34:59.211933 140683014930432 postprocess_variants.py:1432] VCF creation took 8.314053217569986e-05 minutes
	I0405 19:34:59.212132 140683014930432 postprocess_variants.py:1208] Processing region chr2:0-chr2:12109072
	I0405 19:34:59.212650 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15240358114242553 minutes
	I0405 19:34:59.213796 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.152422825495402 minutes
	I0405 19:34:59.213948 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.214068 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp_6ghcm05.gz
	I0405 19:34:59.216141 140683014930432 genomics_writer.py:183] Writing /tmp/tmp_6ghcm05.gz with NativeVcfWriter
	I0405 19:34:59.217449 140683014930432 postprocess_variants.py:1432] VCF creation took 5.867481231689453e-05 minutes
	I0405 19:34:59.282982 140683014930432 postprocess_variants.py:1208] Processing region chr9:133199792-chr10:12109072
	I0405 19:34:59.283639 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15119285980860392 minutes
	I0405 19:34:59.284958 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15121489763259888 minutes
	I0405 19:34:59.285120 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.285247 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpd13dup9q.gz
	I0405 19:34:59.287515 140683014930432 genomics_writer.py:183] Writing /tmp/tmpd13dup9q.gz with NativeVcfWriter
	I0405 19:34:59.296265 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00018535455067952473 minutes
	I0405 19:34:59.299823 140683014930432 postprocess_variants.py:1208] Processing region chr5:84763504-chr5:96872576
	I0405 19:34:59.300299 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15277374188105267 minutes
	I0405 19:34:59.301491 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15279364585876465 minutes
	I0405 19:34:59.301602 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.301682 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpk3eqz59c.gz
	I0405 19:34:59.303885 140683014930432 genomics_writer.py:183] Writing /tmp/tmpk3eqz59c.gz with NativeVcfWriter
	I0405 19:34:59.325358 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00039538542429606117 minutes
	I0405 19:34:59.404073 140683014930432 postprocess_variants.py:1208] Processing region chr4:36327216-chr4:48436288
	I0405 19:34:59.404629 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15491884152094523 minutes
	I0405 19:34:59.405764 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15493791898091633 minutes
	I0405 19:34:59.405896 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.406001 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpfzx2mjty.gz
	I0405 19:34:59.408213 140683014930432 genomics_writer.py:183] Writing /tmp/tmpfzx2mjty.gz with NativeVcfWriter
	I0405 19:34:59.415744 140683014930432 postprocess_variants.py:1208] Processing region chr17:12109072-chr17:24218144
	I0405 19:34:59.416365 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1494152784347534 minutes
	I0405 19:34:59.417571 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.14943549235661824 minutes
	I0405 19:34:59.417681 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.417759 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpy5m4rl36.gz
	I0405 19:34:59.418222 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002055962880452474 minutes
	I0405 19:34:59.420025 140683014930432 genomics_writer.py:183] Writing /tmp/tmpy5m4rl36.gz with NativeVcfWriter
	I0405 19:34:59.425969 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00013835827509562176 minutes
	I0405 19:34:59.428634 140683014930432 postprocess_variants.py:1208] Processing region chr12:24218144-chr12:36327216
	I0405 19:34:59.429424 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15215404828389487 minutes
	I0405 19:34:59.430596 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15217679341634113 minutes
	I0405 19:34:59.430740 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.430849 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmperbwl6y3.gz
	I0405 19:34:59.433024 140683014930432 genomics_writer.py:183] Writing /tmp/tmperbwl6y3.gz with NativeVcfWriter
	I0405 19:34:59.434286 140683014930432 postprocess_variants.py:1432] VCF creation took 5.9374173482259114e-05 minutes
	I0405 19:34:59.456787 140683014930432 postprocess_variants.py:1208] Processing region chr4:12109072-chr4:24218144
	I0405 19:34:59.457303 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15584394931793213 minutes
	I0405 19:34:59.458509 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15586422284444174 minutes
	I0405 19:34:59.458625 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.458702 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp6va949dy.gz
	I0405 19:34:59.477121 140683014930432 genomics_writer.py:183] Writing /tmp/tmp6va949dy.gz with NativeVcfWriter
	I0405 19:34:59.480077 140683014930432 postprocess_variants.py:1208] Processing region chr12:133199792-chr13:12109072
	I0405 19:34:59.480655 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15257487694422403 minutes
	I0405 19:34:59.481881 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15259531339009602 minutes
	I0405 19:34:59.482038 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.482163 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqwvyjyy3.gz
	I0405 19:34:59.484403 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqwvyjyy3.gz with NativeVcfWriter
	I0405 19:34:59.485826 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0004532734553019206 minutes
	I0405 19:34:59.486850 140683014930432 postprocess_variants.py:1432] VCF creation took 8.057753245035807e-05 minutes
	I0405 19:34:59.520864 140683014930432 postprocess_variants.py:1208] Processing region chr1:108981648-chr1:121090720
	I0405 19:34:59.521396 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1576019247372945 minutes
	I0405 19:34:59.522595 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:34:59.522731 140683014930432 postprocess_variants.py:1226] Processed 26693 variants.
	I0405 19:34:59.523133 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15763107140858967 minutes
	I0405 19:34:59.523284 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.523431 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9zn1cq0o.gz
	I0405 19:34:59.525728 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9zn1cq0o.gz with NativeVcfWriter
	I0405 19:34:59.532189 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:59.535259 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:34:59.550965 140683014930432 postprocess_variants.py:1208] Processing region chr15:36327216-chr15:48436288
	I0405 19:34:59.551506 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1522385040918986 minutes
	I0405 19:34:59.553642 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.152274223168691 minutes
	I0405 19:34:59.553745 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.553827 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp8sjkfc62.gz
	I0405 19:34:59.555395 140683014930432 genomics_writer.py:183] Writing /tmp/tmp8sjkfc62.gz with NativeVcfWriter
	I0405 19:34:59.556963 140683014930432 postprocess_variants.py:1432] VCF creation took 5.3819020589192705e-05 minutes
	I0405 19:34:59.590491 140683014930432 postprocess_variants.py:1208] Processing region chr3:145308864-chr3:157417936
	I0405 19:34:59.591057 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15821098089218139 minutes
	I0405 19:34:59.592273 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15823148488998412 minutes
	I0405 19:34:59.592429 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.592553 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpmvy34wpi.gz
	I0405 19:34:59.594732 140683014930432 genomics_writer.py:183] Writing /tmp/tmpmvy34wpi.gz with NativeVcfWriter
	I0405 19:34:59.599946 140683014930432 postprocess_variants.py:1208] Processing region chr1:145308864-chr1:157417936
	I0405 19:34:59.600570 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15891148249308268 minutes
	I0405 19:34:59.601714 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:34:59.601852 140683014930432 postprocess_variants.py:1226] Processed 40130 variants.
	I0405 19:34:59.602274 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15894010066986083 minutes
	I0405 19:34:59.602425 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.602547 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp_r74jjv2.gz
	I0405 19:34:59.604854 140683014930432 genomics_writer.py:183] Writing /tmp/tmp_r74jjv2.gz with NativeVcfWriter
	I0405 19:34:59.607087 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00024454196294148764 minutes
	I0405 19:34:59.611200 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:34:59.614555 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:34:59.626663 140683014930432 postprocess_variants.py:1208] Processing region chr11:48436288-chr11:60545360
	I0405 19:34:59.627252 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15617324908574423 minutes
	I0405 19:34:59.628501 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1561941703160604 minutes
	I0405 19:34:59.628661 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.628789 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpnb8i4tqt.gz
	I0405 19:34:59.631027 140683014930432 genomics_writer.py:183] Writing /tmp/tmpnb8i4tqt.gz with NativeVcfWriter
	I0405 19:34:59.648886 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003373901049296061 minutes
	I0405 19:34:59.673171 140683014930432 postprocess_variants.py:1208] Processing region chr3:60545360-chr3:72654432
	I0405 19:34:59.673767 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.159714412689209 minutes
	I0405 19:34:59.674959 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15973437229792278 minutes
	I0405 19:34:59.675122 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.675244 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpo6ggzjd1.gz
	I0405 19:34:59.677345 140683014930432 genomics_writer.py:183] Writing /tmp/tmpo6ggzjd1.gz with NativeVcfWriter
	I0405 19:34:59.686007 140683014930432 postprocess_variants.py:1208] Processing region chr8:133199792-chr8:145138636
	I0405 19:34:59.686578 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15844744841257732 minutes
	I0405 19:34:59.687740 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15846693118413288 minutes
	I0405 19:34:59.687897 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.688018 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpb3h8rzuj.gz
	I0405 19:34:59.690402 140683014930432 genomics_writer.py:183] Writing /tmp/tmpb3h8rzuj.gz with NativeVcfWriter
	I0405 19:34:59.692844 140683014930432 postprocess_variants.py:1432] VCF creation took 0.000295714537302653 minutes
	I0405 19:34:59.703635 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002623319625854492 minutes
	I0405 19:34:59.749296 140683014930432 postprocess_variants.py:1208] Processing region chr19:36327216-chr19:48436288
	I0405 19:34:59.749868 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1539719502131144 minutes
	I0405 19:34:59.751081 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15399226347605388 minutes
	I0405 19:34:59.751234 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.751379 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpthh05u7k.gz
	I0405 19:34:59.752186 140683014930432 postprocess_variants.py:1208] Processing region chr9:0-chr9:12109072
	I0405 19:34:59.753559 140683014930432 genomics_writer.py:183] Writing /tmp/tmpthh05u7k.gz with NativeVcfWriter
	I0405 19:34:59.752734 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15921494166056316 minutes
	I0405 19:34:59.753934 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15923497676849366 minutes
	I0405 19:34:59.754093 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.754217 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9kt3cr2e.gz
	I0405 19:34:59.756499 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9kt3cr2e.gz with NativeVcfWriter
	I0405 19:34:59.764775 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00022595723470052084 minutes
	I0405 19:34:59.774595 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00034154653549194335 minutes
	I0405 19:34:59.774381 140683014930432 postprocess_variants.py:1208] Processing region chr10:36327216-chr10:48436288
	I0405 19:34:59.774843 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15935080846150715 minutes
	I0405 19:34:59.776153 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15937271515528362 minutes
	I0405 19:34:59.776307 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.776431 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmparfptx83.gz
	I0405 19:34:59.778614 140683014930432 genomics_writer.py:183] Writing /tmp/tmparfptx83.gz with NativeVcfWriter
	I0405 19:34:59.782102 140683014930432 postprocess_variants.py:1432] VCF creation took 9.690523147583008e-05 minutes
	I0405 19:34:59.790495 140683014930432 postprocess_variants.py:1208] Processing region chr11:36327216-chr11:48436288
	I0405 19:34:59.791040 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15891172885894775 minutes
	I0405 19:34:59.792231 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15893162886301676 minutes
	I0405 19:34:59.792380 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.792499 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3ojn46fc.gz
	I0405 19:34:59.794673 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3ojn46fc.gz with NativeVcfWriter
	I0405 19:34:59.795928 140683014930432 postprocess_variants.py:1432] VCF creation took 5.945761998494466e-05 minutes
	I0405 19:34:59.841404 140683014930432 postprocess_variants.py:1208] Processing region chr6:157417936-chr6:169527008
	I0405 19:34:59.841894 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1616224964459737 minutes
	I0405 19:34:59.843123 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1616430362065633 minutes
	I0405 19:34:59.843237 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.843332 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpc795_ep4.gz
	I0405 19:34:59.845572 140683014930432 genomics_writer.py:183] Writing /tmp/tmpc795_ep4.gz with NativeVcfWriter
	I0405 19:34:59.856061 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002140363057454427 minutes
	I0405 19:34:59.857457 140683014930432 postprocess_variants.py:1208] Processing region chr8:121090720-chr8:133199792
	I0405 19:34:59.858039 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1613252560297648 minutes
	I0405 19:34:59.859266 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16134578386942547 minutes
	I0405 19:34:59.859445 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.859567 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpq6n1z7xm.gz
	I0405 19:34:59.859926 140683014930432 postprocess_variants.py:1208] Processing region chr2:96872576-chr2:108981648
	I0405 19:34:59.860484 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16313610871632894 minutes
	I0405 19:34:59.861685 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16315620342890422 minutes
	I0405 19:34:59.861771 140683014930432 genomics_writer.py:183] Writing /tmp/tmpq6n1z7xm.gz with NativeVcfWriter
	I0405 19:34:59.861838 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.861970 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmplqg5aw33.gz
	I0405 19:34:59.863105 140683014930432 postprocess_variants.py:1432] VCF creation took 6.138086318969726e-05 minutes
	I0405 19:34:59.867966 140683014930432 genomics_writer.py:183] Writing /tmp/tmplqg5aw33.gz with NativeVcfWriter
	I0405 19:34:59.872121 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00017163753509521484 minutes
	I0405 19:34:59.874009 140683014930432 postprocess_variants.py:1208] Processing region chr5:157417936-chr5:169527008
	I0405 19:34:59.874446 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1623112122217814 minutes
	I0405 19:34:59.875608 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16233066320419312 minutes
	I0405 19:34:59.875725 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.875803 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpcmk7h6bg.gz
	I0405 19:34:59.877914 140683014930432 genomics_writer.py:183] Writing /tmp/tmpcmk7h6bg.gz with NativeVcfWriter
	I0405 19:34:59.884281 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0001429160435994466 minutes
	I0405 19:34:59.884567 140683014930432 postprocess_variants.py:1208] Processing region chr6:108981648-chr6:121090720
	I0405 19:34:59.885693 140683014930432 postprocess_variants.py:1208] Processing region chr15:24218144-chr15:36327216
	I0405 19:34:59.885118 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1623849868774414 minutes
	I0405 19:34:59.886328 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16240529616673788 minutes
	I0405 19:34:59.886470 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.886580 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqyw9nyti.gz
	I0405 19:34:59.886045 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15800655285517376 minutes
	I0405 19:34:59.888127 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15804142157236736 minutes
	I0405 19:34:59.888220 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.888291 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpg6b6hc6y.gz
	I0405 19:34:59.888600 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqyw9nyti.gz with NativeVcfWriter
	I0405 19:34:59.889777 140683014930432 genomics_writer.py:183] Writing /tmp/tmpg6b6hc6y.gz with NativeVcfWriter
	I0405 19:34:59.892550 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00010155042012532552 minutes
	I0405 19:34:59.909094 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003480672836303711 minutes
	I0405 19:34:59.970163 140683014930432 postprocess_variants.py:1208] Processing region chr14:96872576-chr14:107043718
	I0405 19:34:59.970618 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15957228740056356 minutes
	I0405 19:34:59.971681 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15959016879399618 minutes
	I0405 19:34:59.971829 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.971951 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp1msvqa60.gz
	I0405 19:34:59.974123 140683014930432 genomics_writer.py:183] Writing /tmp/tmp1msvqa60.gz with NativeVcfWriter
	I0405 19:34:59.978897 140683014930432 postprocess_variants.py:1208] Processing region chr3:48436288-chr3:60545360
	I0405 19:34:59.979515 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1648828665415446 minutes
	I0405 19:34:59.980746 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16490355332692463 minutes
	I0405 19:34:59.980911 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.981040 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpyq0wx9on.gz
	I0405 19:34:59.981072 140683014930432 postprocess_variants.py:1208] Processing region chr11:24218144-chr11:36327216
	I0405 19:34:59.981559 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1620952566464742 minutes
	I0405 19:34:59.982578 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00017940998077392578 minutes
	I0405 19:34:59.982715 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16211461623509724 minutes
	I0405 19:34:59.982877 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.983000 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpycnj3ohw.gz
	I0405 19:34:59.983350 140683014930432 genomics_writer.py:183] Writing /tmp/tmpyq0wx9on.gz with NativeVcfWriter
	I0405 19:34:59.983385 140683014930432 postprocess_variants.py:1208] Processing region chr18:12109072-chr18:24218144
	I0405 19:34:59.983965 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.15841008027394612 minutes
	I0405 19:34:59.985194 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.15843063592910767 minutes
	I0405 19:34:59.985191 140683014930432 genomics_writer.py:183] Writing /tmp/tmpycnj3ohw.gz with NativeVcfWriter
	I0405 19:34:59.985351 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:34:59.985471 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpdfvc7jeq.gz
	I0405 19:34:59.987537 140683014930432 genomics_writer.py:183] Writing /tmp/tmpdfvc7jeq.gz with NativeVcfWriter
	I0405 19:34:59.996862 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002662301063537598 minutes
	I0405 19:35:00.003414 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003426472345987956 minutes
	I0405 19:35:00.003636 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003031253814697266 minutes
	I0405 19:35:00.010270 140683014930432 postprocess_variants.py:1208] Processing region chr13:84763504-chr13:96872576
	I0405 19:35:00.010841 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1608932654062907 minutes
	I0405 19:35:00.011994 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16091259320576987 minutes
	I0405 19:35:00.012131 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.012252 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqgr3uqaa.gz
	I0405 19:35:00.014458 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqgr3uqaa.gz with NativeVcfWriter
	I0405 19:35:00.028409 140683014930432 postprocess_variants.py:1208] Processing region chr15:60545360-chr15:72654432
	I0405 19:35:00.028779 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002776463826497396 minutes
	I0405 19:35:00.029014 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1601634740829468 minutes
	I0405 19:35:00.030253 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16018426815668743 minutes
	I0405 19:35:00.030407 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.030538 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpiudy9uxm.gz
	I0405 19:35:00.032747 140683014930432 genomics_writer.py:183] Writing /tmp/tmpiudy9uxm.gz with NativeVcfWriter
	I0405 19:35:00.033947 140683014930432 postprocess_variants.py:1432] VCF creation took 5.934635798136393e-05 minutes
	I0405 19:35:00.039103 140683014930432 postprocess_variants.py:1208] Processing region chr12:12109072-chr12:24218144
	I0405 19:35:00.039719 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16233694553375244 minutes
	I0405 19:35:00.040961 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16235775152842205 minutes
	I0405 19:35:00.041128 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.041266 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpq9sgik60.gz
	I0405 19:35:00.043492 140683014930432 genomics_writer.py:183] Writing /tmp/tmpq9sgik60.gz with NativeVcfWriter
	I0405 19:35:00.044678 140683014930432 postprocess_variants.py:1432] VCF creation took 5.952119827270508e-05 minutes
	I0405 19:35:00.048302 140683014930432 postprocess_variants.py:1208] Processing region chr3:121090720-chr3:133199792
	I0405 19:35:00.048796 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16584861675898235 minutes
	I0405 19:35:00.049956 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16586806774139404 minutes
	I0405 19:35:00.050179 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.050309 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp2hu3c8y8.gz
	I0405 19:35:00.052566 140683014930432 genomics_writer.py:183] Writing /tmp/tmp2hu3c8y8.gz with NativeVcfWriter
	I0405 19:35:00.068423 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00030441681543986 minutes
	I0405 19:35:00.069688 140683014930432 postprocess_variants.py:1208] Processing region chr5:121090720-chr5:133199792
	I0405 19:35:00.083425 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16581055720647175 minutes
	I0405 19:35:00.084875 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1658349633216858 minutes
	I0405 19:35:00.085040 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.085162 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwgnaonzx.gz
	I0405 19:35:00.087430 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwgnaonzx.gz with NativeVcfWriter
	I0405 19:35:00.088747 140683014930432 postprocess_variants.py:1432] VCF creation took 6.206432978312174e-05 minutes
	I0405 19:35:00.103398 140683014930432 postprocess_variants.py:1208] Processing region chr12:60545360-chr12:72654432
	I0405 19:35:00.103883 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16337203582127888 minutes
	I0405 19:35:00.105044 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16339145501454672 minutes
	I0405 19:35:00.105197 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.105320 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpd80s6mnm.gz
	I0405 19:35:00.107530 140683014930432 genomics_writer.py:183] Writing /tmp/tmpd80s6mnm.gz with NativeVcfWriter
	I0405 19:35:00.108879 140683014930432 postprocess_variants.py:1432] VCF creation took 6.17225964864095e-05 minutes
	I0405 19:35:00.108911 140683014930432 postprocess_variants.py:1208] Processing region chr7:36327216-chr7:48436288
	I0405 19:35:00.109493 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16605008840560914 minutes
	I0405 19:35:00.110712 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1660704771677653 minutes
	I0405 19:35:00.110875 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.110997 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgp_qyz3b.gz
	I0405 19:35:00.113211 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgp_qyz3b.gz with NativeVcfWriter
	I0405 19:35:00.115368 140683014930432 postprocess_variants.py:1208] Processing region chr8:108981648-chr8:121090720
	I0405 19:35:00.115481 140683014930432 postprocess_variants.py:1208] Processing region chr1:230072368-chr1:242181440
	I0405 19:35:00.115933 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1656254529953003 minutes
	I0405 19:35:00.115890 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1674619476000468 minutes
	I0405 19:35:00.116967 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:00.116906 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00010040998458862304 minutes
	I0405 19:35:00.117051 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16564420064290364 minutes
	I0405 19:35:00.117150 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.117270 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgcumm4w8.gz
	I0405 19:35:00.117117 140683014930432 postprocess_variants.py:1226] Processed 34848 variants.
	I0405 19:35:00.117539 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16748963197072347 minutes
	I0405 19:35:00.117690 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.117810 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp8xagbguh.gz
	I0405 19:35:00.118242 140683014930432 postprocess_variants.py:1208] Processing region chr9:12109072-chr9:24218144
	I0405 19:35:00.119291 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgcumm4w8.gz with NativeVcfWriter
	I0405 19:35:00.118695 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16562772989273072 minutes
	I0405 19:35:00.119703 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16564462184906006 minutes
	I0405 19:35:00.119837 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.119899 140683014930432 genomics_writer.py:183] Writing /tmp/tmp8xagbguh.gz with NativeVcfWriter
	I0405 19:35:00.119940 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9oecy2ew.gz
	I0405 19:35:00.121950 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9oecy2ew.gz with NativeVcfWriter
	I0405 19:35:00.126125 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:00.127045 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00012010733286539713 minutes
	I0405 19:35:00.130503 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:00.131633 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00024121999740600586 minutes
	I0405 19:35:00.168314 140683014930432 postprocess_variants.py:1208] Processing region chr3:133199792-chr3:145308864
	I0405 19:35:00.168986 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1678616245587667 minutes
	I0405 19:35:00.170288 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1678833802541097 minutes
	I0405 19:35:00.170482 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.170626 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpa4s_nzoo.gz
	I0405 19:35:00.172990 140683014930432 genomics_writer.py:183] Writing /tmp/tmpa4s_nzoo.gz with NativeVcfWriter
	I0405 19:35:00.174645 140683014930432 postprocess_variants.py:1432] VCF creation took 7.00076421101888e-05 minutes
	I0405 19:35:00.200614 140683014930432 postprocess_variants.py:1208] Processing region chr5:96872576-chr5:108981648
	I0405 19:35:00.201178 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16778434912363688 minutes
	I0405 19:35:00.202375 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16780434052149454 minutes
	I0405 19:35:00.202522 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.202642 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp0k6pw5e0.gz
	I0405 19:35:00.205009 140683014930432 genomics_writer.py:183] Writing /tmp/tmp0k6pw5e0.gz with NativeVcfWriter
	I0405 19:35:00.216483 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00023293892542521158 minutes
	I0405 19:35:00.219932 140683014930432 postprocess_variants.py:1208] Processing region chr12:121090720-chr12:133199792
	I0405 19:35:00.220389 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16490834951400757 minutes
	I0405 19:35:00.221517 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1649272322654724 minutes
	I0405 19:35:00.221275 140683014930432 postprocess_variants.py:1208] Processing region chr1:169527008-chr1:181636080
	I0405 19:35:00.221671 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.221756 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpnd10jldu.gz
	I0405 19:35:00.221913 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16927088101704915 minutes
	I0405 19:35:00.223074 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:00.223209 140683014930432 postprocess_variants.py:1226] Processed 26866 variants.
	I0405 19:35:00.223650 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16929999589920045 minutes
	I0405 19:35:00.223799 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.223843 140683014930432 genomics_writer.py:183] Writing /tmp/tmpnd10jldu.gz with NativeVcfWriter
	I0405 19:35:00.223920 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpcfcr3uzw.gz
	I0405 19:35:00.226171 140683014930432 genomics_writer.py:183] Writing /tmp/tmpcfcr3uzw.gz with NativeVcfWriter
	I0405 19:35:00.230546 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00014818906784057616 minutes
	I0405 19:35:00.232585 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:00.232953 140683014930432 postprocess_variants.py:1208] Processing region chr6:24218144-chr6:36327216
	I0405 19:35:00.233446 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16826499700546266 minutes
	I0405 19:35:00.234528 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1682831009229024 minutes
	I0405 19:35:00.234639 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.234717 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpnh_46su_.gz
	I0405 19:35:00.235688 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:00.236899 140683014930432 genomics_writer.py:183] Writing /tmp/tmpnh_46su_.gz with NativeVcfWriter
	I0405 19:35:00.248858 140683014930432 postprocess_variants.py:1208] Processing region chr7:145308864-chr7:157417936
	I0405 19:35:00.249445 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16818310022354127 minutes
	I0405 19:35:00.250651 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16820334990819294 minutes
	I0405 19:35:00.250815 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.250946 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp92s_4rh0.gz
	I0405 19:35:00.253813 140683014930432 postprocess_variants.py:1208] Processing region chr11:96872576-chr11:108981648
	I0405 19:35:00.254385 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16621088584264118 minutes
	I0405 19:35:00.255625 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16623175541559856 minutes
	I0405 19:35:00.255787 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.255911 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp7_9qdupu.gz
	I0405 19:35:00.256637 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003669420878092448 minutes
	I0405 19:35:00.258038 140683014930432 genomics_writer.py:183] Writing /tmp/tmp7_9qdupu.gz with NativeVcfWriter
	I0405 19:35:00.269785 140683014930432 genomics_writer.py:183] Writing /tmp/tmp92s_4rh0.gz with NativeVcfWriter
	I0405 19:35:00.270469 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00024511019388834634 minutes
	I0405 19:35:00.271065 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00033785502115885415 minutes
	I0405 19:35:00.272697 140683014930432 postprocess_variants.py:1208] Processing region chr7:24218144-chr7:36327216
	I0405 19:35:00.273181 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16876916488011678 minutes
	I0405 19:35:00.274385 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1687893271446228 minutes
	I0405 19:35:00.274498 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.274579 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp6g9t53o_.gz
	I0405 19:35:00.276768 140683014930432 genomics_writer.py:183] Writing /tmp/tmp6g9t53o_.gz with NativeVcfWriter
	I0405 19:35:00.291928 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00029073158899943036 minutes
	I0405 19:35:00.293469 140683014930432 postprocess_variants.py:1208] Processing region chr2:24218144-chr2:36327216
	I0405 19:35:00.293937 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1704229195912679 minutes
	I0405 19:35:00.295079 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17044196526209512 minutes
	I0405 19:35:00.295241 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.295392 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpaafeopic.gz
	I0405 19:35:00.297741 140683014930432 genomics_writer.py:183] Writing /tmp/tmpaafeopic.gz with NativeVcfWriter
	I0405 19:35:00.311591 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002727349599202474 minutes
	I0405 19:35:00.312501 140683014930432 postprocess_variants.py:1208] Processing region chr10:133199792-chr11:12109072
	I0405 19:35:00.313061 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16763792435328165 minutes
	I0405 19:35:00.314272 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16765822172164918 minutes
	I0405 19:35:00.314419 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.314538 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpn8pn7kqj.gz
	I0405 19:35:00.314404 140683014930432 postprocess_variants.py:1208] Processing region chr5:108981648-chr5:121090720
	I0405 19:35:00.314898 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16966957251230877 minutes
	I0405 19:35:00.316295 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16969290971755982 minutes
	I0405 19:35:00.316450 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.316571 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmplulif_j5.gz
	I0405 19:35:00.316687 140683014930432 genomics_writer.py:183] Writing /tmp/tmpn8pn7kqj.gz with NativeVcfWriter
	I0405 19:35:00.318294 140683014930432 postprocess_variants.py:1432] VCF creation took 6.496508916219076e-05 minutes
	I0405 19:35:00.318672 140683014930432 genomics_writer.py:183] Writing /tmp/tmplulif_j5.gz with NativeVcfWriter
	I0405 19:35:00.319477 140683014930432 postprocess_variants.py:1208] Processing region chr11:12109072-chr11:24218144
	I0405 19:35:00.320045 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16774468421936034 minutes
	I0405 19:35:00.321256 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1677649736404419 minutes
	I0405 19:35:00.321007 140683014930432 postprocess_variants.py:1208] Processing region chr6:36327216-chr6:48436288
	I0405 19:35:00.321406 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.321484 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpbwgzg19h.gz
	I0405 19:35:00.322117 140683014930432 postprocess_variants.py:1208] Processing region chr2:84763504-chr2:96872576
	I0405 19:35:00.321553 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.169724702835083 minutes
	I0405 19:35:00.322826 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16974602142969766 minutes
	I0405 19:35:00.322980 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.323095 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmptsegj1_7.gz
	I0405 19:35:00.323472 140683014930432 genomics_writer.py:183] Writing /tmp/tmpbwgzg19h.gz with NativeVcfWriter
	I0405 19:35:00.322709 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17083436250686646 minutes
	I0405 19:35:00.323977 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1708556572596232 minutes
	I0405 19:35:00.324126 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.324240 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp38ebv4_n.gz
	I0405 19:35:00.325219 140683014930432 genomics_writer.py:183] Writing /tmp/tmptsegj1_7.gz with NativeVcfWriter
	I0405 19:35:00.326351 140683014930432 genomics_writer.py:183] Writing /tmp/tmp38ebv4_n.gz with NativeVcfWriter
	I0405 19:35:00.327532 140683014930432 postprocess_variants.py:1432] VCF creation took 7.619460423787434e-05 minutes
	I0405 19:35:00.327588 140683014930432 postprocess_variants.py:1432] VCF creation took 5.795160929361979e-05 minutes
	I0405 19:35:00.331480 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00025080045064290366 minutes
	I0405 19:35:00.339154 140683014930432 postprocess_variants.py:1208] Processing region chr2:169527008-chr2:181636080
	I0405 19:35:00.339544 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0003026326497395833 minutes
	I0405 19:35:00.339771 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17102187871932983 minutes
	I0405 19:35:00.341057 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17104337215423585 minutes
	I0405 19:35:00.341234 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.341363 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpygedz54m.gz
	I0405 19:35:00.343524 140683014930432 genomics_writer.py:183] Writing /tmp/tmpygedz54m.gz with NativeVcfWriter
	I0405 19:35:00.345154 140683014930432 postprocess_variants.py:1432] VCF creation took 6.577173868815104e-05 minutes
	I0405 19:35:00.351363 140683014930432 postprocess_variants.py:1208] Processing region chr3:24218144-chr3:36327216
	I0405 19:35:00.351880 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17112414042154947 minutes
	I0405 19:35:00.353029 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17114338874816895 minutes
	I0405 19:35:00.352702 140683014930432 postprocess_variants.py:1208] Processing region chr2:193745152-chr2:205854224
	I0405 19:35:00.353163 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.353230 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpx3b9ddpc.gz
	I0405 19:35:00.353298 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17120711803436278 minutes
	I0405 19:35:00.354511 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1712274432182312 minutes
	I0405 19:35:00.354655 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.354757 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpd7l0tbgs.gz
	I0405 19:35:00.355329 140683014930432 genomics_writer.py:183] Writing /tmp/tmpx3b9ddpc.gz with NativeVcfWriter
	I0405 19:35:00.356172 140683014930432 postprocess_variants.py:1208] Processing region chr8:72654432-chr8:84763504
	I0405 19:35:00.356727 140683014930432 genomics_writer.py:183] Writing /tmp/tmpd7l0tbgs.gz with NativeVcfWriter
	I0405 19:35:00.357515 140683014930432 postprocess_variants.py:1432] VCF creation took 7.283290227254232e-05 minutes
	I0405 19:35:00.356829 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16987916231155395 minutes
	I0405 19:35:00.358001 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16989884773890176 minutes
	I0405 19:35:00.358148 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.358261 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqkgzrra9.gz
	I0405 19:35:00.360332 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqkgzrra9.gz with NativeVcfWriter
	I0405 19:35:00.362244 140683014930432 postprocess_variants.py:1432] VCF creation took 6.857713063557943e-05 minutes
	I0405 19:35:00.367557 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002153317133585612 minutes
	I0405 19:35:00.373243 140683014930432 postprocess_variants.py:1208] Processing region chr7:133199792-chr7:145308864
	I0405 19:35:00.373756 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17026960055033366 minutes
	I0405 19:35:00.374920 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17028907537460328 minutes
	I0405 19:35:00.375075 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.375192 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp5ecv_bnb.gz
	I0405 19:35:00.377288 140683014930432 genomics_writer.py:183] Writing /tmp/tmp5ecv_bnb.gz with NativeVcfWriter
	I0405 19:35:00.380061 140683014930432 postprocess_variants.py:1432] VCF creation took 8.343060811360677e-05 minutes
	I0405 19:35:00.416538 140683014930432 postprocess_variants.py:1208] Processing region chr4:157417936-chr4:169527008
	I0405 19:35:00.416988 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17144166231155394 minutes
	I0405 19:35:00.418267 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17146300474802653 minutes
	I0405 19:35:00.418423 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.418539 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpe2ujlc8q.gz
	I0405 19:35:00.420719 140683014930432 genomics_writer.py:183] Writing /tmp/tmpe2ujlc8q.gz with NativeVcfWriter
	I0405 19:35:00.430090 140683014930432 postprocess_variants.py:1208] Processing region chr8:60545360-chr8:72654432
	I0405 19:35:00.430589 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1711284359296163 minutes
	I0405 19:35:00.431847 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17114946842193604 minutes
	I0405 19:35:00.431969 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00022610823313395182 minutes
	I0405 19:35:00.432008 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.432158 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpuf_h2r9k.gz
	I0405 19:35:00.432318 140683014930432 postprocess_variants.py:1208] Processing region chr11:72654432-chr11:84763504
	I0405 19:35:00.432835 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16958245833714802 minutes
	I0405 19:35:00.434030 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16960247357686362 minutes
	I0405 19:35:00.434186 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.434264 140683014930432 genomics_writer.py:183] Writing /tmp/tmpuf_h2r9k.gz with NativeVcfWriter
	I0405 19:35:00.434304 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp6yhvj_97.gz
	I0405 19:35:00.435670 140683014930432 postprocess_variants.py:1432] VCF creation took 6.078481674194336e-05 minutes
	I0405 19:35:00.436380 140683014930432 genomics_writer.py:183] Writing /tmp/tmp6yhvj_97.gz with NativeVcfWriter
	I0405 19:35:00.437738 140683014930432 postprocess_variants.py:1432] VCF creation took 5.962053934733073e-05 minutes
	I0405 19:35:00.448995 140683014930432 postprocess_variants.py:1208] Processing region chr6:12109072-chr6:24218144
	I0405 19:35:00.449572 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17187291383743286 minutes
	I0405 19:35:00.450796 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17189338604609172 minutes
	I0405 19:35:00.450947 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.451065 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpjgtdsw50.gz
	I0405 19:35:00.453200 140683014930432 genomics_writer.py:183] Writing /tmp/tmpjgtdsw50.gz with NativeVcfWriter
	I0405 19:35:00.454316 140683014930432 postprocess_variants.py:1432] VCF creation took 5.644162495930989e-05 minutes
	I0405 19:35:00.461048 140683014930432 postprocess_variants.py:1208] Processing region chr11:60545360-chr11:72654432
	I0405 19:35:00.461473 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17006502946217855 minutes
	I0405 19:35:00.462577 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.170083487033844 minutes
	I0405 19:35:00.462685 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.462760 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3q1wo49f.gz
	I0405 19:35:00.464904 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3q1wo49f.gz with NativeVcfWriter
	I0405 19:35:00.466206 140683014930432 postprocess_variants.py:1432] VCF creation took 5.8988730112711586e-05 minutes
	I0405 19:35:00.500593 140683014930432 postprocess_variants.py:1208] Processing region chr9:96872576-chr9:108981648
	I0405 19:35:00.501074 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17150917847951253 minutes
	I0405 19:35:00.502226 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17152847448984782 minutes
	I0405 19:35:00.502377 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.502499 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmplzpk_3bf.gz
	I0405 19:35:00.504818 140683014930432 genomics_writer.py:183] Writing /tmp/tmplzpk_3bf.gz with NativeVcfWriter
	I0405 19:35:00.506172 140683014930432 postprocess_variants.py:1432] VCF creation took 6.357034047444661e-05 minutes
	I0405 19:35:00.507560 140683014930432 postprocess_variants.py:1208] Processing region chr8:12109072-chr8:24218144
	I0405 19:35:00.508058 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17249252398808798 minutes
	I0405 19:35:00.509203 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17251169284184772 minutes
	I0405 19:35:00.509367 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.509497 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpj8u0xasg.gz
	I0405 19:35:00.511633 140683014930432 genomics_writer.py:183] Writing /tmp/tmpj8u0xasg.gz with NativeVcfWriter
	I0405 19:35:00.515001 140683014930432 postprocess_variants.py:1432] VCF creation took 9.429057439168295e-05 minutes
	I0405 19:35:00.521322 140683014930432 postprocess_variants.py:1208] Processing region chr3:108981648-chr3:121090720
	I0405 19:35:00.522390 140683014930432 postprocess_variants.py:1208] Processing region chr17:72654432-chr17:83257441
	I0405 19:35:00.521881 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1737498680750529 minutes
	I0405 19:35:00.523054 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1737695376078288 minutes
	I0405 19:35:00.523195 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.523340 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp_tksiv62.gz
	I0405 19:35:00.522939 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1674083391825358 minutes
	I0405 19:35:00.524224 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1674298365910848 minutes
	I0405 19:35:00.524377 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.524499 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp143aouby.gz
	I0405 19:35:00.524911 140683014930432 postprocess_variants.py:1208] Processing region chr6:48436288-chr6:60545360
	I0405 19:35:00.525543 140683014930432 genomics_writer.py:183] Writing /tmp/tmp_tksiv62.gz with NativeVcfWriter
	I0405 19:35:00.525407 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1731204390525818 minutes
	I0405 19:35:00.526684 140683014930432 genomics_writer.py:183] Writing /tmp/tmp143aouby.gz with NativeVcfWriter
	I0405 19:35:00.526696 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17314198811848958 minutes
	I0405 19:35:00.526815 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.526895 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpzav1sxpq.gz
	I0405 19:35:00.527933 140683014930432 postprocess_variants.py:1432] VCF creation took 5.956490834554037e-05 minutes
	I0405 19:35:00.528196 140683014930432 postprocess_variants.py:1208] Processing region chr12:48436288-chr12:60545360
	I0405 19:35:00.528677 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17046183745066326 minutes
	I0405 19:35:00.529796 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1704805572827657 minutes
	I0405 19:35:00.529953 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.530075 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpyi36r_9k.gz
	I0405 19:35:00.532043 140683014930432 genomics_writer.py:183] Writing /tmp/tmpyi36r_9k.gz with NativeVcfWriter
	I0405 19:35:00.535943 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00010025501251220703 minutes
	I0405 19:35:00.537010 140683014930432 genomics_writer.py:183] Writing /tmp/tmpzav1sxpq.gz with NativeVcfWriter
	I0405 19:35:00.539555 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00027290582656860354 minutes
	I0405 19:35:00.547996 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00035326480865478517 minutes
	I0405 19:35:00.547744 140683014930432 postprocess_variants.py:1208] Processing region chr15:12109072-chr15:24218144
	I0405 19:35:00.548220 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1690476338068644 minutes
	I0405 19:35:00.550812 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16909088691075644 minutes
	I0405 19:35:00.550930 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.551010 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpp_jol2fb.gz
	I0405 19:35:00.553054 140683014930432 genomics_writer.py:183] Writing /tmp/tmpp_jol2fb.gz with NativeVcfWriter
	I0405 19:35:00.554066 140683014930432 postprocess_variants.py:1432] VCF creation took 5.2642822265625e-05 minutes
	I0405 19:35:00.556706 140683014930432 postprocess_variants.py:1208] Processing region chr2:217963296-chr2:230072368
	I0405 19:35:00.557124 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17459065516789754 minutes
	I0405 19:35:00.558202 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17460867563883464 minutes
	I0405 19:35:00.558314 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.558387 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp298dvw4q.gz
	I0405 19:35:00.559935 140683014930432 genomics_writer.py:183] Writing /tmp/tmp298dvw4q.gz with NativeVcfWriter
	I0405 19:35:00.561056 140683014930432 postprocess_variants.py:1432] VCF creation took 4.612604777018229e-05 minutes
	I0405 19:35:00.580697 140683014930432 postprocess_variants.py:1208] Processing region chrX:145308864-chrX:156040895
	I0405 19:35:00.581255 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1636650800704956 minutes
	I0405 19:35:00.582468 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16368544499079388 minutes
	I0405 19:35:00.582595 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.582695 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp7knk22f3.gz
	I0405 19:35:00.584689 140683014930432 genomics_writer.py:183] Writing /tmp/tmp7knk22f3.gz with NativeVcfWriter
	I0405 19:35:00.585714 140683014930432 postprocess_variants.py:1432] VCF creation took 5.2245457967122394e-05 minutes
	I0405 19:35:00.590875 140683014930432 postprocess_variants.py:1208] Processing region chr8:96872576-chr8:108981648
	I0405 19:35:00.591450 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1735626737276713 minutes
	I0405 19:35:00.592694 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17358347574869792 minutes
	I0405 19:35:00.592846 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.592966 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwpb0ycg7.gz
	I0405 19:35:00.595216 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwpb0ycg7.gz with NativeVcfWriter
	I0405 19:35:00.596109 140683014930432 postprocess_variants.py:1208] Processing region chr7:108981648-chr7:121090720
	I0405 19:35:00.596604 140683014930432 postprocess_variants.py:1432] VCF creation took 6.307363510131836e-05 minutes
	I0405 19:35:00.596688 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17398680051167806 minutes
	I0405 19:35:00.598044 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17400949001312255 minutes
	I0405 19:35:00.598199 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.598316 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwg9nzvpz.gz
	I0405 19:35:00.599225 140683014930432 postprocess_variants.py:1208] Processing region chr14:12109072-chr14:24218144
	I0405 19:35:00.600342 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwg9nzvpz.gz with NativeVcfWriter
	I0405 19:35:00.600322 140683014930432 postprocess_variants.py:1208] Processing region chr2:133199792-chr2:145308864
	I0405 19:35:00.599803 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1706981102625529 minutes
	I0405 19:35:00.600959 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17071759700775146 minutes
	I0405 19:35:00.601147 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.601269 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpj4u0x3zq.gz
	I0405 19:35:00.601352 140683014930432 postprocess_variants.py:1432] VCF creation took 5.290508270263672e-05 minutes
	I0405 19:35:00.601419 140683014930432 postprocess_variants.py:1208] Processing region chr7:121090720-chr7:133199792
	I0405 19:35:00.600853 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17539776961008707 minutes
	I0405 19:35:00.602143 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17541945377985638 minutes
	I0405 19:35:00.602348 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.602472 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmppgzp1aaa.gz
	I0405 19:35:00.601994 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17406734625498455 minutes
	I0405 19:35:00.603180 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1740871787071228 minutes
	I0405 19:35:00.603361 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.603488 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp832boahz.gz
	I0405 19:35:00.603490 140683014930432 genomics_writer.py:183] Writing /tmp/tmpj4u0x3zq.gz with NativeVcfWriter
	I0405 19:35:00.604567 140683014930432 genomics_writer.py:183] Writing /tmp/tmppgzp1aaa.gz with NativeVcfWriter
	I0405 19:35:00.616040 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002485354741414388 minutes
	I0405 19:35:00.616506 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00023630857467651367 minutes
	I0405 19:35:00.617006 140683014930432 genomics_writer.py:183] Writing /tmp/tmp832boahz.gz with NativeVcfWriter
	I0405 19:35:00.618515 140683014930432 postprocess_variants.py:1432] VCF creation took 0.000253291924794515 minutes
	I0405 19:35:00.641369 140683014930432 postprocess_variants.py:1208] Processing region chr18:48436288-chr18:60545360
	I0405 19:35:00.641877 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.16904606421788534 minutes
	I0405 19:35:00.643060 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1690658966700236 minutes
	I0405 19:35:00.643161 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.643229 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpzf6l50yj.gz
	I0405 19:35:00.645398 140683014930432 genomics_writer.py:183] Writing /tmp/tmpzf6l50yj.gz with NativeVcfWriter
	I0405 19:35:00.660039 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0002815524737040202 minutes
	I0405 19:35:00.661332 140683014930432 postprocess_variants.py:1208] Processing region chr3:0-chr3:12109072
	I0405 19:35:00.661911 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17630386749903362 minutes
	I0405 19:35:00.663125 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17632423639297484 minutes
	I0405 19:35:00.663280 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.663424 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpxn1eh1sx.gz
	I0405 19:35:00.665643 140683014930432 genomics_writer.py:183] Writing /tmp/tmpxn1eh1sx.gz with NativeVcfWriter
	I0405 19:35:00.668465 140683014930432 postprocess_variants.py:1432] VCF creation took 8.674860000610352e-05 minutes
	I0405 19:35:00.677050 140683014930432 postprocess_variants.py:1208] Processing region chr10:84763504-chr10:96872576
	I0405 19:35:00.677620 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.174125341574351 minutes
	I0405 19:35:00.678767 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17414457003275555 minutes
	I0405 19:35:00.678925 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.679048 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpq4ymefb2.gz
	I0405 19:35:00.681284 140683014930432 genomics_writer.py:183] Writing /tmp/tmpq4ymefb2.gz with NativeVcfWriter
	I0405 19:35:00.682529 140683014930432 postprocess_variants.py:1432] VCF creation took 6.0447057088216145e-05 minutes
	I0405 19:35:00.684841 140683014930432 postprocess_variants.py:1208] Processing region chr5:48436288-chr5:60545360
	I0405 19:35:00.685428 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17587129275004068 minutes
	I0405 19:35:00.686632 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1758914073308309 minutes
	I0405 19:35:00.686796 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.686942 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9yvaijgl.gz
	I0405 19:35:00.688495 140683014930432 postprocess_variants.py:1208] Processing region chr19:12109072-chr19:24218144
	I0405 19:35:00.689161 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9yvaijgl.gz with NativeVcfWriter
	I0405 19:35:00.688869 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.169631560643514 minutes
	I0405 19:35:00.689720 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.16964582602183023 minutes
	I0405 19:35:00.689810 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.689882 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpln0cg7pr.gz
	I0405 19:35:00.690715 140683014930432 postprocess_variants.py:1432] VCF creation took 6.567637125651041e-05 minutes
	I0405 19:35:00.691444 140683014930432 genomics_writer.py:183] Writing /tmp/tmpln0cg7pr.gz with NativeVcfWriter
	I0405 19:35:00.692662 140683014930432 postprocess_variants.py:1432] VCF creation took 4.7779083251953126e-05 minutes
	I0405 19:35:00.694226 140683014930432 postprocess_variants.py:1208] Processing region chr2:121090720-chr2:133199792
	I0405 19:35:00.694611 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17695852518081664 minutes
	I0405 19:35:00.695636 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17697567145029705 minutes
	I0405 19:35:00.695736 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.695801 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgdbcekdl.gz
	I0405 19:35:00.696767 140683014930432 postprocess_variants.py:1208] Processing region chr9:36327216-chr9:48436288
	I0405 19:35:00.697494 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgdbcekdl.gz with NativeVcfWriter
	I0405 19:35:00.698362 140683014930432 postprocess_variants.py:1432] VCF creation took 4.402399063110352e-05 minutes
	I0405 19:35:00.697448 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17506464719772338 minutes
	I0405 19:35:00.698642 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17508471409479778 minutes
	I0405 19:35:00.698740 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.698815 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpk1pttuor.gz
	I0405 19:35:00.700952 140683014930432 genomics_writer.py:183] Writing /tmp/tmpk1pttuor.gz with NativeVcfWriter
	I0405 19:35:00.702388 140683014930432 postprocess_variants.py:1432] VCF creation took 6.096760431925456e-05 minutes
	I0405 19:35:00.708205 140683014930432 postprocess_variants.py:1208] Processing region chr7:157417936-chr8:12109072
	I0405 19:35:00.708697 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17584168910980225 minutes
	I0405 19:35:00.709863 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17586126327514648 minutes
	I0405 19:35:00.710028 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.710143 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9bg_y_e0.gz
	I0405 19:35:00.712231 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9bg_y_e0.gz with NativeVcfWriter
	I0405 19:35:00.712945 140683014930432 postprocess_variants.py:1208] Processing region chr5:145308864-chr5:157417936
	I0405 19:35:00.713521 140683014930432 postprocess_variants.py:1432] VCF creation took 5.873441696166992e-05 minutes
	I0405 19:35:00.713573 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17629215319951375 minutes
	I0405 19:35:00.714798 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1763127088546753 minutes
	I0405 19:35:00.714955 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.715104 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpy3kr7uoc.gz
	I0405 19:35:00.715621 140683014930432 postprocess_variants.py:1208] Processing region chr7:48436288-chr7:60545360
	I0405 19:35:00.716100 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17615416844685872 minutes
	I0405 19:35:00.717064 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17617031733194988 minutes
	I0405 19:35:00.717170 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.717248 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpapwby_q0.gz
	I0405 19:35:00.717236 140683014930432 genomics_writer.py:183] Writing /tmp/tmpy3kr7uoc.gz with NativeVcfWriter
	I0405 19:35:00.718745 140683014930432 genomics_writer.py:183] Writing /tmp/tmpapwby_q0.gz with NativeVcfWriter
	I0405 19:35:00.719647 140683014930432 postprocess_variants.py:1432] VCF creation took 4.150470097859701e-05 minutes
	I0405 19:35:00.719948 140683014930432 postprocess_variants.py:1432] VCF creation took 8.362134297688802e-05 minutes
	I0405 19:35:00.738829 140683014930432 postprocess_variants.py:1208] Processing region chr6:145308864-chr6:157417936
	I0405 19:35:00.739411 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17659536600112916 minutes
	I0405 19:35:00.740649 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17661604881286622 minutes
	I0405 19:35:00.740803 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.740919 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpg48hfqlh.gz
	I0405 19:35:00.742470 140683014930432 postprocess_variants.py:1208] Processing region chr10:48436288-chr10:60545360
	I0405 19:35:00.743010 140683014930432 genomics_writer.py:183] Writing /tmp/tmpg48hfqlh.gz with NativeVcfWriter
	I0405 19:35:00.743011 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17547839482625324 minutes
	I0405 19:35:00.744268 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1754994551340739 minutes
	I0405 19:35:00.744420 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.744536 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpn5olf4ad.gz
	I0405 19:35:00.746199 140683014930432 postprocess_variants.py:1208] Processing region chr14:24218144-chr14:36327216
	I0405 19:35:00.746633 140683014930432 genomics_writer.py:183] Writing /tmp/tmpn5olf4ad.gz with NativeVcfWriter
	I0405 19:35:00.746661 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17289116779963176 minutes
	I0405 19:35:00.747871 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17291138569513956 minutes
	I0405 19:35:00.747981 140683014930432 postprocess_variants.py:1432] VCF creation took 5.973180135091146e-05 minutes
	I0405 19:35:00.748018 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.748095 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp523qsxwm.gz
	I0405 19:35:00.750127 140683014930432 genomics_writer.py:183] Writing /tmp/tmp523qsxwm.gz with NativeVcfWriter
	I0405 19:35:00.750698 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00016525586446126302 minutes
	I0405 19:35:00.751537 140683014930432 postprocess_variants.py:1432] VCF creation took 5.902449289957682e-05 minutes
	I0405 19:35:00.751705 140683014930432 postprocess_variants.py:1208] Processing region chr18:60545360-chr18:72654432
	I0405 19:35:00.752151 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17088204224904377 minutes
	I0405 19:35:00.753300 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17090129057566325 minutes
	I0405 19:35:00.753458 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.753577 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp0zwusgrp.gz
	I0405 19:35:00.755589 140683014930432 genomics_writer.py:183] Writing /tmp/tmp0zwusgrp.gz with NativeVcfWriter
	I0405 19:35:00.756105 140683014930432 postprocess_variants.py:1208] Processing region chr1:242181440-chr1:248956422
	I0405 19:35:00.756788 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17813998063405354 minutes
	I0405 19:35:00.757544 140683014930432 postprocess_variants.py:1208] Processing region chr3:84763504-chr3:96872576
	I0405 19:35:00.758015 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:00.758146 140683014930432 postprocess_variants.py:1226] Processed 22063 variants.
	I0405 19:35:00.758574 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17816996574401855 minutes
	I0405 19:35:00.758723 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.758837 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpc60agrh5.gz
	I0405 19:35:00.758022 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17772271633148193 minutes
	I0405 19:35:00.759354 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17774498065312702 minutes
	I0405 19:35:00.759529 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.759639 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpco2p42ty.gz
	I0405 19:35:00.759355 140683014930432 postprocess_variants.py:1208] Processing region chr20:36327216-chr20:48436288
	I0405 19:35:00.759785 140683014930432 postprocess_variants.py:1208] Processing region chr2:230072368-chr2:242193529
	I0405 19:35:00.760680 140683014930432 postprocess_variants.py:1432] VCF creation took 0.00012068748474121093 minutes
	I0405 19:35:00.760298 140683014930432 postprocess_variants.py:1208] Processing region chr1:133199792-chr1:145308864
	I0405 19:35:00.759848 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17037203709284465 minutes
	I0405 19:35:00.761051 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17039215962092083 minutes
	I0405 19:35:00.761061 140683014930432 genomics_writer.py:183] Writing /tmp/tmpc60agrh5.gz with NativeVcfWriter
	I0405 19:35:00.761207 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.761322 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp8payi1uz.gz
	I0405 19:35:00.760997 140683014930432 postprocess_variants.py:1208] Processing region chr9:84763504-chr9:96872576
	I0405 19:35:00.760385 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17796580791473388 minutes
	I0405 19:35:00.761532 140683014930432 genomics_writer.py:183] Writing /tmp/tmpco2p42ty.gz with NativeVcfWriter
	I0405 19:35:00.761633 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1779867132504781 minutes
	I0405 19:35:00.761801 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.761920 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp11k1zxhj.gz
	I0405 19:35:00.760836 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17824974060058593 minutes
	I0405 19:35:00.762174 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:00.761453 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1758569876352946 minutes
	I0405 19:35:00.762367 140683014930432 postprocess_variants.py:1226] Processed 14707 variants.
	I0405 19:35:00.762666 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17587730884552003 minutes
	I0405 19:35:00.762787 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1782824754714966 minutes
	I0405 19:35:00.762851 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.762944 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.762984 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp4e205vpc.gz
	I0405 19:35:00.763074 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp52_b127j.gz
	I0405 19:35:00.763411 140683014930432 genomics_writer.py:183] Writing /tmp/tmp8payi1uz.gz with NativeVcfWriter
	I0405 19:35:00.764137 140683014930432 genomics_writer.py:183] Writing /tmp/tmp11k1zxhj.gz with NativeVcfWriter
	I0405 19:35:00.764585 140683014930432 postprocess_variants.py:1432] VCF creation took 8.458693822224936e-05 minutes
	I0405 19:35:00.764704 140683014930432 postprocess_variants.py:1432] VCF creation took 5.863507588704427e-05 minutes
	I0405 19:35:00.764926 140683014930432 genomics_writer.py:183] Writing /tmp/tmp4e205vpc.gz with NativeVcfWriter
	I0405 19:35:00.765214 140683014930432 postprocess_variants.py:1432] VCF creation took 5.728801091512044e-05 minutes
	I0405 19:35:00.765676 140683014930432 genomics_writer.py:183] Writing /tmp/tmp52_b127j.gz with NativeVcfWriter
	I0405 19:35:00.766171 140683014930432 postprocess_variants.py:1432] VCF creation took 5.563894907633464e-05 minutes
	I0405 19:35:00.773223 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:00.775717 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:00.778816 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:00.781357 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:00.794787 140683014930432 postprocess_variants.py:1208] Processing region chr1:48436288-chr1:60545360
	I0405 19:35:00.795025 140683014930432 postprocess_variants.py:1208] Processing region chr13:36327216-chr13:48436288
	I0405 19:35:00.795479 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17891147136688232 minutes
	I0405 19:35:00.796704 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:00.795663 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17436618407567342 minutes
	I0405 19:35:00.796991 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17438838879267374 minutes
	I0405 19:35:00.796831 140683014930432 postprocess_variants.py:1226] Processed 25704 variants.
	I0405 19:35:00.797160 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.797260 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17894142071406047 minutes
	I0405 19:35:00.797310 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgz5vtkbe.gz
	I0405 19:35:00.797414 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.797538 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpt7l3d0bm.gz
	I0405 19:35:00.799451 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgz5vtkbe.gz with NativeVcfWriter
	I0405 19:35:00.799749 140683014930432 genomics_writer.py:183] Writing /tmp/tmpt7l3d0bm.gz with NativeVcfWriter
	I0405 19:35:00.800778 140683014930432 postprocess_variants.py:1432] VCF creation took 6.071329116821289e-05 minutes
	I0405 19:35:00.806120 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:00.808928 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:00.810782 140683014930432 postprocess_variants.py:1208] Processing region chr4:145308864-chr4:157417936
	I0405 19:35:00.811398 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17802050113677978 minutes
	I0405 19:35:00.812700 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17804235219955444 minutes
	I0405 19:35:00.812856 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.812971 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpihogezd0.gz
	I0405 19:35:00.814137 140683014930432 postprocess_variants.py:1208] Processing region chr17:60545360-chr17:72654432
	I0405 19:35:00.815100 140683014930432 genomics_writer.py:183] Writing /tmp/tmpihogezd0.gz with NativeVcfWriter
	I0405 19:35:00.814824 140683014930432 postprocess_variants.py:1208] Processing region chr20:12109072-chr20:24218144
	I0405 19:35:00.814523 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17239977916081747 minutes
	I0405 19:35:00.815416 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1724147876103719 minutes
	I0405 19:35:00.815530 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.815592 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpg0d9akrd.gz
	I0405 19:35:00.816533 140683014930432 postprocess_variants.py:1432] VCF creation took 6.164312362670899e-05 minutes
	I0405 19:35:00.815464 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17143266598383586 minutes
	I0405 19:35:00.816713 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17145358324050902 minutes
	I0405 19:35:00.816875 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.816993 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpiojtyor_.gz
	I0405 19:35:00.817078 140683014930432 genomics_writer.py:183] Writing /tmp/tmpg0d9akrd.gz with NativeVcfWriter
	I0405 19:35:00.818250 140683014930432 postprocess_variants.py:1432] VCF creation took 4.54862912495931e-05 minutes
	I0405 19:35:00.819211 140683014930432 genomics_writer.py:183] Writing /tmp/tmpiojtyor_.gz with NativeVcfWriter
	I0405 19:35:00.821316 140683014930432 postprocess_variants.py:1432] VCF creation took 7.430712381998698e-05 minutes
	I0405 19:35:00.823456 140683014930432 postprocess_variants.py:1208] Processing region chr3:12109072-chr3:24218144
	I0405 19:35:00.823903 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17901398738225302 minutes
	I0405 19:35:00.824985 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17903215885162355 minutes
	I0405 19:35:00.825093 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.825166 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpyqxhw086.gz
	I0405 19:35:00.827175 140683014930432 genomics_writer.py:183] Writing /tmp/tmpyqxhw086.gz with NativeVcfWriter
	I0405 19:35:00.829258 140683014930432 postprocess_variants.py:1432] VCF creation took 6.973346074422201e-05 minutes
	I0405 19:35:00.836922 140683014930432 postprocess_variants.py:1208] Processing region chr3:72654432-chr3:84763504
	I0405 19:35:00.837471 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17906060616175334 minutes
	I0405 19:35:00.838688 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1790809750556946 minutes
	I0405 19:35:00.838834 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.839000 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpxnqee_rw.gz
	I0405 19:35:00.839228 140683014930432 postprocess_variants.py:1208] Processing region chr12:108981648-chr12:121090720
	I0405 19:35:00.839830 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17523273626963298 minutes
	I0405 19:35:00.840976 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17525193293889363 minutes
	I0405 19:35:00.841106 140683014930432 genomics_writer.py:183] Writing /tmp/tmpxnqee_rw.gz with NativeVcfWriter
	I0405 19:35:00.841143 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.840836 140683014930432 postprocess_variants.py:1208] Processing region chr9:108981648-chr9:121090720
	I0405 19:35:00.841223 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpq184nk47.gz
	I0405 19:35:00.841418 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17717236280441284 minutes
	I0405 19:35:00.842544 140683014930432 postprocess_variants.py:1432] VCF creation took 6.211598714192709e-05 minutes
	I0405 19:35:00.842747 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17719459931055706 minutes
	I0405 19:35:00.842891 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.843007 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp1x3klvdy.gz
	I0405 19:35:00.843214 140683014930432 genomics_writer.py:183] Writing /tmp/tmpq184nk47.gz with NativeVcfWriter
	I0405 19:35:00.844569 140683014930432 postprocess_variants.py:1432] VCF creation took 5.745490392049153e-05 minutes
	I0405 19:35:00.845102 140683014930432 genomics_writer.py:183] Writing /tmp/tmp1x3klvdy.gz with NativeVcfWriter
	I0405 19:35:00.846243 140683014930432 postprocess_variants.py:1432] VCF creation took 5.6151549021403e-05 minutes
	I0405 19:35:00.863110 140683014930432 postprocess_variants.py:1208] Processing region chr15:48436288-chr15:60545360
	I0405 19:35:00.863654 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17408022085825603 minutes
	I0405 19:35:00.864820 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17409977912902833 minutes
	I0405 19:35:00.864962 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.865076 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp0dqcw873.gz
	I0405 19:35:00.867048 140683014930432 genomics_writer.py:183] Writing /tmp/tmp0dqcw873.gz with NativeVcfWriter
	I0405 19:35:00.868093 140683014930432 postprocess_variants.py:1432] VCF creation took 5.2535533905029296e-05 minutes
	I0405 19:35:00.868378 140683014930432 postprocess_variants.py:1208] Processing region chr10:96872576-chr10:108981648
	I0405 19:35:00.868755 140683014930432 postprocess_variants.py:1208] Processing region chr17:0-chr17:12109072
	I0405 19:35:00.868951 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17731335163116455 minutes
	I0405 19:35:00.870010 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17733112176259358 minutes
	I0405 19:35:00.870137 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.870239 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpx0r4ks10.gz
	I0405 19:35:00.869260 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17363405227661133 minutes
	I0405 19:35:00.870486 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1736545205116272 minutes
	I0405 19:35:00.870630 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.870743 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp8qiygp_q.gz
	I0405 19:35:00.871987 140683014930432 postprocess_variants.py:1208] Processing region chr9:121090720-chr9:133199792
	I0405 19:35:00.872342 140683014930432 genomics_writer.py:183] Writing /tmp/tmpx0r4ks10.gz with NativeVcfWriter
	I0405 19:35:00.872818 140683014930432 genomics_writer.py:183] Writing /tmp/tmp8qiygp_q.gz with NativeVcfWriter
	I0405 19:35:00.872547 140683014930432 postprocess_variants.py:1208] Processing region chr8:48436288-chr8:60545360
	I0405 19:35:00.873522 140683014930432 postprocess_variants.py:1432] VCF creation took 5.672375361124674e-05 minutes
	I0405 19:35:00.872566 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17768355210622153 minutes
	I0405 19:35:00.873749 140683014930432 postprocess_variants.py:1432] VCF creation took 5.2265326182047526e-05 minutes
	I0405 19:35:00.872980 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17850603262583414 minutes
	I0405 19:35:00.873975 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17770710786183674 minutes
	I0405 19:35:00.873999 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17852309942245484 minutes
	I0405 19:35:00.874085 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.874102 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.874172 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpuiplzb3u.gz
	I0405 19:35:00.874224 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp104_2h32.gz
	I0405 19:35:00.876162 140683014930432 genomics_writer.py:183] Writing /tmp/tmpuiplzb3u.gz with NativeVcfWriter
	I0405 19:35:00.876310 140683014930432 genomics_writer.py:183] Writing /tmp/tmp104_2h32.gz with NativeVcfWriter
	I0405 19:35:00.877162 140683014930432 postprocess_variants.py:1432] VCF creation took 5.13156255086263e-05 minutes
	I0405 19:35:00.877329 140683014930432 postprocess_variants.py:1432] VCF creation took 5.43514887491862e-05 minutes
	I0405 19:35:00.882270 140683014930432 postprocess_variants.py:1208] Processing region chr2:157417936-chr2:169527008
	I0405 19:35:00.882800 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18007373015085856 minutes
	I0405 19:35:00.883986 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18009361426035564 minutes
	I0405 19:35:00.884119 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.884217 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpcajkusm8.gz
	I0405 19:35:00.886242 140683014930432 genomics_writer.py:183] Writing /tmp/tmpcajkusm8.gz with NativeVcfWriter
	I0405 19:35:00.887604 140683014930432 postprocess_variants.py:1432] VCF creation took 5.839665730794271e-05 minutes
	I0405 19:35:00.892488 140683014930432 postprocess_variants.py:1208] Processing region chr7:60545360-chr7:72654432
	I0405 19:35:00.892536 140683014930432 postprocess_variants.py:1208] Processing region chr16:36327216-chr16:48436288
	I0405 19:35:00.892871 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17902694940567015 minutes
	I0405 19:35:00.893763 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17904195785522461 minutes
	I0405 19:35:00.893864 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.893942 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqqa6sd8r.gz
	I0405 19:35:00.893108 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1742314616839091 minutes
	I0405 19:35:00.894256 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17425066232681274 minutes
	I0405 19:35:00.894396 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.894515 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3nwb6a16.gz
	I0405 19:35:00.895346 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqqa6sd8r.gz with NativeVcfWriter
	I0405 19:35:00.896644 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3nwb6a16.gz with NativeVcfWriter
	I0405 19:35:00.896838 140683014930432 postprocess_variants.py:1432] VCF creation took 4.974603652954102e-05 minutes
	I0405 19:35:00.897536 140683014930432 postprocess_variants.py:1208] Processing region chr5:60545360-chr5:72654432
	I0405 19:35:00.898360 140683014930432 postprocess_variants.py:1432] VCF creation took 6.630420684814454e-05 minutes
	I0405 19:35:00.898019 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1794011910756429 minutes
	I0405 19:35:00.899153 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17942019701004028 minutes
	I0405 19:35:00.899288 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.899406 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpsi9dusr4.gz
	I0405 19:35:00.901392 140683014930432 genomics_writer.py:183] Writing /tmp/tmpsi9dusr4.gz with NativeVcfWriter
	I0405 19:35:00.901335 140683014930432 postprocess_variants.py:1208] Processing region chr14:72654432-chr14:84763504
	I0405 19:35:00.901748 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17509499390920003 minutes
	I0405 19:35:00.902769 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1751121441523234 minutes
	I0405 19:35:00.902767 140683014930432 postprocess_variants.py:1432] VCF creation took 5.828142166137695e-05 minutes
	I0405 19:35:00.902863 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.902925 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpfkmdp39n.gz
	I0405 19:35:00.904878 140683014930432 genomics_writer.py:183] Writing /tmp/tmpfkmdp39n.gz with NativeVcfWriter
	I0405 19:35:00.906591 140683014930432 postprocess_variants.py:1432] VCF creation took 6.242593129475911e-05 minutes
	I0405 19:35:00.910516 140683014930432 postprocess_variants.py:1208] Processing region chr6:72654432-chr6:84763504
	I0405 19:35:00.910905 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17953558365503947 minutes
	I0405 19:35:00.912033 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17955443461736043 minutes
	I0405 19:35:00.912136 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.912205 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp7y9lxtyw.gz
	I0405 19:35:00.913968 140683014930432 genomics_writer.py:183] Writing /tmp/tmp7y9lxtyw.gz with NativeVcfWriter
	I0405 19:35:00.915337 140683014930432 postprocess_variants.py:1432] VCF creation took 5.32229741414388e-05 minutes
	I0405 19:35:00.919599 140683014930432 postprocess_variants.py:1208] Processing region chr14:60545360-chr14:72654432
	I0405 19:35:00.920063 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17563944260279338 minutes
	I0405 19:35:00.920973 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17565464576085407 minutes
	I0405 19:35:00.921066 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.921123 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp07_j52i9.gz
	I0405 19:35:00.921293 140683014930432 postprocess_variants.py:1208] Processing region chr16:60545360-chr16:72654432
	I0405 19:35:00.922670 140683014930432 genomics_writer.py:183] Writing /tmp/tmp07_j52i9.gz with NativeVcfWriter
	I0405 19:35:00.921823 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17470295031865438 minutes
	I0405 19:35:00.922964 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17472209135691324 minutes
	I0405 19:35:00.923056 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.923123 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpr6pnwves.gz
	I0405 19:35:00.924429 140683014930432 postprocess_variants.py:1432] VCF creation took 5.635817845662435e-05 minutes
	I0405 19:35:00.925685 140683014930432 genomics_writer.py:183] Writing /tmp/tmpr6pnwves.gz with NativeVcfWriter
	I0405 19:35:00.925568 140683014930432 postprocess_variants.py:1208] Processing region chr10:121090720-chr10:133199792
	I0405 19:35:00.925959 140683014930432 postprocess_variants.py:1208] Processing region chr10:12109072-chr10:24218144
	I0405 19:35:00.926062 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1778627634048462 minutes
	I0405 19:35:00.927192 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17788164615631102 minutes
	I0405 19:35:00.926435 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17855862776438394 minutes
	I0405 19:35:00.927343 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17857387860616047 minutes
	I0405 19:35:00.927359 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.927435 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp0ijlm49c.gz
	I0405 19:35:00.927474 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.927526 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp1y4uvz28.gz
	I0405 19:35:00.927421 140683014930432 postprocess_variants.py:1208] Processing region chr15:72654432-chr15:84763504
	I0405 19:35:00.927782 140683014930432 postprocess_variants.py:1432] VCF creation took 7.895231246948242e-05 minutes
	I0405 19:35:00.927742 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17501910527547201 minutes
	I0405 19:35:00.928545 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17503263155619303 minutes
	I0405 19:35:00.928612 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.928658 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3zvavo4l.gz
	I0405 19:35:00.928979 140683014930432 genomics_writer.py:183] Writing /tmp/tmp1y4uvz28.gz with NativeVcfWriter
	I0405 19:35:00.929458 140683014930432 genomics_writer.py:183] Writing /tmp/tmp0ijlm49c.gz with NativeVcfWriter
	I0405 19:35:00.930064 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3zvavo4l.gz with NativeVcfWriter
	I0405 19:35:00.930505 140683014930432 postprocess_variants.py:1432] VCF creation took 5.079507827758789e-05 minutes
	I0405 19:35:00.932130 140683014930432 postprocess_variants.py:1432] VCF creation took 5.878210067749024e-05 minutes
	I0405 19:35:00.932177 140683014930432 postprocess_variants.py:1432] VCF creation took 8.06887944539388e-05 minutes
	I0405 19:35:00.937062 140683014930432 postprocess_variants.py:1208] Processing region chr4:60545360-chr4:72654432
	I0405 19:35:00.937377 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18046875794728598 minutes
	I0405 19:35:00.938197 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18048287630081178 minutes
	I0405 19:35:00.938262 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.938307 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpe7gn6qki.gz
	I0405 19:35:00.939612 140683014930432 genomics_writer.py:183] Writing /tmp/tmpe7gn6qki.gz with NativeVcfWriter
	I0405 19:35:00.941339 140683014930432 postprocess_variants.py:1432] VCF creation took 5.1355361938476564e-05 minutes
	I0405 19:35:00.941692 140683014930432 postprocess_variants.py:1208] Processing region chr17:36327216-chr17:48436288
	I0405 19:35:00.942225 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17467825810114543 minutes
	I0405 19:35:00.943424 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17469826539357503 minutes
	I0405 19:35:00.943568 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.943678 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpcpxzp3lg.gz
	I0405 19:35:00.945665 140683014930432 genomics_writer.py:183] Writing /tmp/tmpcpxzp3lg.gz with NativeVcfWriter
	I0405 19:35:00.947528 140683014930432 postprocess_variants.py:1432] VCF creation took 6.627639134724935e-05 minutes
	I0405 19:35:00.951386 140683014930432 postprocess_variants.py:1208] Processing region chr3:157417936-chr3:169527008
	I0405 19:35:00.951728 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18088440497716268 minutes
	I0405 19:35:00.952542 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18089820941289267 minutes
	I0405 19:35:00.952612 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.952657 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp1oe5fzk6.gz
	I0405 19:35:00.953953 140683014930432 genomics_writer.py:183] Writing /tmp/tmp1oe5fzk6.gz with NativeVcfWriter
	I0405 19:35:00.955349 140683014930432 postprocess_variants.py:1432] VCF creation took 4.5800209045410155e-05 minutes
	I0405 19:35:00.967995 140683014930432 postprocess_variants.py:1208] Processing region chr19:24218144-chr19:36327216
	I0405 19:35:00.968403 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17428801854451498 minutes
	I0405 19:35:00.969312 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17430322567621867 minutes
	I0405 19:35:00.969378 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.969424 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpbhbtvt3w.gz
	I0405 19:35:00.970803 140683014930432 genomics_writer.py:183] Writing /tmp/tmpbhbtvt3w.gz with NativeVcfWriter
	I0405 19:35:00.972226 140683014930432 postprocess_variants.py:1432] VCF creation took 4.762013753255208e-05 minutes
	I0405 19:35:00.973973 140683014930432 postprocess_variants.py:1208] Processing region chr2:145308864-chr2:157417936
	I0405 19:35:00.975271 140683014930432 postprocess_variants.py:1208] Processing region chr6:60545360-chr6:72654432
	I0405 19:35:00.974447 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18162523905436198 minutes
	I0405 19:35:00.975707 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18164638678232828 minutes
	I0405 19:35:00.975809 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.975878 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqmyyvnr3.gz
	I0405 19:35:00.975616 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18062036037445067 minutes
	I0405 19:35:00.976459 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1806344985961914 minutes
	I0405 19:35:00.976528 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.976575 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgigc2iw1.gz
	I0405 19:35:00.977736 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqmyyvnr3.gz with NativeVcfWriter
	I0405 19:35:00.977861 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgigc2iw1.gz with NativeVcfWriter
	I0405 19:35:00.979796 140683014930432 postprocess_variants.py:1432] VCF creation took 5.4617722829182945e-05 minutes
	I0405 19:35:00.979854 140683014930432 postprocess_variants.py:1432] VCF creation took 6.763537724812826e-05 minutes
	I0405 19:35:00.986376 140683014930432 postprocess_variants.py:1208] Processing region chr10:60545360-chr10:72654432
	I0405 19:35:00.986750 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17928929328918458 minutes
	I0405 19:35:00.987567 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1793028752009074 minutes
	I0405 19:35:00.987662 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.987726 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwp5ivt4n.gz
	I0405 19:35:00.989104 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwp5ivt4n.gz with NativeVcfWriter
	I0405 19:35:00.990630 140683014930432 postprocess_variants.py:1432] VCF creation took 4.983345667521159e-05 minutes
	I0405 19:35:00.992178 140683014930432 postprocess_variants.py:1208] Processing region chrX:72654432-chrX:84763504
	I0405 19:35:00.992564 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17151368459065755 minutes
	I0405 19:35:00.993372 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17152717113494872 minutes
	I0405 19:35:00.993466 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:00.993524 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp9990cvvs.gz
	I0405 19:35:00.995017 140683014930432 genomics_writer.py:183] Writing /tmp/tmp9990cvvs.gz with NativeVcfWriter
	I0405 19:35:00.996172 140683014930432 postprocess_variants.py:1432] VCF creation took 4.5470396677652995e-05 minutes
	I0405 19:35:01.001630 140683014930432 postprocess_variants.py:1208] Processing region chr14:36327216-chr14:48436288
	I0405 19:35:01.002137 140683014930432 postprocess_variants.py:1208] Processing region chr22:0-chr22:12109072
	I0405 19:35:01.002180 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17701948483784993 minutes
	I0405 19:35:01.002447 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1735464374224345 minutes
	I0405 19:35:01.003268 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1735602855682373 minutes
	I0405 19:35:01.003300 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17703823248545328 minutes
	I0405 19:35:01.003352 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.003400 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpz6jcrv6q.gz
	I0405 19:35:01.003422 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.003490 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp1lhde2z0.gz
	I0405 19:35:01.004672 140683014930432 genomics_writer.py:183] Writing /tmp/tmpz6jcrv6q.gz with NativeVcfWriter
	I0405 19:35:01.005340 140683014930432 genomics_writer.py:183] Writing /tmp/tmp1lhde2z0.gz with NativeVcfWriter
	I0405 19:35:01.005862 140683014930432 postprocess_variants.py:1432] VCF creation took 4.2045116424560546e-05 minutes
	I0405 19:35:01.006612 140683014930432 postprocess_variants.py:1432] VCF creation took 5.35130500793457e-05 minutes
	I0405 19:35:01.008718 140683014930432 postprocess_variants.py:1208] Processing region chr20:24218144-chr20:36327216
	I0405 19:35:01.009089 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17453198432922362 minutes
	I0405 19:35:01.009927 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17454587618509929 minutes
	I0405 19:35:01.010015 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.010070 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp4x27cya5.gz
	I0405 19:35:01.011439 140683014930432 genomics_writer.py:183] Writing /tmp/tmp4x27cya5.gz with NativeVcfWriter
	I0405 19:35:01.013284 140683014930432 postprocess_variants.py:1432] VCF creation took 5.474090576171875e-05 minutes
	I0405 19:35:01.013516 140683014930432 postprocess_variants.py:1208] Processing region chr13:96872576-chr13:108981648
	I0405 19:35:01.013942 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1776086648305257 minutes
	I0405 19:35:01.014817 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17762328386306764 minutes
	I0405 19:35:01.014905 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.014961 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpbamo93o8.gz
	I0405 19:35:01.015081 140683014930432 postprocess_variants.py:1208] Processing region chr13:108981648-chr14:12109072
	I0405 19:35:01.016324 140683014930432 genomics_writer.py:183] Writing /tmp/tmpbamo93o8.gz with NativeVcfWriter
	I0405 19:35:01.015499 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17763279676437377 minutes
	I0405 19:35:01.016558 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1776505748430888 minutes
	I0405 19:35:01.016654 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.016721 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3gmm9ub7.gz
	I0405 19:35:01.016676 140683014930432 postprocess_variants.py:1208] Processing region chr12:72654432-chr12:84763504
	I0405 19:35:01.016978 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1783954699834188 minutes
	I0405 19:35:01.017746 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17840826114018757 minutes
	I0405 19:35:01.017726 140683014930432 postprocess_variants.py:1432] VCF creation took 4.732211430867513e-05 minutes
	I0405 19:35:01.017809 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.017854 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpi18rgxbd.gz
	I0405 19:35:01.018637 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3gmm9ub7.gz with NativeVcfWriter
	I0405 19:35:01.019083 140683014930432 genomics_writer.py:183] Writing /tmp/tmpi18rgxbd.gz with NativeVcfWriter
	I0405 19:35:01.020081 140683014930432 postprocess_variants.py:1432] VCF creation took 5.738735198974609e-05 minutes
	I0405 19:35:01.021101 140683014930432 postprocess_variants.py:1432] VCF creation took 5.497932434082031e-05 minutes
	I0405 19:35:01.023080 140683014930432 postprocess_variants.py:1208] Processing region chr20:0-chr20:12109072
	I0405 19:35:01.023401 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17490423917770387 minutes
	I0405 19:35:01.024208 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17491776148478191 minutes
	I0405 19:35:01.024272 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.024317 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp2bcjhzkv.gz
	I0405 19:35:01.025578 140683014930432 genomics_writer.py:183] Writing /tmp/tmp2bcjhzkv.gz with NativeVcfWriter
	I0405 19:35:01.027337 140683014930432 postprocess_variants.py:1432] VCF creation took 5.12242317199707e-05 minutes
	I0405 19:35:01.039028 140683014930432 postprocess_variants.py:1208] Processing region chr18:24218144-chr18:36327216
	I0405 19:35:01.039412 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1758780042330424 minutes
	I0405 19:35:01.040232 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1758918007214864 minutes
	I0405 19:35:01.040293 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.040335 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpn470l0ev.gz
	I0405 19:35:01.041574 140683014930432 genomics_writer.py:183] Writing /tmp/tmpn470l0ev.gz with NativeVcfWriter
	I0405 19:35:01.042312 140683014930432 postprocess_variants.py:1432] VCF creation took 3.3799807230631514e-05 minutes
	I0405 19:35:01.048150 140683014930432 postprocess_variants.py:1208] Processing region chr5:133199792-chr5:145308864
	I0405 19:35:01.048741 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1818742076555888 minutes
	I0405 19:35:01.050054 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18189627726872762 minutes
	I0405 19:35:01.050208 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.050325 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpblwzli4q.gz
	I0405 19:35:01.052261 140683014930432 genomics_writer.py:183] Writing /tmp/tmpblwzli4q.gz with NativeVcfWriter
	I0405 19:35:01.052192 140683014930432 postprocess_variants.py:1208] Processing region chr7:84763504-chr7:96872576
	I0405 19:35:01.052886 140683014930432 postprocess_variants.py:1208] Processing region chr10:108981648-chr10:121090720
	I0405 19:35:01.052515 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18165648380915325 minutes
	I0405 19:35:01.053402 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18167129755020142 minutes
	I0405 19:35:01.053476 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.053530 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwy37ctxk.gz
	I0405 19:35:01.053221 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1801953872044881 minutes
	I0405 19:35:01.054000 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18020846446355185 minutes
	I0405 19:35:01.054066 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.054109 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpfj8pjfbj.gz
	I0405 19:35:01.054239 140683014930432 postprocess_variants.py:1432] VCF creation took 6.757974624633789e-05 minutes
	I0405 19:35:01.054894 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwy37ctxk.gz with NativeVcfWriter
	I0405 19:35:01.055422 140683014930432 genomics_writer.py:183] Writing /tmp/tmpfj8pjfbj.gz with NativeVcfWriter
	I0405 19:35:01.055867 140683014930432 postprocess_variants.py:1432] VCF creation took 4.000266393025716e-05 minutes
	I0405 19:35:01.056845 140683014930432 postprocess_variants.py:1432] VCF creation took 4.6535332997639975e-05 minutes
	I0405 19:35:01.079244 140683014930432 postprocess_variants.py:1208] Processing region chr18:0-chr18:12109072
	I0405 19:35:01.079866 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17668383121490477 minutes
	I0405 19:35:01.081152 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17670531670252482 minutes
	I0405 19:35:01.081303 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.081424 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmphf22feah.gz
	I0405 19:35:01.083506 140683014930432 genomics_writer.py:183] Writing /tmp/tmphf22feah.gz with NativeVcfWriter
	I0405 19:35:01.084574 140683014930432 postprocess_variants.py:1432] VCF creation took 5.480845769246419e-05 minutes
	I0405 19:35:01.094099 140683014930432 postprocess_variants.py:1208] Processing region chr4:84763504-chr4:96872576
	I0405 19:35:01.094474 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18298434019088744 minutes
	I0405 19:35:01.095297 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18299973408381146 minutes
	I0405 19:35:01.095401 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.095468 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmprwmizt4x.gz
	I0405 19:35:01.096782 140683014930432 genomics_writer.py:183] Writing /tmp/tmprwmizt4x.gz with NativeVcfWriter
	I0405 19:35:01.097458 140683014930432 postprocess_variants.py:1432] VCF creation took 3.455877304077148e-05 minutes
	I0405 19:35:01.104503 140683014930432 postprocess_variants.py:1208] Processing region chrX:12109072-chrX:24218144
	I0405 19:35:01.104872 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1746613661448161 minutes
	I0405 19:35:01.105841 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17467758258183796 minutes
	I0405 19:35:01.105935 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.106003 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpi9vx20vf.gz
	I0405 19:35:01.107859 140683014930432 genomics_writer.py:183] Writing /tmp/tmpi9vx20vf.gz with NativeVcfWriter
	I0405 19:35:01.108630 140683014930432 postprocess_variants.py:1432] VCF creation took 4.516839981079101e-05 minutes
	I0405 19:35:01.110927 140683014930432 postprocess_variants.py:1208] Processing region chr5:24218144-chr5:36327216
	I0405 19:35:01.111521 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18299566507339476 minutes
	I0405 19:35:01.112678 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18301503658294677 minutes
	I0405 19:35:01.112510 140683014930432 postprocess_variants.py:1208] Processing region chr1:181636080-chr1:193745152
	I0405 19:35:01.112835 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.112917 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgwzd7xgc.gz
	I0405 19:35:01.112888 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1841018795967102 minutes
	I0405 19:35:01.113685 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.113738 140683014930432 postprocess_variants.py:1226] Processed 22338 variants.
	I0405 19:35:01.113975 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1841202934583028 minutes
	I0405 19:35:01.114034 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.114075 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpa_1tewcp.gz
	I0405 19:35:01.114883 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgwzd7xgc.gz with NativeVcfWriter
	I0405 19:35:01.115511 140683014930432 genomics_writer.py:183] Writing /tmp/tmpa_1tewcp.gz with NativeVcfWriter
	I0405 19:35:01.116036 140683014930432 postprocess_variants.py:1432] VCF creation took 5.3652127583821614e-05 minutes
	I0405 19:35:01.119504 140683014930432 postprocess_variants.py:1208] Processing region chr1:205854224-chr1:217963296
	I0405 19:35:01.120146 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18421583573023478 minutes
	I0405 19:35:01.121295 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.121431 140683014930432 postprocess_variants.py:1226] Processed 28906 variants.
	I0405 19:35:01.121840 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18424434264500936 minutes
	I0405 19:35:01.121995 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.122117 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpjll3oyrp.gz
	I0405 19:35:01.124259 140683014930432 genomics_writer.py:183] Writing /tmp/tmpjll3oyrp.gz with NativeVcfWriter
	I0405 19:35:01.124923 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.127385 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.130466 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.133658 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.139786 140683014930432 postprocess_variants.py:1208] Processing region chr2:108981648-chr2:121090720
	I0405 19:35:01.140121 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18440733353296915 minutes
	I0405 19:35:01.140934 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1844209313392639 minutes
	I0405 19:35:01.140997 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.141042 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpoiw0sndv.gz
	I0405 19:35:01.142421 140683014930432 genomics_writer.py:183] Writing /tmp/tmpoiw0sndv.gz with NativeVcfWriter
	I0405 19:35:01.143441 140683014930432 postprocess_variants.py:1432] VCF creation took 4.084904988606771e-05 minutes
	I0405 19:35:01.147026 140683014930432 postprocess_variants.py:1208] Processing region chr1:72654432-chr1:84763504
	I0405 19:35:01.147443 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18477083047231038 minutes
	I0405 19:35:01.148263 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.148317 140683014930432 postprocess_variants.py:1226] Processed 18854 variants.
	I0405 19:35:01.148549 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18478941122690837 minutes
	I0405 19:35:01.148607 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.148651 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp36t7dlb9.gz
	I0405 19:35:01.150042 140683014930432 genomics_writer.py:183] Writing /tmp/tmp36t7dlb9.gz with NativeVcfWriter
	I0405 19:35:01.154924 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.157110 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.159069 140683014930432 postprocess_variants.py:1208] Processing region chr22:48436288-chrX:12109072
	I0405 19:35:01.159474 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17569712400436402 minutes
	I0405 19:35:01.160522 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17571467955907186 minutes
	I0405 19:35:01.160617 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.160683 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp6_79zwgf.gz
	I0405 19:35:01.162618 140683014930432 genomics_writer.py:183] Writing /tmp/tmp6_79zwgf.gz with NativeVcfWriter
	I0405 19:35:01.163765 140683014930432 postprocess_variants.py:1432] VCF creation took 5.272626876831055e-05 minutes
	I0405 19:35:01.173017 140683014930432 postprocess_variants.py:1208] Processing region chr16:72654432-chr16:84763504
	I0405 19:35:01.173329 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17871166865030924 minutes
	I0405 19:35:01.174081 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17872429291407269 minutes
	I0405 19:35:01.174144 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.174190 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp7u9283ad.gz
	I0405 19:35:01.175445 140683014930432 genomics_writer.py:183] Writing /tmp/tmp7u9283ad.gz with NativeVcfWriter
	I0405 19:35:01.176147 140683014930432 postprocess_variants.py:1432] VCF creation took 3.3525625864664715e-05 minutes
	I0405 19:35:01.190340 140683014930432 postprocess_variants.py:1208] Processing region chr17:48436288-chr17:60545360
	I0405 19:35:01.190748 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17881510655085245 minutes
	I0405 19:35:01.191885 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17883414427439373 minutes
	I0405 19:35:01.191971 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.192037 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgg2iabam.gz
	I0405 19:35:01.193712 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgg2iabam.gz with NativeVcfWriter
	I0405 19:35:01.194186 140683014930432 postprocess_variants.py:1208] Processing region chrY:12109072-chrY:24218144
	I0405 19:35:01.194929 140683014930432 postprocess_variants.py:1432] VCF creation took 4.945993423461914e-05 minutes
	I0405 19:35:01.194540 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1733374039332072 minutes
	I0405 19:35:01.195454 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17335272232691448 minutes
	I0405 19:35:01.195520 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.195563 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp2dsbrpqc.gz
	I0405 19:35:01.195934 140683014930432 postprocess_variants.py:1208] Processing region chrX:133199792-chrX:145308864
	I0405 19:35:01.196873 140683014930432 genomics_writer.py:183] Writing /tmp/tmp2dsbrpqc.gz with NativeVcfWriter
	I0405 19:35:01.196437 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1740517059961955 minutes
	I0405 19:35:01.197550 140683014930432 postprocess_variants.py:1432] VCF creation took 3.40580940246582e-05 minutes
	I0405 19:35:01.197634 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17407172520955402 minutes
	I0405 19:35:01.197738 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.197806 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwn1nwc7u.gz
	I0405 19:35:01.199677 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwn1nwc7u.gz with NativeVcfWriter
	I0405 19:35:01.200581 140683014930432 postprocess_variants.py:1432] VCF creation took 4.772345225016276e-05 minutes
	I0405 19:35:01.212899 140683014930432 postprocess_variants.py:1208] Processing region chr17:24218144-chr17:36327216
	I0405 19:35:01.213204 140683014930432 postprocess_variants.py:1208] Processing region chr5:72654432-chr5:84763504
	I0405 19:35:01.213192 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17919567028681438 minutes
	I0405 19:35:01.213927 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1792081316312154 minutes
	I0405 19:35:01.213987 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.214031 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpoou2ekc2.gz
	I0405 19:35:01.213723 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18466615676879883 minutes
	I0405 19:35:01.214809 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18468431234359742 minutes
	I0405 19:35:01.214942 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.215047 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpzmaa79g2.gz
	I0405 19:35:01.215255 140683014930432 genomics_writer.py:183] Writing /tmp/tmpoou2ekc2.gz with NativeVcfWriter
	I0405 19:35:01.215941 140683014930432 postprocess_variants.py:1432] VCF creation took 3.27150026957194e-05 minutes
	I0405 19:35:01.216938 140683014930432 genomics_writer.py:183] Writing /tmp/tmpzmaa79g2.gz with NativeVcfWriter
	I0405 19:35:01.217806 140683014930432 postprocess_variants.py:1432] VCF creation took 4.8053264617919925e-05 minutes
	I0405 19:35:01.221323 140683014930432 postprocess_variants.py:1208] Processing region chr14:84763504-chr14:96872576
	I0405 19:35:01.221627 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18042455116907755 minutes
	I0405 19:35:01.222383 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18043724298477173 minutes
	I0405 19:35:01.222449 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.222490 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpt6ef1514.gz
	I0405 19:35:01.223707 140683014930432 genomics_writer.py:183] Writing /tmp/tmpt6ef1514.gz with NativeVcfWriter
	I0405 19:35:01.224330 140683014930432 postprocess_variants.py:1432] VCF creation took 3.157456715901693e-05 minutes
	I0405 19:35:01.227065 140683014930432 postprocess_variants.py:1208] Processing region chrX:121090720-chrX:133199792
	I0405 19:35:01.227482 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17469489971796673 minutes
	I0405 19:35:01.228498 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17471197446187336 minutes
	I0405 19:35:01.228591 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.228657 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpe_9_t_nl.gz
	I0405 19:35:01.230403 140683014930432 genomics_writer.py:183] Writing /tmp/tmpe_9_t_nl.gz with NativeVcfWriter
	I0405 19:35:01.231151 140683014930432 postprocess_variants.py:1432] VCF creation took 4.3002764383951825e-05 minutes
	I0405 19:35:01.241855 140683014930432 postprocess_variants.py:1208] Processing region chr14:48436288-chr14:60545360
	I0405 19:35:01.242367 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1810140649477641 minutes
	I0405 19:35:01.243360 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18103071053822836 minutes
	I0405 19:35:01.243476 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.243560 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpnqqvm6y7.gz
	I0405 19:35:01.245248 140683014930432 genomics_writer.py:183] Writing /tmp/tmpnqqvm6y7.gz with NativeVcfWriter
	I0405 19:35:01.246116 140683014930432 postprocess_variants.py:1432] VCF creation took 4.4282277425130205e-05 minutes
	I0405 19:35:01.247383 140683014930432 postprocess_variants.py:1208] Processing region chr2:205854224-chr2:217963296
	I0405 19:35:01.247564 140683014930432 postprocess_variants.py:1208] Processing region chr22:36327216-chr22:48436288
	I0405 19:35:01.247786 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18609375953674318 minutes
	I0405 19:35:01.248653 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18610833485921224 minutes
	I0405 19:35:01.248718 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.248762 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpk6_svk3n.gz
	I0405 19:35:01.248041 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17718117237091063 minutes
	I0405 19:35:01.249120 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17719929218292235 minutes
	I0405 19:35:01.249249 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.249353 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpas1hb78y.gz
	I0405 19:35:01.249458 140683014930432 postprocess_variants.py:1208] Processing region chr12:36327216-chr12:48436288
	I0405 19:35:01.250072 140683014930432 genomics_writer.py:183] Writing /tmp/tmpk6_svk3n.gz with NativeVcfWriter
	I0405 19:35:01.249820 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18248798847198486 minutes
	I0405 19:35:01.250655 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.182502011458079 minutes
	I0405 19:35:01.250736 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.250793 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp58porrqa.gz
	I0405 19:35:01.250831 140683014930432 postprocess_variants.py:1432] VCF creation took 3.545284271240234e-05 minutes
	I0405 19:35:01.251206 140683014930432 genomics_writer.py:183] Writing /tmp/tmpas1hb78y.gz with NativeVcfWriter
	I0405 19:35:01.252024 140683014930432 genomics_writer.py:183] Writing /tmp/tmp58porrqa.gz with NativeVcfWriter
	I0405 19:35:01.252156 140683014930432 postprocess_variants.py:1432] VCF creation took 4.8724810282389325e-05 minutes
	I0405 19:35:01.252648 140683014930432 postprocess_variants.py:1432] VCF creation took 3.214677174886068e-05 minutes
	I0405 19:35:01.254394 140683014930432 postprocess_variants.py:1208] Processing region chr22:24218144-chr22:36327216
	I0405 19:35:01.254718 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17742545207341512 minutes
	I0405 19:35:01.255549 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17743943134943643 minutes
	I0405 19:35:01.255610 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.255651 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpj3tqejrv.gz
	I0405 19:35:01.256856 140683014930432 genomics_writer.py:183] Writing /tmp/tmpj3tqejrv.gz with NativeVcfWriter
	I0405 19:35:01.257462 140683014930432 postprocess_variants.py:1432] VCF creation took 3.101428349812826e-05 minutes
	I0405 19:35:01.259675 140683014930432 postprocess_variants.py:1208] Processing region chr18:36327216-chr18:48436288
	I0405 19:35:01.260001 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17935582796732585 minutes
	I0405 19:35:01.260856 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1793702006340027 minutes
	I0405 19:35:01.260917 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.260958 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmps7bw70al.gz
	I0405 19:35:01.262148 140683014930432 genomics_writer.py:183] Writing /tmp/tmps7bw70al.gz with NativeVcfWriter
	I0405 19:35:01.262780 140683014930432 postprocess_variants.py:1432] VCF creation took 3.122091293334961e-05 minutes
	I0405 19:35:01.267350 140683014930432 postprocess_variants.py:1208] Processing region chr1:84763504-chr1:96872576
	I0405 19:35:01.267739 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18676963647206624 minutes
	I0405 19:35:01.268563 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.268613 140683014930432 postprocess_variants.py:1226] Processed 21519 variants.
	I0405 19:35:01.268828 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1867879311243693 minutes
	I0405 19:35:01.268885 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.268924 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpvolynvaq.gz
	I0405 19:35:01.270250 140683014930432 genomics_writer.py:183] Writing /tmp/tmpvolynvaq.gz with NativeVcfWriter
	I0405 19:35:01.275177 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.277119 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.280075 140683014930432 postprocess_variants.py:1208] Processing region chr4:96872576-chr4:108981648
	I0405 19:35:01.280611 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18609537283579508 minutes
	I0405 19:35:01.281733 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1861141840616862 minutes
	I0405 19:35:01.281865 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.281967 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp17z1ccsl.gz
	I0405 19:35:01.283855 140683014930432 genomics_writer.py:183] Writing /tmp/tmp17z1ccsl.gz with NativeVcfWriter
	I0405 19:35:01.285343 140683014930432 postprocess_variants.py:1432] VCF creation took 5.832513173421224e-05 minutes
	I0405 19:35:01.287011 140683014930432 postprocess_variants.py:1208] Processing region chr4:133199792-chr4:145308864
	I0405 19:35:01.287340 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18596799770991007 minutes
	I0405 19:35:01.288109 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18598085641860962 minutes
	I0405 19:35:01.288172 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.288213 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpsrlcz790.gz
	I0405 19:35:01.289379 140683014930432 genomics_writer.py:183] Writing /tmp/tmpsrlcz790.gz with NativeVcfWriter
	I0405 19:35:01.289932 140683014930432 postprocess_variants.py:1432] VCF creation took 2.952416737874349e-05 minutes
	I0405 19:35:01.290638 140683014930432 postprocess_variants.py:1208] Processing region chrY:36327216-chrY:48436288
	I0405 19:35:01.291468 140683014930432 postprocess_variants.py:1208] Processing region chrX:84763504-chrX:96872576
	I0405 19:35:01.291003 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17493006785710652 minutes
	I0405 19:35:01.291948 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17494582732518513 minutes
	I0405 19:35:01.292031 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.292081 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwki_2vhn.gz
	I0405 19:35:01.291900 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17623666524887086 minutes
	I0405 19:35:01.293208 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17625850836435955 minutes
	I0405 19:35:01.292993 140683014930432 postprocess_variants.py:1208] Processing region chrX:60545360-chrX:72654432
	I0405 19:35:01.293309 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.293352 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwki_2vhn.gz with NativeVcfWriter
	I0405 19:35:01.293380 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpawksod47.gz
	I0405 19:35:01.294034 140683014930432 postprocess_variants.py:1432] VCF creation took 3.3688545227050784e-05 minutes
	I0405 19:35:01.293371 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17679473956425984 minutes
	I0405 19:35:01.294169 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17680817047754924 minutes
	I0405 19:35:01.294237 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.294278 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpiv34uqwl.gz
	I0405 19:35:01.295164 140683014930432 genomics_writer.py:183] Writing /tmp/tmpawksod47.gz with NativeVcfWriter
	I0405 19:35:01.295579 140683014930432 genomics_writer.py:183] Writing /tmp/tmpiv34uqwl.gz with NativeVcfWriter
	I0405 19:35:01.296619 140683014930432 postprocess_variants.py:1432] VCF creation took 5.544424057006836e-05 minutes
	I0405 19:35:01.296724 140683014930432 postprocess_variants.py:1432] VCF creation took 4.16874885559082e-05 minutes
	I0405 19:35:01.296854 140683014930432 postprocess_variants.py:1208] Processing region chr13:24218144-chr13:36327216
	I0405 19:35:01.297165 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18272820711135865 minutes
	I0405 19:35:01.298099 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18274383544921874 minutes
	I0405 19:35:01.298158 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.298199 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpoaeny5ij.gz
	I0405 19:35:01.299388 140683014930432 genomics_writer.py:183] Writing /tmp/tmpoaeny5ij.gz with NativeVcfWriter
	I0405 19:35:01.300013 140683014930432 postprocess_variants.py:1432] VCF creation took 3.107388814290365e-05 minutes
	I0405 19:35:01.301694 140683014930432 postprocess_variants.py:1208] Processing region chr1:193745152-chr1:205854224
	I0405 19:35:01.302079 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18725258111953735 minutes
	I0405 19:35:01.302865 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.302918 140683014930432 postprocess_variants.py:1226] Processed 30840 variants.
	I0405 19:35:01.303132 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18727039496103923 minutes
	I0405 19:35:01.303189 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.303231 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp0c1itivz.gz
	I0405 19:35:01.304571 140683014930432 genomics_writer.py:183] Writing /tmp/tmp0c1itivz.gz with NativeVcfWriter
	I0405 19:35:01.309146 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.311517 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.314847 140683014930432 postprocess_variants.py:1208] Processing region chr15:96872576-chr16:12109072
	I0405 19:35:01.315142 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18146586418151855 minutes
	I0405 19:35:01.315906 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18147871494293213 minutes
	I0405 19:35:01.315969 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.316011 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpj7f4l5ql.gz
	I0405 19:35:01.317156 140683014930432 genomics_writer.py:183] Writing /tmp/tmpj7f4l5ql.gz with NativeVcfWriter
	I0405 19:35:01.317940 140683014930432 postprocess_variants.py:1432] VCF creation took 3.3068656921386716e-05 minutes
	I0405 19:35:01.317789 140683014930432 postprocess_variants.py:1208] Processing region chrX:36327216-chrX:48436288
	I0405 19:35:01.318107 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17773707707722983 minutes
	I0405 19:35:01.318812 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17774893840154013 minutes
	I0405 19:35:01.318873 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.318914 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpv0mr_cry.gz
	I0405 19:35:01.320120 140683014930432 genomics_writer.py:183] Writing /tmp/tmpv0mr_cry.gz with NativeVcfWriter
	I0405 19:35:01.320998 140683014930432 postprocess_variants.py:1432] VCF creation took 3.561178843180339e-05 minutes
	I0405 19:35:01.320914 140683014930432 postprocess_variants.py:1208] Processing region chr1:0-chr1:12109072
	I0405 19:35:01.321295 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18771830797195435 minutes
	I0405 19:35:01.322081 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.322133 140683014930432 postprocess_variants.py:1226] Processed 52511 variants.
	I0405 19:35:01.322335 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18773585955301922 minutes
	I0405 19:35:01.322391 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.322432 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp6321pe1p.gz
	I0405 19:35:01.323761 140683014930432 genomics_writer.py:183] Writing /tmp/tmp6321pe1p.gz with NativeVcfWriter
	I0405 19:35:01.326597 140683014930432 postprocess_variants.py:1208] Processing region chr16:84763504-chr16:90338345
	I0405 19:35:01.326889 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18126243750254314 minutes
	I0405 19:35:01.327636 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1812750260035197 minutes
	I0405 19:35:01.327707 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.327758 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp66xgslxc.gz
	I0405 19:35:01.328382 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.328923 140683014930432 genomics_writer.py:183] Writing /tmp/tmp66xgslxc.gz with NativeVcfWriter
	I0405 19:35:01.329890 140683014930432 postprocess_variants.py:1432] VCF creation took 3.6605199178059895e-05 minutes
	I0405 19:35:01.331137 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.336076 140683014930432 postprocess_variants.py:1208] Processing region chrX:24218144-chrX:36327216
	I0405 19:35:01.336343 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17838554779688517 minutes
	I0405 19:35:01.337005 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.178396733601888 minutes
	I0405 19:35:01.337062 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.337103 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpjse_z9bv.gz
	I0405 19:35:01.338190 140683014930432 genomics_writer.py:183] Writing /tmp/tmpjse_z9bv.gz with NativeVcfWriter
	I0405 19:35:01.338850 140683014930432 postprocess_variants.py:1432] VCF creation took 2.992550532023112e-05 minutes
	I0405 19:35:01.348062 140683014930432 postprocess_variants.py:1208] Processing region chr13:48436288-chr13:60545360
	I0405 19:35:01.348410 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18338764508565267 minutes
	I0405 19:35:01.349346 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1834033767382304 minutes
	I0405 19:35:01.349432 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.349493 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3fnla0w2.gz
	I0405 19:35:01.351156 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3fnla0w2.gz with NativeVcfWriter
	I0405 19:35:01.352339 140683014930432 postprocess_variants.py:1432] VCF creation took 4.870096842447917e-05 minutes
	I0405 19:35:01.354174 140683014930432 postprocess_variants.py:1208] Processing region chr12:96872576-chr12:108981648
	I0405 19:35:01.354468 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18381863037745158 minutes
	I0405 19:35:01.355182 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1838306148846944 minutes
	I0405 19:35:01.355248 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.355288 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp426aba_3.gz
	I0405 19:35:01.356462 140683014930432 genomics_writer.py:183] Writing /tmp/tmp426aba_3.gz with NativeVcfWriter
	I0405 19:35:01.357151 140683014930432 postprocess_variants.py:1432] VCF creation took 3.2019615173339846e-05 minutes
	I0405 19:35:01.360549 140683014930432 postprocess_variants.py:1208] Processing region chr20:48436288-chr20:64444167
	I0405 19:35:01.360813 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18019319772720338 minutes
	I0405 19:35:01.361471 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18020429611206054 minutes
	I0405 19:35:01.361530 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.361570 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpsph934v7.gz
	I0405 19:35:01.362663 140683014930432 genomics_writer.py:183] Writing /tmp/tmpsph934v7.gz with NativeVcfWriter
	I0405 19:35:01.363848 140683014930432 postprocess_variants.py:1432] VCF creation took 3.88026237487793e-05 minutes
	I0405 19:35:01.365647 140683014930432 postprocess_variants.py:1208] Processing region chr22:12109072-chr22:24218144
	I0405 19:35:01.366024 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17941409746805828 minutes
	I0405 19:35:01.366792 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17942698001861573 minutes
	I0405 19:35:01.366853 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.366894 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpx6hk7jrh.gz
	I0405 19:35:01.368162 140683014930432 genomics_writer.py:183] Writing /tmp/tmpx6hk7jrh.gz with NativeVcfWriter
	I0405 19:35:01.369809 140683014930432 postprocess_variants.py:1432] VCF creation took 4.9455960591634115e-05 minutes
	I0405 19:35:01.381127 140683014930432 postprocess_variants.py:1208] Processing region chr11:108981648-chr11:121090720
	I0405 19:35:01.381469 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18472310304641723 minutes
	I0405 19:35:01.382217 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1847356875737508 minutes
	I0405 19:35:01.382277 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.382317 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpsp73101w.gz
	I0405 19:35:01.383505 140683014930432 genomics_writer.py:183] Writing /tmp/tmpsp73101w.gz with NativeVcfWriter
	I0405 19:35:01.384510 140683014930432 postprocess_variants.py:1432] VCF creation took 3.7388006846110025e-05 minutes
	I0405 19:35:01.390604 140683014930432 postprocess_variants.py:1208] Processing region chrX:48436288-chrX:60545360
	I0405 19:35:01.390887 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17868760824203492 minutes
	I0405 19:35:01.391566 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17869901259740192 minutes
	I0405 19:35:01.391629 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.391668 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpm2eas9k0.gz
	I0405 19:35:01.392797 140683014930432 genomics_writer.py:183] Writing /tmp/tmpm2eas9k0.gz with NativeVcfWriter
	I0405 19:35:01.393550 140683014930432 postprocess_variants.py:1432] VCF creation took 3.226598103841146e-05 minutes
	I0405 19:35:01.400348 140683014930432 postprocess_variants.py:1208] Processing region chr11:121090720-chr11:133199792
	I0405 19:35:01.400792 140683014930432 postprocess_variants.py:1208] Processing region chrY:24218144-chrY:36327216
	I0405 19:35:01.400624 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18503695726394653 minutes
	I0405 19:35:01.401287 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1850481669108073 minutes
	I0405 19:35:01.401345 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.401385 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpgsqty_98.gz
	I0405 19:35:01.401089 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.17677110036214191 minutes
	I0405 19:35:01.401834 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.17678364515304565 minutes
	I0405 19:35:01.401895 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.401934 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpi_hukc3f.gz
	I0405 19:35:01.402496 140683014930432 genomics_writer.py:183] Writing /tmp/tmpgsqty_98.gz with NativeVcfWriter
	I0405 19:35:01.403043 140683014930432 genomics_writer.py:183] Writing /tmp/tmpi_hukc3f.gz with NativeVcfWriter
	I0405 19:35:01.403196 140683014930432 postprocess_variants.py:1432] VCF creation took 3.102223078409831e-05 minutes
	I0405 19:35:01.403875 140683014930432 postprocess_variants.py:1432] VCF creation took 3.315210342407227e-05 minutes
	I0405 19:35:01.406394 140683014930432 postprocess_variants.py:1208] Processing region chr12:84763504-chr12:96872576
	I0405 19:35:01.406751 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1848851482073466 minutes
	I0405 19:35:01.407536 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18489832878112794 minutes
	I0405 19:35:01.407596 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.407640 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp7qk8duq4.gz
	I0405 19:35:01.408870 140683014930432 genomics_writer.py:183] Writing /tmp/tmp7qk8duq4.gz with NativeVcfWriter
	I0405 19:35:01.409105 140683014930432 postprocess_variants.py:1208] Processing region chr4:108981648-chr4:121090720
	I0405 19:35:01.409836 140683014930432 postprocess_variants.py:1432] VCF creation took 3.7511189778645836e-05 minutes
	I0405 19:35:01.409593 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18821273644765218 minutes
	I0405 19:35:01.410347 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18822544813156128 minutes
	I0405 19:35:01.410411 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.410452 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpj_7vb2wm.gz
	I0405 19:35:01.411612 140683014930432 genomics_writer.py:183] Writing /tmp/tmpj_7vb2wm.gz with NativeVcfWriter
	I0405 19:35:01.412694 140683014930432 postprocess_variants.py:1432] VCF creation took 3.825028737386068e-05 minutes
	I0405 19:35:01.418122 140683014930432 postprocess_variants.py:1208] Processing region chr15:0-chr15:12109072
	I0405 19:35:01.418462 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1835552453994751 minutes
	I0405 19:35:01.419233 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18356817563374836 minutes
	I0405 19:35:01.419291 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.419345 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpprgpfn0i.gz
	I0405 19:35:01.421448 140683014930432 genomics_writer.py:183] Writing /tmp/tmpprgpfn0i.gz with NativeVcfWriter
	I0405 19:35:01.422123 140683014930432 postprocess_variants.py:1432] VCF creation took 4.74095344543457e-05 minutes
	I0405 19:35:01.425944 140683014930432 postprocess_variants.py:1208] Processing region chr21:12109072-chr21:24218144
	I0405 19:35:01.426022 140683014930432 postprocess_variants.py:1208] Processing region chr1:60545360-chr1:72654432
	I0405 19:35:01.426239 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1810840408007304 minutes
	I0405 19:35:01.426985 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18109656969706217 minutes
	I0405 19:35:01.427042 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.427079 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpmnhgcpv5.gz
	I0405 19:35:01.426409 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18941480318705242 minutes
	I0405 19:35:01.427190 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.427238 140683014930432 postprocess_variants.py:1226] Processed 24710 variants.
	I0405 19:35:01.427485 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18943307797114053 minutes
	I0405 19:35:01.427539 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.427576 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmptp0vxmjj.gz
	I0405 19:35:01.428186 140683014930432 genomics_writer.py:183] Writing /tmp/tmpmnhgcpv5.gz with NativeVcfWriter
	I0405 19:35:01.428860 140683014930432 genomics_writer.py:183] Writing /tmp/tmptp0vxmjj.gz with NativeVcfWriter
	I0405 19:35:01.429253 140683014930432 postprocess_variants.py:1432] VCF creation took 3.704229990641276e-05 minutes
	I0405 19:35:01.430698 140683014930432 postprocess_variants.py:1208] Processing region chr8:36327216-chr8:48436288
	I0405 19:35:01.431009 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18780386447906494 minutes
	I0405 19:35:01.431739 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1878161867459615 minutes
	I0405 19:35:01.431798 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.431836 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpw_lk1_hf.gz
	I0405 19:35:01.432906 140683014930432 genomics_writer.py:183] Writing /tmp/tmpw_lk1_hf.gz with NativeVcfWriter
	I0405 19:35:01.433404 140683014930432 postprocess_variants.py:1208] Processing region chr1:36327216-chr1:48436288
	I0405 19:35:01.433642 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.433929 140683014930432 postprocess_variants.py:1432] VCF creation took 3.568728764851888e-05 minutes
	I0405 19:35:01.433773 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18955519596735637 minutes
	I0405 19:35:01.434573 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.434622 140683014930432 postprocess_variants.py:1226] Processed 35073 variants.
	I0405 19:35:01.434826 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1895729660987854 minutes
	I0405 19:35:01.434878 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.434916 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpcddgxhf_.gz
	I0405 19:35:01.435692 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.436172 140683014930432 genomics_writer.py:183] Writing /tmp/tmpcddgxhf_.gz with NativeVcfWriter
	I0405 19:35:01.440577 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.441503 140683014930432 postprocess_variants.py:1208] Processing region chr19:48436288-chr19:58617616
	I0405 19:35:01.441791 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.1820772926012675 minutes
	I0405 19:35:01.442532 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18208969831466676 minutes
	I0405 19:35:01.442593 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.442631 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpubox2v2u.gz
	I0405 19:35:01.442660 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.443746 140683014930432 genomics_writer.py:183] Writing /tmp/tmpubox2v2u.gz with NativeVcfWriter
	I0405 19:35:01.444869 140683014930432 postprocess_variants.py:1432] VCF creation took 3.809928894042969e-05 minutes
	I0405 19:35:01.457519 140683014930432 postprocess_variants.py:1208] Processing region chr21:0-chr21:12109072
	I0405 19:35:01.457815 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18180439869562784 minutes
	I0405 19:35:01.458576 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18181718587875367 minutes
	I0405 19:35:01.458632 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.458668 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpmckd40ya.gz
	I0405 19:35:01.459820 140683014930432 genomics_writer.py:183] Writing /tmp/tmpmckd40ya.gz with NativeVcfWriter
	I0405 19:35:01.461265 140683014930432 postprocess_variants.py:1432] VCF creation took 4.405975341796875e-05 minutes
	I0405 19:35:01.478095 140683014930432 postprocess_variants.py:1208] Processing region chr16:24218144-chr16:36327216
	I0405 19:35:01.478367 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18398651679356892 minutes
	I0405 19:35:01.479086 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1839986284573873 minutes
	I0405 19:35:01.479149 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.479198 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmppcxnt0fg.gz
	I0405 19:35:01.480253 140683014930432 genomics_writer.py:183] Writing /tmp/tmppcxnt0fg.gz with NativeVcfWriter
	I0405 19:35:01.481328 140683014930432 postprocess_variants.py:1432] VCF creation took 3.648996353149414e-05 minutes
	I0405 19:35:01.494685 140683014930432 postprocess_variants.py:1208] Processing region chr21:24218144-chr21:36327216
	I0405 19:35:01.494861 140683014930432 postprocess_variants.py:1208] Processing region chr19:0-chr19:12109072
	I0405 19:35:01.494979 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18196254968643188 minutes
	I0405 19:35:01.495733 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1819752057393392 minutes
	I0405 19:35:01.495789 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.495150 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18307508230209352 minutes
	I0405 19:35:01.495826 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmptwhifx2j.gz
	I0405 19:35:01.495877 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1830872933069865 minutes
	I0405 19:35:01.495932 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.495975 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpyxc05cm_.gz
	I0405 19:35:01.496917 140683014930432 genomics_writer.py:183] Writing /tmp/tmptwhifx2j.gz with NativeVcfWriter
	I0405 19:35:01.497030 140683014930432 genomics_writer.py:183] Writing /tmp/tmpyxc05cm_.gz with NativeVcfWriter
	I0405 19:35:01.498096 140683014930432 postprocess_variants.py:1432] VCF creation took 3.6211808522542316e-05 minutes
	I0405 19:35:01.498107 140683014930432 postprocess_variants.py:1432] VCF creation took 3.88185183207194e-05 minutes
	I0405 19:35:01.498631 140683014930432 postprocess_variants.py:1208] Processing region chr21:36327216-chr21:46709983
	I0405 19:35:01.498984 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18183111349741618 minutes
	I0405 19:35:01.499778 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18184444109598796 minutes
	I0405 19:35:01.499835 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.499873 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpqnm5e3gx.gz
	I0405 19:35:01.501044 140683014930432 genomics_writer.py:183] Writing /tmp/tmpqnm5e3gx.gz with NativeVcfWriter
	I0405 19:35:01.502437 140683014930432 postprocess_variants.py:1432] VCF creation took 4.3563048044840495e-05 minutes
	I0405 19:35:01.506795 140683014930432 postprocess_variants.py:1208] Processing region chr16:12109072-chr16:24218144
	I0405 19:35:01.507095 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18447491725285847 minutes
	I0405 19:35:01.507810 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1844869573911031 minutes
	I0405 19:35:01.507864 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.507901 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpl_ewxe14.gz
	I0405 19:35:01.509066 140683014930432 genomics_writer.py:183] Writing /tmp/tmpl_ewxe14.gz with NativeVcfWriter
	I0405 19:35:01.510062 140683014930432 postprocess_variants.py:1432] VCF creation took 3.6780039469401045e-05 minutes
	I0405 19:35:01.549435 140683014930432 postprocess_variants.py:1208] Processing region chrX:108981648-chrX:121090720
	I0405 19:35:01.549723 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18007428248723348 minutes
	I0405 19:35:01.550554 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1800882895787557 minutes
	I0405 19:35:01.550607 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.550642 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpfnso71s0.gz
	I0405 19:35:01.551674 140683014930432 genomics_writer.py:183] Writing /tmp/tmpfnso71s0.gz with NativeVcfWriter
	I0405 19:35:01.552374 140683014930432 postprocess_variants.py:1432] VCF creation took 2.959569295247396e-05 minutes
	I0405 19:35:01.590702 140683014930432 postprocess_variants.py:1208] Processing region chrX:96872576-chrX:108981648
	I0405 19:35:01.590966 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18095284700393677 minutes
	I0405 19:35:01.591705 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18096532424290976 minutes
	I0405 19:35:01.591754 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.591789 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpt9eb2xpj.gz
	I0405 19:35:01.592751 140683014930432 genomics_writer.py:183] Writing /tmp/tmpt9eb2xpj.gz with NativeVcfWriter
	I0405 19:35:01.593430 140683014930432 postprocess_variants.py:1432] VCF creation took 2.802610397338867e-05 minutes
	I0405 19:35:01.619490 140683014930432 postprocess_variants.py:1208] Processing region chrY:48436288-chr15_KI270727v1_random:448248
	I0405 19:35:01.619741 140683014930432 postprocess_variants.py:1208] Processing region chr18:72654432-chr18:80373285
	I0405 19:35:01.619808 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18016289869944255 minutes
	I0405 19:35:01.620542 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.180175252755483 minutes
	I0405 19:35:01.619996 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18534263769785564 minutes
	I0405 19:35:01.620602 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.620635 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpbp4_7ehr.gz
	I0405 19:35:01.620643 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.1853535294532776 minutes
	I0405 19:35:01.620690 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.620724 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmphxz34w7a.gz
	I0405 19:35:01.621699 140683014930432 genomics_writer.py:183] Writing /tmp/tmpbp4_7ehr.gz with NativeVcfWriter
	I0405 19:35:01.621702 140683014930432 genomics_writer.py:183] Writing /tmp/tmphxz34w7a.gz with NativeVcfWriter
	I0405 19:35:01.622422 140683014930432 postprocess_variants.py:1432] VCF creation took 2.8983751932779947e-05 minutes
	I0405 19:35:01.622430 140683014930432 postprocess_variants.py:1432] VCF creation took 3.063678741455078e-05 minutes
	I0405 19:35:01.633099 140683014930432 postprocess_variants.py:1208] Processing region chr1:24218144-chr1:36327216
	I0405 19:35:01.633439 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.19290334383646648 minutes
	I0405 19:35:01.634163 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.634208 140683014930432 postprocess_variants.py:1226] Processed 40972 variants.
	I0405 19:35:01.634405 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.19291967550913494 minutes
	I0405 19:35:01.634455 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.634492 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpc1aqws8g.gz
	I0405 19:35:01.635668 140683014930432 genomics_writer.py:183] Writing /tmp/tmpc1aqws8g.gz with NativeVcfWriter
	I0405 19:35:01.639849 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.642088 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.650921 140683014930432 postprocess_variants.py:1208] Processing region chr16_KI270728v1_random:0-chrEBV:171823
	I0405 19:35:01.651204 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.180413556098938 minutes
	I0405 19:35:01.651878 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18042489290237426 minutes
	I0405 19:35:01.651929 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.651963 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpuil9u2z7.gz
	I0405 19:35:01.652978 140683014930432 genomics_writer.py:183] Writing /tmp/tmpuil9u2z7.gz with NativeVcfWriter
	I0405 19:35:01.653755 140683014930432 postprocess_variants.py:1432] VCF creation took 3.062089284261068e-05 minutes
	I0405 19:35:01.693662 140683014930432 postprocess_variants.py:1208] Processing region chr1:12109072-chr1:24218144
	I0405 19:35:01.694022 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.19392067591349285 minutes
	I0405 19:35:01.694803 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:01.694849 140683014930432 postprocess_variants.py:1226] Processed 40153 variants.
	I0405 19:35:01.695040 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.19393786986668904 minutes
	I0405 19:35:01.695088 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.695123 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpt5_ewv7i.gz
	I0405 19:35:01.696273 140683014930432 genomics_writer.py:183] Writing /tmp/tmpt5_ewv7i.gz with NativeVcfWriter
	I0405 19:35:01.700906 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:01.703145 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:01.774726 140683014930432 postprocess_variants.py:1208] Processing region chrY:0-chrY:12109072
	I0405 19:35:01.775065 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.18329514265060426 minutes
	I0405 19:35:01.775880 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.18330880800882976 minutes
	I0405 19:35:01.775933 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:01.775969 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmp3k9wz95n.gz
	I0405 19:35:01.777066 140683014930432 genomics_writer.py:183] Writing /tmp/tmp3k9wz95n.gz with NativeVcfWriter
	I0405 19:35:01.777968 140683014930432 postprocess_variants.py:1432] VCF creation took 3.4073988596598305e-05 minutes
	I0405 19:35:02.368731 140683014930432 postprocess_variants.py:1208] Processing region chr1:121090720-chr1:133199792
	I0405 19:35:02.369066 140683014930432 postprocess_variants.py:1215] CVO sorting took 0.20505917469660442 minutes
	I0405 19:35:02.369806 140683014930432 postprocess_variants.py:1219] Transforming call_variants_output to variants.
	I0405 19:35:02.369848 140683014930432 postprocess_variants.py:1226] Processed 118204 variants.
	I0405 19:35:02.370032 140683014930432 postprocess_variants.py:1416] Processing variants (and writing to temporary files) took 0.20507550636927288 minutes
	I0405 19:35:02.370076 140683014930432 postprocess_variants.py:1424] Writing variants to somatic VCF.
	I0405 19:35:02.370115 140683014930432 postprocess_variants.py:1053] Writing output to VCF file: /tmp/tmpwt2isa70.gz
	I0405 19:35:02.371227 140683014930432 genomics_writer.py:183] Writing /tmp/tmpwt2isa70.gz with NativeVcfWriter
	I0405 19:35:02.375414 140683014930432 postprocess_variants.py:1331] Using sample name from call_variants output. Sample name: 1395_Illumina_tumor
	I0405 19:35:02.379280 140683014930432 postprocess_variants.py:1067] 1 variants written.
	I0405 19:35:02.968602 140683014930432 postprocess_variants.py:1432] VCF creation took 0.07999014457066854 minutes
	I0405 19:35:03.113445 140683014930432 postprocess_variants.py:1432] VCF creation took 0.03917525211970011 minutes
	I0405 19:35:03.383339 140683014930432 postprocess_variants.py:1432] VCF creation took 0.12499077320098877 minutes
	I0405 19:35:03.891139 140683014930432 postprocess_variants.py:1432] VCF creation took 0.12828081448872883 minutes
	I0405 19:35:03.911100 140683014930432 postprocess_variants.py:1432] VCF creation took 0.04604150454203288 minutes
	I0405 19:35:04.138608 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0563318411509196 minutes
	I0405 19:35:04.219952 140683014930432 postprocess_variants.py:1432] VCF creation took 0.07827799717585246 minutes
	I0405 19:35:04.311015 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0507020910580953 minutes
	I0405 19:35:04.312345 140683014930432 postprocess_variants.py:1432] VCF creation took 0.05330522457758586 minutes
	I0405 19:35:04.557998 140683014930432 postprocess_variants.py:1432] VCF creation took 0.07223691940307617 minutes
	I0405 19:35:04.681328 140683014930432 postprocess_variants.py:1432] VCF creation took 0.06473213831583659 minutes
	I0405 19:35:04.958442 140683014930432 postprocess_variants.py:1432] VCF creation took 0.05884829759597778 minutes
	I0405 19:35:05.274766 140683014930432 postprocess_variants.py:1432] VCF creation took 0.06921312808990479 minutes
	I0405 19:35:05.585581 140683014930432 postprocess_variants.py:1432] VCF creation took 0.09113179842631022 minutes
	I0405 19:35:05.613696 140683014930432 postprocess_variants.py:1432] VCF creation took 0.07184175252914429 minutes
	I0405 19:35:06.122547 140683014930432 postprocess_variants.py:1432] VCF creation took 0.10866901079813639 minutes
	I0405 19:35:06.388245 140683014930432 postprocess_variants.py:1432] VCF creation took 0.08255600134531657 minutes
	I0405 19:35:07.295511 140683014930432 postprocess_variants.py:1432] VCF creation took 0.0933402935663859 minutes
	I0405 19:35:07.365240 140683014930432 postprocess_variants.py:1432] VCF creation took 0.09551304578781128 minutes
	I0405 19:35:08.644698 140683014930432 postprocess_variants.py:1432] VCF creation took 0.12203832864761352 minutes
	I0405 19:35:17.848027 140683014930432 postprocess_variants.py:1067] 100001 variants written.
	I0405 19:35:19.265010 140683014930432 postprocess_variants.py:1432] VCF creation took 0.28158212105433145 minutes
	Checking the headers of 256 files.
	Done, the headers are compatible.
	I0405 19:35:19.992951 140683014930432 postprocess_variants.py:1604] Indexing VCF and gVCF took 0.005429553985595703 minutes.
	
	real	0m35.460s
	user	25m9.088s
	sys	0m28.399s
	
	***** Running the command:*****
	time /opt/deepvariant/bin/vcf_stats_report --input_vcf "1395_Illumina_wdl_test.vcf.gz" --outfile_base "1395_Illumina_wdl_test"
	
	2025-04-05 19:35:21.036416: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:35:21.856311: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:35:21.856370: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:35:21.856377: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
	2025-04-05 19:35:23.417448: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /.singularity.d/libs
	2025-04-05 19:35:23.417472: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
	I0405 19:35:23.424120 140500592168960 genomics_reader.py:223] Reading 1395_Illumina_wdl_test.vcf.gz with NativeVcfReader
	
	real	0m29.427s
	user	0m38.305s
	sys	0m7.989s
<=========
[2025-04-05T19:35:52-0700] [MainThread] [I] [toil.leader] Issued job 'WDLTaskJob' DeepSomatic.postProcess.command kind-WDLTaskJob/instance-3sqcwfor v1 with job batch system ID: 4 and disk: 119.2 Gi, memory: 3.7 Gi, cores: 2.0, accelerators: [], preemptible: False
[2025-04-05T19:36:29-0700] [MainThread] [I] [toil.leader] Finished toil run successfully.
